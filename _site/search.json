[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Applied Regression in R",
    "section": "",
    "text": "This site contains materials developed for statistics courses at Calvin University.\nIt contains tutorials and reference guides for using R/RStudio for reproducible research with Quarto, data visualization with ggformula, and applied regression using packages including glmmTMB, ggeffects, mgcv, and DHARMa.\nThroughout the website, we will include many code examples. These code examples are live. You can edit the code and re-run it to see how things change.\n\nGive it a try. Run the code below to calculate 1 + 1. Then see if you can get R to compute the product 3 * 5 in the code block below.",
    "crumbs": [
      "Home",
      "Applied Regression in R"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html",
    "href": "quarto/how-to-quarto.html",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "",
    "text": "While you work through this tutorial, you will create a Quarto (.qmd) document.\nQuarto lets you combine R code, output, and text in a single document that can be rendered in HTML, PDF, Word and more formats.\nIt’s like magic: you save all your text and R code in a simple file; when you’re ready, push a button and it’s compiled into an output document with nicely formatted text, code (optional to include, but for this class you always will), and all the figures and tables generated by your code.\nSince all the data analysis and results are automatically included in the compiled output document, your work is reproducible and it’s easy to re-do analysis if the data change, or if a mistake is uncovered.",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#general-instructions",
    "href": "quarto/how-to-quarto.html#general-instructions",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "",
    "text": "While you work through this tutorial, you will create a Quarto (.qmd) document.\nQuarto lets you combine R code, output, and text in a single document that can be rendered in HTML, PDF, Word and more formats.\nIt’s like magic: you save all your text and R code in a simple file; when you’re ready, push a button and it’s compiled into an output document with nicely formatted text, code (optional to include, but for this class you always will), and all the figures and tables generated by your code.\nSince all the data analysis and results are automatically included in the compiled output document, your work is reproducible and it’s easy to re-do analysis if the data change, or if a mistake is uncovered.",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#reference-materials",
    "href": "quarto/how-to-quarto.html#reference-materials",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "Reference Materials",
    "text": "Reference Materials\nFor more details on using Quarto, and detailed documentation, see https://Quarto.org/docs/guide/.\nQuarto and posit also provide substantial resources for learners. This tutorial is tailored to our course, including just the stuff you need and not much you won’t use frequently. But if you want even more about Quarto, you might check out:\n\nTutorials for beginners at https://Quarto.org/docs/get-started/hello/rstudio.html (Hello, Quarto! and Computations are most relevant.)\nDetailed documentation at https://Quarto.org/docs/guide/.\n\n\nOptional Video\nIf you love video introductions, consider also this 23-minute offering from posit and Mine Cetinkaya-Rundel:",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#logistics",
    "href": "quarto/how-to-quarto.html#logistics",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "Logistics",
    "text": "Logistics\nTo create a .qmd file, you will have to work in RStudio (outside this tutorial environment). So, as you work on this tutorial, you will probably switch back and forth between the tutorial itself and an RStudio session at https://r.cs.calvin.edu.\nHistorical Note: The precursor of the Quarto document is the Rmarkdown (.rmd) document (and even older - the Sweave document). If you know and love one of those, you may use it. Our server can handle all options. For now, our class will stick to qmd as our default.",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#getting-started",
    "href": "quarto/how-to-quarto.html#getting-started",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "Getting Started",
    "text": "Getting Started\n\nLogging in to RStudio\nGo to r.cs.calvin.edu and enter your short Calvin user name (example: abc44, without the @calvin.edu) and password to log in.\n\n\nPanels\nWhen you open RStudio, you will see at least three different panels: The Console is on the left. On the upper right are Environment, History and maybe more; on the lower right are Files, Plots, and Packages. Explore a little to try to see what is there!\nFiles shows you the files saved in your personal space on the server. You can organize, upload, and delete files and folders.\n\n\nExecuting code in R\nYou can do things in R by typing commands in the Console panel.\nHowever, working that way makes it hard to keep a record of your work (and hard to redo things if anything changes or if a mistake was made).\nFor this class, you will instead work in Quarto files, which can contain text, R code, and R output (such as figures).\nAfter you have opened a file (like an RMarkdown file) on the RStudio server, the Console panel will be on the lower left and the newly opened file will be on the top left. Let’s learn how to do it…",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#quarto-qmd-files",
    "href": "quarto/how-to-quarto.html#quarto-qmd-files",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "Quarto (qmd) Files",
    "text": "Quarto (qmd) Files\n\nQuarto files are stand-alone!\nEvery Quarto file (qmd file) must be completely stand-alone. It doesn’t share any information with the Console or the Environment that you see in your RStudio session. All R code that you need to do whatever you are trying to do must be included in the qmd file itself!\nFor example, if you use the point-and-click user interface in the RStudio Environment tab to import a data file, that dataset will not be available when rendering your qmd file.\nSimilarly, if you load the mosaic package by typing in the Console window,\n\nlibrary(mosaic)\n\nmosaic functions and data will not be available to use within the qmd file.\n\n\nSo: Keep your qmd files stand-alone! (You have no choice, actually…)\n\n\n\n\nCreate a Quarto file\nIn RStudio, navigate to File -&gt; New File -&gt; Quarto Document…, or click on the white rectangle with a green circle+ :\n\n\n\n\n\n\n\n\n\nand select Quarto from the drop-down menu.\nChoose html or pdf output.\n(Why not Word? Too much temptation to make changes and do formatting after the fact in Word…which makes your work no-longer-reproducible. In qmd, you have documented everything you’ve done. If you make changes after rendering to Word, that’s not true anymore.)\n\n\nSave your qmd file\nSave your file by clicking on the disk icon at the top of the file tab (give it a clear file name like deruiter_quarto_practice.qmd).\nDo your best to avoid spaces and special characters in your file names.\nThe file will be saved to the server, not to your computer. All your files will be accessible in the RStudio Files tab (lower right panel) whenever you log into RStudio, regardless of which computer you are using. You may organize them into directories (folders) if you want.\n\n\n\n\n\n\n\n\n\n\n\nRender!\nHow do qmd files actually work? What’s so cool about them?\nClick on the fat blue arrow next to the word “Render” at the top of the file window.\n\n\n\n\n\n\n\n\n\nCheck out the rendered html or pdf result, and compare it to the original Quarto file.\nWow!\n\n\nSource vs. Visual Editor\nLook to the upper right corner of your qmd file. You should see some buttons that allow you to toggle between “Source” and “Visual” editor modes.\n\n\n\n\n\n\n\n\n\nIn your own file, toggle back and forth a few times. The Source mode lets you see (and type) the straight-up markdown – which is probably nice if you’re already used to it, and annoying or mystifying if not. The Visual mode is more of a what-you-see-is-what-you-get (like the rendered version), point-and-click type interface. You may use whichever you prefer.\n\n\nPersonalize your Markdown file\nAt the top of the Quarto file, there is a section called the “YAML header”. It starts and ends with 3 dashes - - -.\n\n\nIn this part of the file, be very careful what you type: a stray space or character will lead to an error.\n\n\nThis is where you can enter an appropriate title, author(s), and date (within the quotation marks). You can also choose the format you want to render to (usually pdf or html – not in quotes).\n\n\n\n\n\n\n\n\n\nCustomize your YAML header in your own Quarto doc, and then render again to see the effect.\nMake sure you do this for every assignment! (No prof or boss likes getting submissions called “Untitled”…)",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#qmd-file-anatomy",
    "href": "quarto/how-to-quarto.html#qmd-file-anatomy",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "qmd file anatomy",
    "text": "qmd file anatomy\n\nText\nThe Quarto file is where you save all the R commands you want to use, plus any text commenting on the work you are doing and the results you get. Parts of the file with a plain white background are normal text.\nYou can format the text. For example, enclosing a word in asterisks will generate italics, so *my text* in the qmd file will become my text in the PDF. Using two asterisks instead of one will generate boldface, so **my text** becomes my text. You can also make bulleted lists, numbered lists, section headers, and more. For example,\n#### Some Text\nbecomes\n\nSome Text\n(a sub-section header). Fewer hashtags make the text even larger, and more make it smaller.\nCaution! Forgetting the space after the last hashtag will format your text verbatim rather than as a header (#fail). Failing to leave a blank line before the header can also make formatting fail.\nCheck out the Quarto Markdown Basics reference at https://quarto.org/docs/authoring/markdown-basics.html for more examples of how to format text in Quarto.\nFor instructions on how to include R output and special characters (symbols, subscripts, etc.) in your text, see also: https://connect.cs.calvin.edu/STAT341/symbols/\nBefore moving on, try a few of the tricks you just learned in your qmd file. Make it pretty!\n\n\n\nqmd file anatomy: R code chunks\nAn qmd file can (of course!) contain one or more R code chunks. These sections of the file have a grey background onscreen. In Source mode, each one begins with\n```{r}\nand ends with\n```\nlike so:\n\n\n\n\n\n\n\n\n\nIn Visual mode you can’t see the `:\n\n\n\n\n\n\n\n\n\n\n\nHow to add a new R code chunk to your file\nTo add a code chunk to your file in Source editor mode, you have three options.\n\nYou can type in the header and footer by hand to start and end the chunk.\nYou can click on the “add chunk” button at the top right. It’s a green box with the C inside (at the top of the qmd file; choose the first option, “R”, in the pulldown) to insert an empty chunk.\nYou can use a keyboard shortcut: Windows, Ctrl + Alt + I or OS X, Cmd + Option + I\n\nWhen you click the Render button, code in code chunks will be run, and any output will be included in the document.\n\n\n\n\n\n\n\n\n\n\n\nSetup Chunk\nConsider using the first R code chunk in a qmd file to specify settings (for graphics, display, etc.). In this chunk, you can also give R permission to use certain packages (software toolkits) with\n\nlibrary(packagename) \n\nFor example, we will use the ggformula package for graphics. So, verify that the first R code chunk in your file includes the line library(ggformula).\nYou can also specify options for each R code chunk - these go at the top, prefaced by #|. A typical setup chunk for our course might look like:\n\n\n\n\n\n\n\n\n\nNotice that several packages are loaded (that we will use frequently). theme_set() is used to specify some settings for graph output, and knitr::opts_chunk$set() is used to specify whether or not to include R code in the rendered file (Yes please: use echo: true!) and specify the default figure size.\nThere are tons more options and settings, and you can explore them at https://yihui.org/renderr/options/#chunk-options.\nBut for now, if you use something like the setup chunk shown above, it should work well and have what you need for almost all work in this course.\n\n\nThe settings chunk is invisible!\nIf you look carefully at the rendered output, you will see that the setup chunk does not appear there. That’s intentional - when you load packages with library(), they often print a lot of long and pretty useless messages, which you want to omit from your rendered document.\nThis is achieved by having the setting include: false\nHowever, for our course, no chunk other than the setup chunk should have the setting “include: false” (or echo: false for that matter). Generally, anyone evaluating your coursework needs to see all the code you used, not just its output.\n\n\nClean Up\nAt this point, you probably want to get rid of all the extra content in the template.\nIf you haven’t put a setup chunk into your own qmd file…do it now! Here’s another reminder of how it would look:\n\n\n\n\n\n\n\n\n\nNext, Delete everything in the file other than the YAML header and your setup R code chunk.\nNow the clutter is gone and you have space to include your own R code and text.\n(Before going further, make sure it still renders.)",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#running-r-code",
    "href": "quarto/how-to-quarto.html#running-r-code",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "Running R Code",
    "text": "Running R Code\n\nRunning R Code from a qmd file: Render the file\nThere are multiple ways to run and test R code from a markdown file. Sometimes you want to render the whole file and get the PDF or HTML; other times you want to run just a specific bit of code to make sure it’s working correctly.\nEvery time you render the file, all R code will be run automatically.\nA side note: PDF or HTML? Which is preferable?\nI think PDFs are a little more portable and a good default option, and their formatting is best for anything you are going to print out or share via email (especially with less technically inclined folks).\nHowever, later in the semester we may see how to create some pretty cool interactive graphics and/or tables in R, and these can only be rendered in HTML. For this class, you may use either one. (But not Word, remember? Because you’ll lose reproducibility…)\n\n\nRunning R Code from a qmd file: Run Menu\nYou can also use shortcuts/buttons to run specific chunk(s). Here is one way to do it (option 1): Use the Run pulldown menu at the top of the file. (Choose the option you want based on what you are trying to do).\n\n\n\n\n\n\n\n\n\n\n\nRunning Code from a qmd file: Shortcut Button\nHere is another way to use shortcuts/buttons to run only a specific chunk (option 2): Click on the green arrow at the upper right of a code chunk to run the chunk.\n\n\n\n\n\n\n\n\n\n\n\nRunning Code from a qmd file: Copy and Paste\nFinally, here’s a third way to use shortcuts/buttons (option 3):\nCopy the code you want to run, paste to the console window, and hit Enter.\n(Or, place your cursor in the line you want to run and hit ctrl + enter (Windows) or cmd + enter (Mac).)",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#downloading-files-from-rstudio",
    "href": "quarto/how-to-quarto.html#downloading-files-from-rstudio",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "Downloading files from RStudio",
    "text": "Downloading files from RStudio\nYou will have to download your files if you want a copy on your own computer, or to be able to upload a copy to Moodle to turn in.\nTo download, go to the File tab, check the box for the file you want, then select More - Export. from the menu at the top of the File tab.",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#quarto-files-stand-alone",
    "href": "quarto/how-to-quarto.html#quarto-files-stand-alone",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "Quarto Files Stand Alone!",
    "text": "Quarto Files Stand Alone!\nWe already covered this once, but we’re covering it again because it’s one of the most common student mistakes in qmd files!\nIf you run R code in the console or the RStudio GUI (for example, reading in a data set by pasting code into the console or using the Import Dataset button in the Environment tab), you won’t be able to use the results in your markdown file.\nAny and all commands you need, including reading in data, need to be included in the file.\nThe reverse is also true. If you run just one R code chunk in a qmd file using the “run” buttons mentioned above, or by copy-pasting into the console, you are effectively running that code in the console.\nIf R gives an error saying it cannot find a certain funtion, variable, or dataset, the most likely fix is to run the preceding code chunks (especially setup!) before the one you’re stuck on.",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#reading-data-from-url",
    "href": "quarto/how-to-quarto.html#reading-data-from-url",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "Reading Data from URL",
    "text": "Reading Data from URL\nYou can load online datafiles in .csv format into R using the function read_csv(). The input to read_csv() is the full url where the file is located, in quotation marks. (Single or double quotes – it doesn’t matter which you choose, as they are equivalent in R.)\nFor example, we will consider a dataset with counts of the numbers of birds of different species seen at different locations in Hawai’i. It is stored at https://sldr.netlify.app/data/hawaii_birds.csv, and can be read into R using the command below.\n\nhi_birds &lt;- read_csv('https://sldr.netlify.app/data/hawaii_birds.csv')\n\n\nWhen you read in data, store it to a named object\nNote that we didn’t just run the read_csv() function – we assigned the results a name so that instead of printing the data table to the screen, R stores the dataset for later use.\n\nhi_birds &lt;- read_csv('https://sldr.netlify.app/data/hawaii_birds.csv')\n\nHere, we assigned the name hi_birds to the dataset using an “assignment arrow” &lt;- (the “arrow” points from the object toward the name).",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#reading-data-from-google-sheets",
    "href": "quarto/how-to-quarto.html#reading-data-from-google-sheets",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "Reading Data from Google Sheets",
    "text": "Reading Data from Google Sheets\nThere’s also a simple way to read in data from a Google Sheet.\nFirst, go to the Google Sheet online to prepare it by “publishing it online”.\nIn the File menu, choose “Publish to the Web”:\n\n\n\n\n\n\n\n\n\nIn the pop-up window, choose to publish your “Entire Document” as a .csv file:\n\n\n\n\n\n\n\n\n\nFinally, copy the resulting link.\n\n\n\n\n\n\n\n\n\nYou can use read_csv() with this link as input to read your data into R.",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#reading-data-from-local-file",
    "href": "quarto/how-to-quarto.html#reading-data-from-local-file",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "Reading Data from Local File",
    "text": "Reading Data from Local File\nYou can also upload your own data file to the server, and then read it in to R using read_csv(). The basic process is:\n\nUse spreadsheet software to create the data table\nSave the file as a csv file.\nUpload the csv file to the RStudio server\nUse the read_csv() function to read the file into R",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#a-few-very-basic-r-functions",
    "href": "quarto/how-to-quarto.html#a-few-very-basic-r-functions",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "A few (very) basic R functions",
    "text": "A few (very) basic R functions\nAfter reading the data in, you can use R functions to have a look at it, for example:\n\nhead(hi_birds)\nglimpse(hi_birds)\nnrow(hi_birds)\n\nTry each of the lines of code above in R. What do the functions head(), glimpse(), and nrow() do? Try to figure it out based on the output they produce.\nIf you get stuck, consult R’s built-in help files. Remember, you can access the help for a function by running the code ?functionName – for example, if you want help on head(), run:\n\n?head",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This site contains materials developed for statistics courses at Calvin University.\nIt contains tutorials and reference guides for using R/RStudio for reproducible research with Quarto, data visualization with ggformula, and applied regression using packages including glmmTMB, ggeffects, mgcv, and DHARMa."
  },
  {
    "objectID": "quarto/r-basics.html",
    "href": "quarto/r-basics.html",
    "title": "R Basics",
    "section": "",
    "text": "The purpose of this tutorial is to help you start to get familiar with the way R works, and some basic R commands.\nBut you may have noticed that you are not even using R. At least, you haven’t logged in to RStudio server. (Ummm, wait - don’t click that link! We don’t need it…yet.)\nThis tutorial environment lets you read some helpful information, then practice writing and running your own R code, without tabbing back and forth between the tutorial website and RStudio. Here’s hoping it provides a nice, gentle introduction in a controlled environment!\nTutorials can also serve as helpful reference guides later on, if you need reminders or more practice. Bookmark this site, please!",
    "crumbs": [
      "Home",
      "R Basics",
      "R Basics"
    ]
  },
  {
    "objectID": "quarto/r-basics.html#your-mission",
    "href": "quarto/r-basics.html#your-mission",
    "title": "R Basics",
    "section": "",
    "text": "The purpose of this tutorial is to help you start to get familiar with the way R works, and some basic R commands.\nBut you may have noticed that you are not even using R. At least, you haven’t logged in to RStudio server. (Ummm, wait - don’t click that link! We don’t need it…yet.)\nThis tutorial environment lets you read some helpful information, then practice writing and running your own R code, without tabbing back and forth between the tutorial website and RStudio. Here’s hoping it provides a nice, gentle introduction in a controlled environment!\nTutorials can also serve as helpful reference guides later on, if you need reminders or more practice. Bookmark this site, please!",
    "crumbs": [
      "Home",
      "R Basics",
      "R Basics"
    ]
  },
  {
    "objectID": "quarto/r-basics.html#communicating-with-r",
    "href": "quarto/r-basics.html#communicating-with-r",
    "title": "R Basics",
    "section": "Communicating with R",
    "text": "Communicating with R\nYou will do most of your work in R with code or commands. Instead of pointing and clicking, you will type one or more lines of code, which R will execute (doing the work you have asked it to do).\nThen, R will return the results of whatever operation you asked it to do - sometimes producing a plot, other times creating a plot.\nSometimes executing code has almost no visible effect (no plot or text output is produced), but instead some object is created and stored in R’s environment for later use.\n\nTwo Key Questions\nTo get R (or any software) to do something for you, there are two important questions you must be able to answer. Before continuing, think about what those questions might be.\n\n\nThe Questions\nTo get R (or any software) to do a job for you, there are two important questions you must be able to answer:\n\n1. What do you want the computer to do?\n\n\n2. What must the computer know in order to do that?\n\n\n\nProviding R with the information it needs\nR functions provide R with the answer to the first question: what do you want the computer to do?\nMost functions in R have short, but descriptive names that describe what they do. For example, R has some functions to do basic mathematical operations: the function sqrt() computes the square root of a number, and the function round() rounds a number (by default, it rounds to the nearest integer).\nBut just giving R a function is not enough: you also need to answer the second question (what information does R need to do the job?). For example, if you want to use the function round(), you also need to provide R with the number you want to round!\nWe will provide answers to our two questions by filling in the boxes of a basic template:\n\n\nfunction (  information1  ,  information2  , …)\n\n\n \n(The ... indicates that there may be some additional input arguments (input information we could provide to R) we could add eventually. Some functions need only one input, but if a function takes more than one argument, they are separated by commas. They have names, and if named (like: function(input_name = value, input2_name = 'value')) they can be in any order.\n\n\nUsing simple functions\nLet’s practice what you just learned, trying out the mathematical sqrt() and round() functions.\nEdit the code below to compute the square root of 64:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHint 1\n\n\n\n\n\nConsider using the sqrt() function:\nsqrt(___)\n\n\n\n\n\n\n\n\n\n\n\nHint 2\n\n\n\n\n\nThe input information that sqrt() needs to make your calculation is the number you want the square root of: 64.\n\n\n\n\n\n\n\n\n\n\n\nSolution:\n\n\n\n\n\nsqrt(64)\n\n\n\n\nNow try computing the square root of 44, and then rounding it to the nearest integer:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHint 1\n\n\n\n\n\nYou’ll need to use two functions this time:\nThe sqrt() function, and then the round() function.\nsqrt(___)\nround(___)\n\n\n\n\n\n\n\n\n\n\n\nHint 2\n\n\n\n\n\nThe input information that sqrt() needs to make your calculation is the number you want the square root of: 44. Run that code first, to get the input you will need for round()…\nsqrt(44)\nround(___)\n\n\n\n\n\n\n\n\n\n\n\nSolution:\n\n\n\n\n\nsqrt(44)\nround(6.63325)\nCan you do it all in one go? Well…yes!\nround(sqrt(44))\nThere’s also an easier-to-read way to do that, using a pipe operator |&gt;. It takes the output of one operation and passes it as input to the next. You can read it as |&gt; = “and then…” so we could do:\nsqrt(44) |&gt;\n  round()\n\nTake the square root of 44, and then\nround the result.\n\n(More on pipes later!)\n\n\n\n\n\n\nStoring information in R: variables\nIn the last section, you computed the square root of 44 and then rounded it, perhaps like this:\n\nsqrt(44)\n\n[1] 6.63325\n\nround(6.63325)\n\n[1] 7\n\n\nBut to do that, you probably had to first find the root, make a note of the result, and then provide that number to the round function. What a pain!\nA very useful option, if you have value (or a variable, dataset, or other R object) that you will want to use later on, is to store it as a named object in R. In the previous example, you might want to store the square root of 44 in a variable called my_root; then you can provide my_root to the round() function without checking the result of the sqrt() calculation first:\n\nmy_root &lt;- sqrt(44)\nround(my_root)\n\n[1] 7\n\n\nNotice that to assign a name to the results of some R code, you use the symbol &lt;-. You can think of it as an assignment arrow – it points from a value or item toward a name and assigns the name to the thing.\nTry editing the code to change the name of the variable from my_root to something else, then run your new code:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nMake sure you change the name my_root in both places.\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nyour_new_name &lt;- sqrt(44)\nround(your_new_name)\n\n\n\n\n\n\nWhat if I have a list of numbers to store?\nSometime you might want to create a variable that contains more than one number. You can use the function c() to concatenate a list of numbers:\n\nmy_fave_numbers &lt;- c(4, 44, 16)\nmy_fave_numbers\n\n[1]  4 44 16\n\n\n(First we stored the list of numbers, calling it my_fave_numbers; then we printed the results to the screen by simply typing the variable name my_fave_numbers).\nTry making a list of your three favorite numbers, then using the function sum to add them all up:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nFirst use c() to concatenate your chosen numbers (separated by commas).\nDon’t forget to use &lt;- to assign your list of numbers a name!\nThen, use sum() to add them up.\nmy_numbers &lt;- c(___,___,___)\nsum(___)\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThis is just one possible solution.\nmy_numbers &lt;- c(4, 16, 44)\nsum(my_numbers)\nNotice you could also nest sum() and c(), or use the pipe operator |&gt; to calculate the numeric answer, but then you would not have the object my_numbers available for later use…\nsum(c(4, 16, 44))\n# or \nc(4, 16, 44) |&gt;\n  sum()\n\n\n\n\n\n\nWhat about data that are not numeric?\nR can work with categorical data as well as numeric data. For example, we could create a list of words and store it as a variable if we wanted (feel free to try changing the words if you want):\n\n\n\n\n\n\n\n\n\n\nWhat if I have a LOT more data to store?\nc() works great for creating small lists of just a few values, but it is not a good way to enter or store large data tables - there is lots of potential for user error. In this course, you will usually be given a dataset already in electronic form; if you need to create one, you would turn to spreadsheet or database software. Either way you read the existing data file into R directly.\nIn R, these larger datasets are stored as objects called data.frames. The next sections will get you started using them.",
    "crumbs": [
      "Home",
      "R Basics",
      "R Basics"
    ]
  },
  {
    "objectID": "quarto/r-basics.html#how-should-data-tables-be-organized-for-statistical-analysis",
    "href": "quarto/r-basics.html#how-should-data-tables-be-organized-for-statistical-analysis",
    "title": "R Basics",
    "section": "How should data tables be organized for statistical analysis?",
    "text": "How should data tables be organized for statistical analysis?\nA comprehensive guide to good practices for formatting data tables is available at http://kbroman.org/dataorg/.\nA few key points to keep in mind:\n\nThis data table is for the computer to read, not for humans! So eliminate formatting designed to make it “pretty” (color coding, shading, fonts…)\nUse short, simple variable names that do not contain any spaces or special characters (like ?, $, %, -, etc.)\nOrganize the table so there is one column for every variable, and one row for every observation (person/place/thing for which data were collected).\nUse informative variable values rather than arbitrary numeric codes. For example, a variable Color should have values ‘red’, ‘white’, and ‘blue’ rather than 1, 2, and 3.\n\nYou will have chances to practice making your own data files and importing them into R outside this tutorial.",
    "crumbs": [
      "Home",
      "R Basics",
      "R Basics"
    ]
  },
  {
    "objectID": "quarto/r-basics.html#using-built-in-datasets-in-r",
    "href": "quarto/r-basics.html#using-built-in-datasets-in-r",
    "title": "R Basics",
    "section": "Using built-in datasets in R",
    "text": "Using built-in datasets in R\nR has a number of built-in datasets that are accessible to you as soon as you start RStudio.\nIn addition to the datasets that are included with base R, there are add-on packages for R that contain additional software tools and sometimes datasets.\nTo use datasets contained in a package, you have to load the package by running the command:\n\nlibrary(packagename) \n\n\nExample of loading a package\nFor example, we will practice looking at a dataset from the package mosaic.\nBefore we can access the data, we have to load the package. The code might look like this:\n\nlibrary(mosaic)\n\n(Nothing obvious will happen when you run this code…it basically just gives R permission to access the package, so there is often no output visible.)\n\n\nViewing a dataset\nThe mosaic package includes a dataset called HELPrct.\nIf you just run the dataset name (HELPrct) as a command, R will print some of the dataset out to the screen:\n\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\n\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\n\n\nAttaching package: 'mosaic'\n\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nHELPrct\n\n    age anysubstatus anysub cesd  d1 daysanysub dayslink drugrisk e2b female\n1    37            1    yes   49   3        177      225        0  NA      0\n2    37            1    yes   30  22          2       NA        0  NA      0\n3    26            1    yes   39   0          3      365       20  NA      0\n4    39            1    yes   15   2        189      343        0   1      1\n5    32            1    yes   39  12          2       57        0   1      0\n6    47            1    yes    6   1         31      365        0  NA      1\n7    49           NA   &lt;NA&gt;   52  14         NA      334        0   1      1\n8    28            1    yes   32   1         47      365        7   8      0\n9    50            1    yes   50  14         31      365       18   7      1\n10   39            1    yes   46   4        115      382       20   3      0\n11   34           NA   &lt;NA&gt;   46   0         NA      365        8  NA      1\n12   58            0     no   49   3        192      365        0  NA      1\n13   58            1    yes   22   5          6      365        0  NA      0\n14   60            1    yes   36  10          6       22        0   1      0\n15   36            1    yes   43   2          0      443        0  NA      0\n16   28            1    yes   35   6         27       41        0   2      1\n17   35            1    yes   19   1          2      405        0  NA      0\n18   29            0     no   40   2        220      449        0   1      0\n19   27            0     no   52   0        198       49       10   4      1\n20   27            1    yes   37   1         52      367        0  NA      0\n21   41           NA   &lt;NA&gt;   35   1         NA      391       12   1      0\n22   33            1    yes   18   1        129      272        0  NA      0\n23   34           NA   &lt;NA&gt;   36   4         NA      293        0   2      0\n24   31            1    yes   28   2          3      428        0   3      0\n25   48            1    yes   19   4         67      365        0  NA      1\n26   34            1    yes   30   1        154       56        0  NA      0\n27   35            1    yes   27   0         34      361        1  NA      0\n28   34            0     no   24   0        204      365        0  NA      0\n29   29            1    yes   47   1        142       79        0   3      0\n30   35            0     no   45   2        189      364        0  NA      0\n31   43            1    yes   18  10          4      365        0  NA      0\n32   37            0     no   11   0        203      203        3  NA      0\n33   29            0     no   26   1        193      354        0  NA      0\n34   33            1    yes   29   1         10       29        0  NA      0\n35   20            1    yes   34   1        177      365        0  NA      0\n36   38            0     no   37   2        195      365        0   3      0\n37   28            1    yes   23   0          7      365        1   2      0\n38   33            1    yes   41   7         14      365        0   3      0\n39   40           NA   &lt;NA&gt;   21   0         NA      365        1  NA      0\n40   43            0     no   16  15        191      414        0  NA      0\n41   28            1    yes   36   1         31      414        0  NA      0\n42   45            0     no   17   2        174       43        0   2      0\n43   42            1    yes   36   2         17       38        7  NA      0\n44   30           NA   &lt;NA&gt;   19   0         NA      264        0  NA      0\n45   34            1    yes    5   2         23       14        0  NA      1\n46   36            1    yes   25   2          2      377        0  NA      0\n47   44           NA   &lt;NA&gt;   36   5         NA      321       19   1      0\n48   41            1    yes   27   0         30       NA        0  NA      0\n49   30            0     no   44   2        209       26       21   2      0\n50   37            1    yes   29   2        111       18        0  NA      0\n51   35            1    yes   46   3         17      365        0  NA      1\n52   37            1    yes   16   5        137      171        0  NA      0\n53   44            1    yes   44   1          4       27        0  NA      0\n54   47            1    yes   42   2          3      190        0   4      0\n55   38            1    yes   30   5         18       30        0   2      0\n56   37            1    yes   25   0          2      365        1  NA      0\n57   34            1    yes   26   1          1      365        0  11      0\n58   41            0     no   29   3        181       19        0   2      1\n59   29            0     no   33   3        180      365        1   4      1\n60   35            1    yes   28   1         36      400        0   1      0\n61   36           NA   &lt;NA&gt;   33   0         NA      365        0   1      0\n62   27            0     no   44   3        252      431        0   1      0\n63   36            0     no   29   1        195      195        0   1      0\n64   40            0     no   57   5        181       34        0  NA      1\n65   38           NA   &lt;NA&gt;   26   4         NA      133        1  NA      0\n66   42            1    yes   31   2        103       48        8   3      0\n67   26           NA   &lt;NA&gt;   30   4         NA       NA        0  NA      1\n68   41            1    yes   43   0          2       NA       10  NA      1\n69   43            1    yes   28  10         78      365        0  NA      0\n70   28            1    yes   29   3          9      129        0   2      0\n71   30            1    yes   32   2         53       NA        3  NA      0\n72   42           NA   &lt;NA&gt;   30   4         NA       35        0  NA      0\n73   22            1    yes   34   7          4      365        0   1      0\n74   31           NA   &lt;NA&gt;   49   2         NA      439        3   1      0\n75   30            0     no   36   0        177       44        0   3      0\n76   25           NA   &lt;NA&gt;   42   1         NA      365        1   1      0\n77   26            1    yes   40   1          4       77       10  NA      0\n78   35            1    yes   29   1         47       35        0   1      0\n79   53            1    yes   31   3          5      365        0   1      0\n80   29           NA   &lt;NA&gt;   10   2         NA      143        0  NA      0\n81   32            1    yes   37   2        175      365        0  NA      1\n82   24            1    yes   32   2        168      115        3   1      0\n83   35            1    yes   16   1         20      386        1   3      0\n84   32            1    yes   15   0         55      365        0  NA      0\n85   47            1    yes    4   2         56       63        1  NA      0\n86   26           NA   &lt;NA&gt;   30   2         NA      365        0  NA      0\n87   45            1    yes   44   2         63       35       14   1      0\n88   33           NA   &lt;NA&gt;    8   1         NA       NA        0  NA      0\n89   45           NA   &lt;NA&gt;   16  20         NA      365        0   2      0\n90   33           NA   &lt;NA&gt;   47   9         NA       38        0   3      1\n91   27            1    yes   49   1        222      136        0  NA      0\n92   40            1    yes   30   2          9       37        1  NA      0\n93   40           NA   &lt;NA&gt;   36   1         NA      217        0   1      1\n94   37            1    yes   48   3         16      349        0  NA      0\n95   26            1    yes   17   1         59       NA        0  NA      0\n96   27            1    yes   39   0        102      365        0   3      0\n97   35           NA   &lt;NA&gt;   30   2         NA       16        0  NA      1\n98   29           NA   &lt;NA&gt;   24   0         NA       NA       10   2      0\n99   33           NA   &lt;NA&gt;   25   2         NA       60        0  NA      0\n100  39            1    yes   51   3          2      365        0   5      0\n101  33            1    yes   17   3          3      365        7  NA      0\n102  35            1    yes   37  20         63      399        0  NA      0\n103  38           NA   &lt;NA&gt;   45   0         NA       NA        0   1      0\n104  44            1    yes   28   1         47      112       17   1      0\n105  28           NA   &lt;NA&gt;   17   3         NA      365        0  NA      0\n106  33           NA   &lt;NA&gt;   23   0         NA       NA        0  NA      0\n107  30            0     no   39   0        201       18        0   1      1\n108  35            1    yes   38   2        114      365        0   4      0\n109  32           NA   &lt;NA&gt;   53  15         NA       41        0  NA      1\n110  42            0     no   26  10        183      358        0   2      1\n111  37            0     no   47   0        183      169        0  NA      0\n112  41           NA   &lt;NA&gt;   49   4         NA      365        0   1      0\n113  28            1    yes   34   5          0      325       17   2      0\n114  30           NA   &lt;NA&gt;   51   9         NA       NA        9   1      1\n115  35            1    yes   33   2          2      345        0  14      0\n116  35           NA   &lt;NA&gt;   58   5         NA       17        0   2      1\n117  41            1    yes   28   1         17      104        0  NA      0\n118  37            0     no    4   2        183       36        0  NA      0\n119  30            1    yes   15   1         15      365        0  NA      1\n120  39            1    yes   40   3         11      365        0   4      0\n121  32           NA   &lt;NA&gt;   33   2         NA       NA        0  NA      0\n122  50            0     no   35   6        178       49        0  NA      1\n123  33           NA   &lt;NA&gt;   28   1         NA       90        0   2      0\n124  27            1    yes   21   0        163      169        0  NA      0\n125  33            1    yes   33   0          7      399        1  NA      0\n126  38           NA   &lt;NA&gt;   26   4         NA       28        0  NA      1\n127  43            1    yes   45   6          4      358        0   8      0\n128  24            1    yes   45   0         68      365        0   1      1\n129  35            1    yes   31  10        185      387        0   1      0\n130  49           NA   &lt;NA&gt;   28  13         NA      193        0   1      1\n131  49            1    yes   22   5          1      126        0   4      0\n132  33           NA   &lt;NA&gt;   39   1         NA      365        1   1      0\n133  24            0     no   31   0        183       52        9   1      0\n134  28            1    yes   48   4         12      413        0  NA      1\n135  45            0     no   48   2        185       50        0   7      0\n136  46           NA   &lt;NA&gt;   34  20         NA       NA        0  NA      0\n137  37           NA   &lt;NA&gt;   35   1         NA      106        0  NA      1\n138  32            0     no   46   2        183       42        0  NA      0\n139  45           NA   &lt;NA&gt;   34   1         NA      303       11   2      0\n140  39            0     no   10   0        186       30        0   1      0\n141  34            1    yes   31   1        146      113        0  NA      0\n142  32           NA   &lt;NA&gt;   34   2         NA      365        0   3      0\n143  32            1    yes   26   2          5      369        0   1      0\n144  31            1    yes   15   1         31      365        0  NA      1\n145  45           NA   &lt;NA&gt;   48   1         NA       98        0   2      0\n146  30           NA   &lt;NA&gt;   37   1         NA      338        0  NA      0\n147  36            1    yes   20   8         57      365        7   1      0\n148  25            1    yes   38   3          0      414        8   1      0\n149  48            0     no   39   8        178       58        0  NA      0\n150  42            0     no   46   1        256      368        0   1      0\n151  33            1    yes   17   1         61      364        0   1      0\n152  36           NA   &lt;NA&gt;    6   1         NA      365        1  NA      0\n153  41           NA   &lt;NA&gt;   18   4         NA      365        0  NA      0\n154  30            1    yes   29   2         12      365        0  NA      1\n155  57           NA   &lt;NA&gt;   51  10         NA      365        0  NA      0\n156  57            1    yes   39   4         28      380        0   1      1\n157  47           NA   &lt;NA&gt;   31   2         NA      365        5  NA      0\n158  54            1    yes   49   0          0       38        0   4      0\n159  55            0     no   43   1        164       31        0  NA      0\n160  33            1    yes   45   1         13      330       10   1      0\n161  29           NA   &lt;NA&gt;   46   6         NA      365        5   3      1\n162  33           NA   &lt;NA&gt;   44   4         NA      427        0  NA      1\n163  28           NA   &lt;NA&gt;   41   3         NA      443       11   2      0\n164  37            0     no   29   2        163       29        0  NA      0\n165  28            1    yes   38   3        117      218        0  NA      1\n166  32           NA   &lt;NA&gt;   51   1         NA      365        0  NA      0\n167  31           NA   &lt;NA&gt;   38  10         NA      405       20   1      1\n168  36           NA   &lt;NA&gt;   53   3         NA       45        0   3      1\n169  39           NA   &lt;NA&gt;   29   2         NA       14        0   2      0\n170  29           NA   &lt;NA&gt;   31   1         NA      424       13   1      0\n171  38           NA   &lt;NA&gt;   57   4         NA      370        0  NA      1\n172  33           NA   &lt;NA&gt;   38   0         NA       NA        0   2      0\n173  31           NA   &lt;NA&gt;   39  10         NA       17        2  NA      0\n174  39           NA   &lt;NA&gt;   43   1         NA      365       13   1      1\n175  33            1    yes   19  40          3      146        0   1      1\n176  31            1    yes   23   0          9       15        0  NA      0\n177  46            1    yes   44   1        144       14        0   6      0\n178  36            1    yes   12   1         11      140        0  NA      0\n179  22            1    yes   35   0          1      365        0   4      0\n180  33            1    yes   47   2         27      365        0   2      0\n181  35           NA   &lt;NA&gt;   53   2         NA      365       14   2      0\n182  38            1    yes   34   1          0      348       14   1      1\n183  28           NA   &lt;NA&gt;   15   1         NA       48        0  NA      0\n184  33           NA   &lt;NA&gt;   31   2         NA       32        0   2      0\n185  49            1    yes   27   2         61      365        0  NA      0\n186  43           NA   &lt;NA&gt;   36   1         NA       18        0  NA      1\n187  33            1    yes   24   6          2      365        1  NA      1\n188  29           NA   &lt;NA&gt;   54   0         NA      407        4  NA      1\n189  34            0     no   31   2        183       30        0  NA      0\n190  41           NA   &lt;NA&gt;   22   4         NA      365        0  NA      0\n191  47            0     no   41   1        190       78        0  NA      1\n192  24           NA   &lt;NA&gt;   23   0         NA      365        0  NA      0\n193  31           NA   &lt;NA&gt;   18   3         NA       NA        8   1      1\n194  40           NA   &lt;NA&gt;   60   7         NA      406        0  NA      1\n195  32            0     no   34   3        184      365        0  NA      1\n196  32            0     no   26   4        192       22        0   3      0\n197  39           NA   &lt;NA&gt;   40   1         NA      365        0   1      0\n198  19           NA   &lt;NA&gt;   40   1         NA       63        0   8      0\n199  49            1    yes    1   2        166       78        0  NA      0\n200  27           NA   &lt;NA&gt;   41   4         NA      365        1   4      0\n201  38            0     no   38   3        247      365        0   1      1\n202  32            1    yes   37   1         82      348        0  NA      1\n203  22            0     no   16   1        162      357        0  NA      0\n204  36            1    yes   33   3         47       12        0  NA      0\n205  32            1    yes    4   0         88       50        0  NA      0\n206  35           NA   &lt;NA&gt;   24   1         NA      365        0  NA      1\n207  35            0     no   34   1        172      136        0  NA      1\n208  41            1    yes   40   2         63       22        0  NA      0\n209  36            1    yes   39   2         94        7        0  NA      0\n210  43            1    yes   32   2         73       70        0  NA      0\n211  45            1    yes   40   5          7      365        0   1      1\n212  39            1    yes   51   4         33      331        0  NA      0\n213  47           NA   &lt;NA&gt;   39   2         NA      365        1   3      1\n214  32            1    yes   40   6        183       76        0  NA      0\n215  33            1    yes   22   0          9      183        0  NA      0\n216  39            1    yes   42   4        215      428        0  NA      1\n217  44           NA   &lt;NA&gt;   13   0         NA      365        0  NA      1\n218  35           NA   &lt;NA&gt;   49   4         NA       43        0   1      0\n219  31            1    yes   35   1         32      307        1   3      0\n220  25           NA   &lt;NA&gt;   43   0         NA      365        0  NA      0\n221  48            1    yes   27   1         74      353        0   6      0\n222  35           NA   &lt;NA&gt;   40   1         NA       37        0  NA      0\n223  42           NA   &lt;NA&gt;   38   4         NA      349        0   2      0\n224  51            1    yes   39   6          4      272        0   4      0\n225  55            1    yes   30   2         11       40        0   2      1\n226  32            1    yes   35   6         70       37        0  NA      0\n227  41            1    yes   34   2          2      365        0   3      0\n228  34           NA   &lt;NA&gt;   19   1         NA      329        0  NA      1\n229  30           NA   &lt;NA&gt;   39   2         NA      442        0  NA      0\n230  34           NA   &lt;NA&gt;   36   1         NA      326        0  NA      1\n231  38           NA   &lt;NA&gt;   58   8         NA      452        0   1      0\n232  41           NA   &lt;NA&gt;   38   2         NA       24        2  NA      0\n233  31           NA   &lt;NA&gt;   22   0         NA      359        0  NA      1\n234  29           NA   &lt;NA&gt;   46   2         NA      336        0   3      0\n235  36           NA   &lt;NA&gt;   31  10         NA      365        0   1      0\n236  45           NA   &lt;NA&gt;   11   0         NA      379        0  NA      0\n237  36           NA   &lt;NA&gt;   32   2         NA      434       10  NA      0\n238  30            1    yes   33   1         59       12        0  NA      0\n239  40            1    yes   39   1         16      294        0  NA      0\n240  27            1    yes   33   0          4      365        0   2      1\n241  39           NA   &lt;NA&gt;   27   1         NA       21        0  NA      0\n242  39            0     no   43   4        170      350        0   2      0\n243  37            1    yes   30   1          2      440        0   5      0\n244  43            1    yes   12   4         11      236        0   4      0\n245  20            1    yes   42   1         20      365        0  NA      0\n246  35            1    yes   31   2         32       35        5  17      0\n247  32           NA   &lt;NA&gt;   40   6         NA       29       11   2      0\n248  42            0     no   17   0        188      456        0  NA      0\n249  27           NA   &lt;NA&gt;   44   0         NA      279        0  NA      0\n250  30           NA   &lt;NA&gt;   15   2         NA      365        0  NA      0\n251  27           NA   &lt;NA&gt;   41   0         NA      365        8   3      0\n252  41           NA   &lt;NA&gt;   51   3         NA      349        0  NA      0\n253  32            1    yes   24  20          7       46        6   1      0\n254  47            1    yes   29   1         31      368        0   1      0\n255  36           NA   &lt;NA&gt;   40   2         NA      365        0   2      0\n256  32            1    yes   33   2          2      365        0   1      0\n257  33            1    yes   51   1          5      365        1   6      1\n258  30           NA   &lt;NA&gt;   30   6         NA       83        0  NA      1\n259  29           NA   &lt;NA&gt;   46   0         NA       79        8  NA      0\n260  34           NA   &lt;NA&gt;   38   2         NA      365        8  NA      1\n261  34            1    yes   42   0         52      365        1   2      0\n262  40           NA   &lt;NA&gt;   17   2         NA      365        0   2      0\n263  45           NA   &lt;NA&gt;   22   3         NA      365        7  21      0\n264  37            0     no   37   2        179       41        0  NA      1\n265  32           NA   &lt;NA&gt;   11   2         NA       17        0  NA      0\n266  26           NA   &lt;NA&gt;   56   2         NA      365        0  NA      1\n267  31            1    yes   14   0          2      365        0   1      0\n268  39            1    yes   26   0         94      425        0  NA      0\n269  49            1    yes   36   1         94      365        0  NA      0\n270  45            1    yes   41   0         33      365        4   1      1\n271  43           NA   &lt;NA&gt;   18   0         NA      365       10  NA      0\n272  38           NA   &lt;NA&gt;   19   1         NA      365        0  NA      0\n273  23            1    yes   48   1          2      365        0   2      1\n274  35            1    yes   45   3          1       26        0   1      1\n275  23            1    yes   44  20         45      207        0  NA      0\n276  42           NA   &lt;NA&gt;   52   3         NA       63        0  NA      1\n277  29           NA   &lt;NA&gt;   19   1         NA      318        0  NA      0\n278  43            1    yes    9   2          0      365        0   2      0\n279  29           NA   &lt;NA&gt;   55   0         NA      365        0  NA      0\n280  39            1    yes   18   0         16      358        0   2      0\n281  32            1    yes   45   4          1      427        0   2      1\n282  35           NA   &lt;NA&gt;   12   1         NA      441        0   2      0\n283  22            1    yes   33   2          3       30        0  NA      0\n284  39            1    yes   32   1        132       41        0  NA      0\n285  38            1    yes   20   1         NA      285        0   2      0\n286  56            1    yes   37  36          0      412        3  11      0\n287  36            1    yes   39   1        136      324        0   2      1\n288  40           NA   &lt;NA&gt;   43   1         NA       15       17   2      0\n289  22            1    yes   51   2          2      374        9   1      1\n290  39           NA   &lt;NA&gt;   27   5         NA      293        8   4      0\n291  47            1    yes   40   2          3      365        0  NA      0\n292  32            1    yes    8   3         30      373        0   1      0\n293  41            1    yes   54   3          1      356        4  NA      0\n294  32            0     no   35   1        191       21        0  NA      0\n295  37           NA   &lt;NA&gt;   58   8         NA      365        0   2      1\n296  41            0     no   50   2        174       17        1   1      0\n297  31            1    yes   55   5         65      365        0   1      0\n298  33            1    yes   19   0         64       33        0  NA      1\n299  30            1    yes   37   6          8      303       16   1      0\n300  32            1    yes   20   1         93      449        0   1      0\n301  35           NA   &lt;NA&gt;   40   1         NA       77        0  NA      0\n302  32           NA   &lt;NA&gt;   37   1         NA       35        0   3      0\n303  33           NA   &lt;NA&gt;   43   0         NA      365        0   2      0\n304  30            1    yes    8   8          5       32        1  NA      0\n305  44           NA   &lt;NA&gt;   56   3         NA      365        0   2      0\n306  46            1    yes   51   0         62      365        0   2      0\n307  43            0     no    7   0        187       41        0  NA      1\n308  47           NA   &lt;NA&gt;   36   4         NA      365       13   5      0\n309  34            1    yes   49   0         93       32        0  NA      0\n310  47            1    yes   54   1          4      349        8  NA      1\n311  40            1    yes   53   2          1      393        0   7      0\n312  34            1    yes   15  15          5       NA        0  NA      0\n313  48            1    yes   53   4          0      302        0   3      1\n314  37            1    yes    6   5          1      364        1  NA      0\n315  35            1    yes   54   1          5      365       13  NA      1\n316  38           NA   &lt;NA&gt;   42   4         NA      337        0  NA      1\n317  27           NA   &lt;NA&gt;   31   1         NA       31        0   1      0\n318  39            0     no   40   0        178        9        4  NA      0\n319  23            1    yes   37   1          0      359       20   4      0\n320  35            0     no   36   0        178      361        0  NA      1\n321  53            0     no   40   2        175       80       19   2      0\n322  31           NA   &lt;NA&gt;   41   1         NA      365        0  NA      0\n323  32            1    yes   39   0         15       14        0   1      0\n324  33            0     no   38   1        219      398        0   1      0\n325  25            1    yes   38   0          1       40        1   1      0\n326  37           NA   &lt;NA&gt;    9   1         NA       40        0  NA      0\n327  26            1    yes   36   0         18       74        0  NA      0\n328  29           NA   &lt;NA&gt;   27   0         NA      308        5   2      0\n329  30            0     no   26   1        215        7        0  NA      0\n330  47           NA   &lt;NA&gt;   52   8         NA      365        0   2      1\n331  33           NA   &lt;NA&gt;   24   1         NA      300        0  NA      0\n332  36            1    yes   16   1        125      361        0   1      0\n333  23           NA   &lt;NA&gt;   34   3         NA      393        0   1      0\n334  36            1    yes   46   8          5        9        0   5      0\n335  34            1    yes   24   1          2      350        2   1      0\n336  28            1    yes   25   2          1      365        0   2      0\n337  33           NA   &lt;NA&gt;   40   4         NA       21        0  NA      1\n338  26            1    yes   33   0         35      296        0   1      1\n339  30            1    yes   31   0         15        6        0  NA      0\n340  41           NA   &lt;NA&gt;   37   1         NA       19        0  NA      0\n341  31           NA   &lt;NA&gt;   28   1         NA      123        1   4      0\n342  28           NA   &lt;NA&gt;   27   0         NA       44        0  NA      0\n343  59           NA   &lt;NA&gt;    6   2         NA      365        0  NA      0\n344  39            1    yes   21   0         31      363        0  NA      0\n345  36           NA   &lt;NA&gt;   29   0         NA       33        0  NA      0\n346  47            1    yes   23   1         32      152        0  NA      0\n347  26           NA   &lt;NA&gt;   35   0         NA      365        0  NA      0\n348  22            1    yes   55   0         10      338       11   2      0\n349  36           NA   &lt;NA&gt;    3   0         NA      365        0  NA      0\n350  34           NA   &lt;NA&gt;   36   1         NA      365        2   6      0\n351  27           NA   &lt;NA&gt;   40   1         NA      365        3   2      0\n352  34            1    yes   29   0         12      356        0  NA      1\n353  21           NA   &lt;NA&gt;   28   3         NA      331        0   1      0\n354  33           NA   &lt;NA&gt;   21   0         NA      309        0  NA      0\n355  42            1    yes   34   5          3      289       11   1      0\n356  46           NA   &lt;NA&gt;   42   2         NA      306        0   2      0\n357  26            1    yes   23   4        106      410        0  NA      0\n358  36            1    yes   36   3          3      362        0  NA      0\n359  47            0     no   32   3        158       74        0  NA      1\n360  48            0     no   30   2        191       16        0   1      0\n361  32           NA   &lt;NA&gt;   25   5         NA      340       10  NA      0\n362  38           NA   &lt;NA&gt;   35   7         NA      365        0   1      0\n363  43            1    yes   23   2         61       11        0   2      0\n364  30            1    yes   16   0         30      365        0  NA      0\n365  40            0     no   27   1        176       41        0  NA      0\n366  38           NA   &lt;NA&gt;   14   0         NA      292        1  NA      0\n367  22            0     no   44   1        260      376       NA   5      0\n368  39            0     no   52   2        268      449        0  NA      1\n369  22           NA   &lt;NA&gt;   48   2         NA        8        2   3      0\n370  37            0     no   11   1        210      370        0   2      0\n371  37            1    yes   41  10          1      393        0  NA      1\n372  44            1    yes   41   3          0      365        0   1      0\n373  38            0     no   37   1        165      166        1  NA      0\n374  37            1    yes   31   2          2       89        0   3      0\n375  43            1    yes   34   4          2      418        5  NA      0\n376  39            1    yes   40   8          0      247        0   3      0\n377  45            1    yes   37   2          2      322        3  NA      0\n378  39            0     no   30   8        154      265        0  NA      0\n379  31            1    yes   42   1         15      365        0  NA      1\n380  32            1    yes   51   0          5       NA        6   3      0\n381  42            1    yes   42   5         33       98        0  NA      1\n382  33           NA   &lt;NA&gt;   15   0         NA      365        0  NA      1\n383  47            1    yes   12   1         NA      345        0  NA      0\n384  24            1    yes   39   2         32      365        0   3      0\n385  27            1    yes   10   1          2       20        0  NA      0\n386  38           NA   &lt;NA&gt;   33   1         NA      286        1  NA      1\n387  53           NA   &lt;NA&gt;   57   4         NA      365        0  NA      0\n388  39           NA   &lt;NA&gt;   17   1         NA       34        0   4      0\n389  32           NA   &lt;NA&gt;   20   4         NA      365        1  NA      0\n390  27           NA   &lt;NA&gt;   49   2         NA      365        0   1      0\n391  43           NA   &lt;NA&gt;   23   4         NA      365        0   2      1\n392  31           NA   &lt;NA&gt;   26   1         NA      365        0  NA      0\n393  41           NA   &lt;NA&gt;   28   3         NA      365        0  NA      0\n394  27           NA   &lt;NA&gt;    3   0         NA      365        0  NA      1\n395  28           NA   &lt;NA&gt;   18  17         NA       85        0  NA      0\n396  39           NA   &lt;NA&gt;   39   8         NA      365        0  NA      0\n397  39           NA   &lt;NA&gt;   51   0         NA      365       12   3      0\n398  21           NA   &lt;NA&gt;   39   0         NA       NA        6  NA      1\n399  29           NA   &lt;NA&gt;   47   2         NA      365        0  NA      1\n400  31           NA   &lt;NA&gt;   45   5         NA      365        5  NA      0\n401  29           NA   &lt;NA&gt;   28   2         NA      118        2   1      0\n402  45           NA   &lt;NA&gt;   41   2         NA      365        0   1      1\n403  25           NA   &lt;NA&gt;   31   7         NA       68        0  NA      0\n404  24           NA   &lt;NA&gt;   34   2         NA      365       14   8      1\n405  41           NA   &lt;NA&gt;   21   5         NA      365        0  NA      0\n406  27           NA   &lt;NA&gt;   41   3         NA      365        0   1      0\n407  21           NA   &lt;NA&gt;   38   1         NA       44       14   4      0\n408  27           NA   &lt;NA&gt;   36   5         NA       NA        0  NA      0\n409  31           NA   &lt;NA&gt;   24   1         NA      365        0   1      0\n410  41           NA   &lt;NA&gt;   10   0         NA      365        0  NA      0\n411  33           NA   &lt;NA&gt;   41   1         NA      365        0  NA      0\n412  49           NA   &lt;NA&gt;   51   1         NA      365        8   3      0\n413  41           NA   &lt;NA&gt;   45   4         NA      365        1   1      0\n414  25           NA   &lt;NA&gt;   29   0         NA       44        6  NA      0\n415  41           NA   &lt;NA&gt;   56   4         NA       10        0  NA      0\n416  34           NA   &lt;NA&gt;   34   1         NA       87        0   2      0\n417  29           NA   &lt;NA&gt;    4   0         NA      365        0  NA      0\n418  28           NA   &lt;NA&gt;   32   0         NA      365        0  NA      0\n419  29           NA   &lt;NA&gt;   38   2         NA       NA        9   1      0\n420  36           NA   &lt;NA&gt;   26   0         NA      115        0   5      0\n421  36           NA   &lt;NA&gt;   27   0         NA      365        0  NA      0\n422  24           NA   &lt;NA&gt;   21   4         NA      365        0  NA      0\n423  38           NA   &lt;NA&gt;   30   2         NA        6        0   2      0\n424  31           NA   &lt;NA&gt;    7   1         NA      365        0  NA      0\n425  26           NA   &lt;NA&gt;   35   1         NA      365        0  NA      0\n426  35           NA   &lt;NA&gt;   23   2         NA       28        0  NA      1\n427  26           NA   &lt;NA&gt;   36   4         NA      365        1  NA      0\n428  33           NA   &lt;NA&gt;   15   0         NA      365        0  NA      0\n429  46           NA   &lt;NA&gt;   48 100         NA      365        0  NA      0\n430  33           NA   &lt;NA&gt;   31   0         NA      365        0   1      0\n431  39           NA   &lt;NA&gt;   54   6         NA       64        0  NA      0\n432  27           NA   &lt;NA&gt;   21   1         NA      365        9   1      0\n433  33           NA   &lt;NA&gt;   21   8         NA       NA        0  NA      1\n434  36           NA   &lt;NA&gt;   29   4         NA      365        0  NA      1\n435  23           NA   &lt;NA&gt;   23   0         NA      365        5   2      0\n436  33           NA   &lt;NA&gt;   33   2         NA      365       11   1      0\n437  26           NA   &lt;NA&gt;   14   0         NA      365        0  NA      0\n438  38           NA   &lt;NA&gt;   27  10         NA      365        0  NA      0\n439  52           NA   &lt;NA&gt;   24   1         NA      365        0   1      0\n440  39           NA   &lt;NA&gt;   33   2         NA      365        3   1      0\n441  36           NA   &lt;NA&gt;   25   1         NA        2        1  NA      0\n442  44           NA   &lt;NA&gt;   37   0         NA       NA        0   2      0\n443  37           NA   &lt;NA&gt;   47   2         NA        4       21  NA      0\n444  33           NA   &lt;NA&gt;   40   2         NA      365        0   1      1\n445  31           NA   &lt;NA&gt;    9   1         NA      365        0  NA      0\n446  25           NA   &lt;NA&gt;   37   3         NA      365        0   3      0\n447  31           NA   &lt;NA&gt;   47   1         NA      365        0  NA      1\n448  24           NA   &lt;NA&gt;   34   0         NA      365       13   2      0\n449  33           NA   &lt;NA&gt;   28   1         NA      365        0   1      0\n450  49           NA   &lt;NA&gt;   37   0         NA        7        0  NA      0\n451  39           NA   &lt;NA&gt;   28   0         NA      365        1  NA      1\n452  59           NA   &lt;NA&gt;   11   2         NA      365        0   1      0\n453  45           NA   &lt;NA&gt;   35   1         NA      365        0   1      0\n       sex g1b homeless  i1  i2  id indtot linkstatus link       mcs      pcs\n1     male yes   housed  13  26   1     39          1  yes 25.111990 58.41369\n2     male yes homeless  56  62   2     43         NA &lt;NA&gt; 26.670307 36.03694\n3     male  no   housed   0   0   3     41          0   no  6.762923 74.80633\n4   female  no   housed   5   5   4     28          0   no 43.967880 61.93168\n5     male  no homeless  10  13   5     38          1  yes 21.675755 37.34558\n6   female  no   housed   4   4   6     29          0   no 55.508991 46.47521\n7   female yes   housed  13  20   7     38          0   no 21.793024 24.51504\n8     male yes homeless  12  24   8     44          0   no  9.160530 65.13801\n9   female  no homeless  71 129   9     44          0   no 22.029678 38.27088\n10    male  no homeless  20  27  10     44          0   no 36.143761 22.61060\n11  female  no   housed   0   0  11     34          0   no 43.974678 60.07915\n12  female  no   housed  13  13  12     11          0   no 13.382205 41.93376\n13    male  no homeless  20  31  14     40          0   no 49.089302 39.24264\n14    male  no homeless  13  20  15     41          1  yes 25.846157 31.82965\n15    male  no   housed  51  51  16     38          0   no 23.608444 55.16998\n16  female yes homeless   0   0  17     26          1  yes 29.799828 44.77651\n17    male  no   housed   0   0  18     17          0   no 42.166462 56.43837\n18    male yes homeless   1   1  19     40          0   no 16.732292 58.29807\n19  female yes   housed   9  24  20     37          1  yes 15.458271 37.45214\n20    male  no   housed  23  23  21     37          0   no 55.128109 34.33926\n21    male  no   housed  26  26  22     36          0   no 20.871447 36.58481\n22    male  no   housed   0   0  23     27          1  yes 47.286739 61.64098\n23    male yes homeless  34  34  24     42          0   no 19.620596 46.22176\n24    male  no homeless   4   5  25     42          0   no 44.442104 51.56324\n25  female  no   housed   6   8  27     40          0   no 21.668474 36.01007\n26    male  no   housed   3   3  28     34          1  yes 37.371555 63.06006\n27    male  no homeless   7   7  30     37          0   no 34.335667 61.82597\n28    male yes   housed  24  48  31     41          0   no 46.340755 43.53374\n29    male  no homeless   0   0  32     37          1  yes 27.717710 42.22490\n30    male  no homeless  20  20  33     44          0   no 18.984324 42.40059\n31    male  no homeless   3   3  34     41          0   no 58.241264 50.14700\n32    male  no homeless   6   6  35     35          1  yes 27.852608 63.52000\n33    male  no   housed   0   0  36     21          0   no 54.774349 53.35109\n34    male  no   housed   0   0  37     30          1  yes 27.495481 56.73985\n35    male  no homeless  32 135  38     33          0   no 56.324333 53.23396\n36    male  no   housed   2  24  39     43          0   no 37.006042 62.04113\n37    male  no   housed   3   3  40     41          0   no 39.897774 38.39529\n38    male yes homeless  27  27  42     41          0   no 18.640594 51.30330\n39    male  no   housed   3   7  43     32          0   no 45.134098 56.68389\n40    male  no homeless  24  36  44     41          0   no 15.861924 71.39259\n41    male  no homeless   6  12  45     39          0   no 24.148815 52.61977\n42    male  no homeless   0   0  46     22          1  yes 29.901625 36.04588\n43    male  no   housed  13  13  47     39          1  yes 29.412977 50.06427\n44    male  no homeless  25  28  49     38          1  yes 35.206970 62.03183\n45  female  no   housed   6  13  50      8          1  yes 59.454094 52.69898\n46    male  no   housed  13  61  51     36          0   no 20.999893 56.38669\n47    male yes homeless  15  26  52     42          0   no 29.390280 40.38438\n48    male yes   housed   7   7  53     31         NA &lt;NA&gt; 26.773279 58.16169\n49    male yes homeless   9  15  54     44          1  yes 17.925251 45.48341\n50    male  no homeless   5  13  56     40          1  yes 34.434696 63.05807\n51  female  no   housed  13  20  57     32          0   no 24.000315 46.75086\n52    male yes   housed  34  34  58     29          1  yes 47.671936 29.45625\n53    male yes   housed   3   6  59     44          1  yes 26.653036 40.46056\n54    male yes homeless  37  43  60     43          1  yes 28.469273 57.20213\n55    male  no homeless  36  36  61     38          1  yes 26.065777 47.60514\n56    male yes   housed  13  15  62     34          0   no 31.501711 50.16318\n57    male  no   housed   3  19  63     41          0   no 24.998930 50.39870\n58  female yes   housed   3   6  65     20          1  yes 33.374172 55.23372\n59  female yes homeless   0   0  66     29          0   no 27.575460 35.12470\n60    male  no   housed  32  32  67     38          0   no 35.839642 52.68871\n61    male  no   housed  35  42  68     42          0   no 17.565235 67.53625\n62    male yes homeless  20  20  69     41          0   no 20.025341 36.98058\n63    male  no homeless   7  25  70     38          1  yes 25.812592 64.29022\n64  female yes homeless  59 164  71     43          1  yes 17.705963 36.04016\n65    male  no   housed   0   0  72     38          1  yes 39.934162 53.15686\n66    male  no homeless  26  51  73     44          1  yes 23.996725 45.18499\n67  female yes   housed  12  18  74     37         NA &lt;NA&gt; 26.697262 54.38272\n68  female  no   housed   0   0  75     40         NA &lt;NA&gt; 15.447794 55.32189\n69    male  no   housed  18  36  76     38          0   no 38.752102 27.36663\n70    male  no   housed   6  12  78     29          1  yes 34.839962 58.25895\n71    male  no   housed  13  17  80     35         NA &lt;NA&gt; 22.957235 63.91367\n72    male yes homeless   5   5  81     28          1  yes 28.418003 56.90441\n73    male  no homeless   2   2  82     31          0   no 33.115913 48.79136\n74    male  no homeless 102 102  83     40          0   no 14.913925 52.59380\n75    male yes homeless   0   0  84     44          1  yes 17.449858 68.12395\n76    male yes   housed  21  21  85     36          0   no 13.134663 57.07777\n77    male yes homeless   6   8  86     29          1  yes 19.344807 42.62894\n78    male  no   housed   1   1  87     42          1  yes 26.221968 59.56708\n79    male  no homeless  19  19  88     40          0   no 34.210976 44.16995\n80    male  no   housed   1  22  89     29          1  yes 52.926834 58.21477\n81  female yes   housed   2   2  90     40          0   no 28.858498 43.94296\n82    male  no homeless   0   0  91     39          1  yes 26.918222 59.82454\n83    male  no   housed  26  47  93     39          0   no 39.298168 38.46090\n84    male  no   housed   0   0  94     35          0   no 47.550678 37.18519\n85    male  no homeless   9  19  95     38          1  yes 54.053368 56.50476\n86    male  no   housed  10  10  96     40          0   no 37.845036 57.33492\n87    male yes homeless   4   5  97     44          1  yes 20.202173 28.85472\n88    male  no   housed   6  15  98     19         NA &lt;NA&gt; 51.788670 60.58733\n89    male yes homeless  26  51  99     43          0   no 32.566528 30.05406\n90  female yes   housed  64  64 100     44          1  yes 19.595461 40.48884\n91    male yes homeless  26  26 102     34          1  yes 16.302422 55.98083\n92    male yes   housed   2   3 103     42          1  yes 15.754984 48.05733\n93  female yes homeless  33  38 104     42          1  yes 27.993336 44.53589\n94    male yes   housed  61 184 105     40          0   no 23.659925 30.23405\n95    male yes   housed   2   2 106     39         NA &lt;NA&gt; 34.737865 65.74425\n96    male  no homeless  19  19 107     40          0   no 15.618371 55.50122\n97  female  no   housed   9  15 108     33          1  yes 23.299021 51.81045\n98    male  no   housed   0   0 109     38         NA &lt;NA&gt; 40.941338 63.61380\n99    male yes   housed  18  47 110     41          1  yes 24.330456 46.41464\n100   male yes homeless  51  51 111     42          0   no 15.196477 54.13217\n101   male  no   housed   0   0 112     37          0   no 50.788845 46.75063\n102   male  no homeless  36  66 113     43          0   no 23.554617 40.18310\n103   male  no   housed  31  91 114     38         NA &lt;NA&gt; 15.822761 63.48228\n104   male  no   housed   0   0 115     33          1  yes 45.402626 43.62142\n105   male  no   housed  26  69 116     34          0   no 53.616177 57.95000\n106   male  no   housed   2  20 117     28         NA &lt;NA&gt; 59.264427 54.44389\n107 female  no   housed   0   0 118     19          1  yes 24.747171 54.10854\n108   male yes homeless  51  51 119     43          0   no 12.432887 48.89978\n109 female yes homeless  34  34 120     33          1  yes 27.136280 54.79462\n110 female  no homeless  39  95 121     31          0   no 41.321629 36.68874\n111   male  no   housed  19  26 122     42          1  yes 21.912630 43.00148\n112   male  no homeless  13  13 123     33          0   no 28.972683 59.74108\n113   male  no homeless   0   0 124     36          0   no 16.284695 48.89844\n114 female yes   housed   0   0 125     43         NA &lt;NA&gt; 19.156574 34.33698\n115   male  no homeless  13  13 126     19          0   no 41.590557 40.88239\n116 female yes   housed   1   1 127     37          1  yes 18.465418 39.33260\n117   male  no   housed  22  22 128     25          1  yes 39.450993 28.93009\n118   male  no homeless  13  33 129     42          1  yes 42.539974 60.92048\n119 female  no   housed  26  26 131     25          0   no 37.438934 49.29042\n120   male yes homeless  19  30 132     39          0   no 22.669971 35.39379\n121   male yes homeless  26  26 133     41         NA &lt;NA&gt; 45.529411 57.32318\n122 female  no   housed  13  13 134     28          1  yes 20.310446 33.48925\n123   male  no homeless   3   3 135     40          1  yes 23.729639 45.54259\n124   male  no   housed  24  24 136     40          1  yes 40.676174 59.10600\n125   male  no   housed   0   0 137     29          0   no 28.075939 42.01285\n126 female  no   housed   0   0 138     39          1  yes 22.787546 28.74085\n127   male yes homeless  53  53 140     39          0   no 21.460621 45.01618\n128 female  no homeless   7   7 141     39          0   no 28.505577 37.79718\n129   male  no homeless  25  25 142     38          0   no 33.652927 48.87681\n130 female  no homeless  15  15 143     36          1  yes 40.156929 40.96234\n131   male yes homeless  64 179 144     42          1  yes 45.491100 38.13606\n132   male yes homeless   4   4 148     42          0   no 23.371147 29.47202\n133   male yes homeless   3   6 149     37          1  yes 34.598862 50.21533\n134 female  no   housed   2   2 150     33          0   no 22.017500 40.24271\n135   male  no homeless  13  13 151     42          1  yes 29.082914 36.24839\n136   male  no   housed  20  51 152     37         NA &lt;NA&gt; 24.422007 45.56750\n137 female  no homeless   1   3 153     25          1  yes 33.366123 45.16520\n138   male  no homeless  38  38 154     43          1  yes 18.690155 59.47648\n139   male  no homeless   8   8 156     40          0   no 27.683458 31.97959\n140   male  no homeless   0   0 158     34          1  yes 47.145802 53.66537\n141   male  no   housed  13  13 160     43          1  yes 33.517311 29.78529\n142   male  no homeless  39  39 163     30          0   no 41.131794 24.43518\n143   male  no   housed  12  20 164     44          0   no 24.090509 53.75950\n144 female  no   housed   0   0 166     38          0   no 50.030434 57.38777\n145   male  no   housed   0   0 167     37          1  yes 20.069775 50.23810\n146   male  no   housed   1   1 168     29          0   no 18.211269 56.00507\n147   male  no   housed  19  32 169     43          0   no 30.071957 44.92406\n148   male  no   housed   0   0 170     30          0   no 28.679745 61.78611\n149   male yes   housed  26  51 172     37          1  yes 20.517740 54.35444\n150   male  no   housed  19  19 173     29          0   no 31.188143 55.74972\n151   male  no homeless   3   6 174     41          0   no 43.881058 61.44474\n152   male  no   housed   1   1 177     35          0   no 56.784805 56.84005\n153   male  no   housed  12  17 178     41          0   no 39.074711 36.56960\n154 female  no homeless  29  29 179     31          0   no 52.197483 55.73845\n155   male  no homeless  38  38 180     42          0   no 21.200043 32.28706\n156 female  no   housed  12  12 181     36          0   no 36.651463 30.50811\n157   male  no   housed   4   4 182     38          0   no 10.564762 52.94168\n158   male yes homeless  19  50 183     41          1  yes 22.640652 31.00380\n159   male  no   housed  41  54 185     40          1  yes 39.270416 26.45694\n160   male  no   housed   1   3 186     36          0   no 18.771036 40.46645\n161 female  no   housed   0   0 187     39          0   no 20.119982 32.96189\n162 female yes homeless  59  59 188     38          0   no 25.257971 42.12069\n163   male  no homeless  19  19 189     42          0   no 21.049545 45.46138\n164   male  no   housed   8   8 190     34          1  yes 50.018494 54.07817\n165 female yes   housed  16  20 191     35          1  yes 18.324743 43.24062\n166   male  no   housed  12  12 192     34          0   no  7.938221 53.61504\n167 female yes homeless  26  33 193     44          0   no 22.442661 35.90619\n168 female yes homeless  50  50 194     41          1  yes 27.171751 37.75567\n169   male  no homeless  12  20 198     36          1  yes 41.054363 57.70763\n170   male yes homeless   1   3 199     36          0   no 29.860514 53.68318\n171 female yes   housed  13  32 200     39          0   no 20.356680 35.97361\n172   male  no homeless  10  13 201     44         NA &lt;NA&gt; 26.252979 54.42475\n173   male yes   housed   3  24 202     41          1  yes 40.167236 61.28633\n174 female yes   housed  20  20 203     37          0   no 22.815102 35.22702\n175 female  no homeless  19  26 204     32          1  yes 40.032974 38.10227\n176   male yes   housed   6  12 206     32          1  yes 25.615507 66.59317\n177   male  no homeless 102 102 208     38          1  yes 14.358881 49.27981\n178   male  no   housed   1   4 209     39          1  yes 27.122667 58.16642\n179   male  no   housed   0   0 210     29          0   no 36.823708 31.52861\n180   male yes   housed  58  58 211     41          0   no 17.509274 49.36320\n181   male  no   housed   9   9 212     37          0   no 17.927528 43.17081\n182 female  no homeless   0   0 213     32          0   no 43.353584 21.91906\n183   male  no   housed  35  65 214     43          1  yes 47.711655 57.81969\n184   male  no   housed  33  51 215     42          1  yes 20.731987 54.82264\n185   male  no   housed  19  19 217     28          0   no 52.455845 60.41816\n186 female yes   housed  58  58 219     40          1  yes 36.100307 37.03778\n187 female yes   housed  32  38 220     23          0   no 33.259956 41.66993\n188 female  no   housed   0   0 221     33          0   no 12.323594 48.21926\n189   male  no   housed   0   0 222     38          1  yes 23.058514 54.36913\n190   male  no   housed   6   6 223     40          0   no 45.011848 35.79145\n191 female yes homeless   0   0 224     21          1  yes 37.953403 57.64361\n192   male  no   housed  18  18 225     36          0   no 48.410297 59.32288\n193 female yes   housed   0   0 226     32         NA &lt;NA&gt; 27.641029 48.37090\n194 female yes homeless  38  38 228     43          0   no 16.786348 38.51597\n195 female  no   housed  13  13 229     31          0   no 54.768539 23.48208\n196   male yes homeless   0   0 230     41          1  yes 46.119808 23.50237\n197   male  no   housed  46  46 231     32          0   no 35.955441 56.30513\n198   male  no homeless  27  30 232     40          1  yes 30.300137 41.06454\n199   male  no homeless   3   3 233     40          1  yes 59.453930 58.16510\n200   male yes homeless  12  12 235     42          0   no 23.546112 41.57280\n201 female yes   housed  16  26 236     34          0   no 14.919310 57.83691\n202 female  no   housed   1   6 237     28          0   no 40.462433 56.90286\n203   male  no homeless  26  26 238     29          0   no 46.729744 54.59662\n204   male  no   housed  23  92 239     40          1  yes 37.674961 47.36353\n205   male  no   housed  13  13 240     34          1  yes 57.260887 56.89963\n206 female  no   housed   0   0 241     34          0   no 44.351089 46.79942\n207 female  no homeless   4   4 242     36          1  yes 16.469986 58.49455\n208   male yes homeless  26  26 243     43          1  yes 35.235611 48.48331\n209   male  no homeless  13  13 245     35          1  yes 48.239128 56.39499\n210   male  no homeless  13  13 246     35          1  yes 30.371395 47.35083\n211 female yes   housed  10  14 247     34          0   no 26.311474 43.25021\n212   male yes homeless  23  42 248     42          1  yes 22.884369 29.11139\n213 female  no   housed  42  48 249     33          0   no 27.471394 52.42204\n214   male  no   housed  15  15 250     34          1  yes 30.280018 34.58012\n215   male  no   housed  19  20 253     30          1  yes 47.979435 48.27899\n216 female yes   housed   0   0 254     20          0   no 13.968738 48.97176\n217 female  no   housed  13  13 255     26          0   no 41.867615 46.36879\n218   male  no   housed   2   3 256     39          1  yes 25.039495 63.25544\n219   male yes homeless  13  26 257     45          0   no 26.453758 46.76894\n220   male  no   housed  14  16 258     43          0   no 14.480626 70.14779\n221   male  no homeless  51  51 259     36          0   no 52.789551 50.25876\n222   male  no homeless  10  26 260     37          1  yes 35.576111 29.49112\n223   male  no homeless  16  16 261     42          0   no 26.799009 42.42209\n224   male yes homeless 102 102 262     44          1  yes 27.808109 25.61815\n225 female  no   housed   1   2 264     41          1  yes 23.547628 37.35865\n226   male yes   housed   6  20 265     33          1  yes 27.650967 53.05504\n227   male  no homeless  27  27 268     42          0   no 27.177586 43.00587\n228 female  no   housed   4   4 269     27          0   no 34.048084 57.24648\n229   male  no homeless  27  41 270     33          1  yes 31.328341 41.78789\n230 female  no   housed   1   1 272     38          0   no 32.384045 44.85584\n231   male yes   housed  54  73 273     45          0   no 16.125675 47.65467\n232   male yes   housed  24  36 274     40          1  yes 17.625854 44.01194\n233 female  no   housed  10  20 275     23          0   no 47.442879 52.85658\n234   male  no homeless  30  41 276     42          0   no 27.898603 43.68238\n235   male  no homeless  43  43 277     39          0   no 23.683241 43.55378\n236   male  no   housed   2   2 278     21          0   no 58.168713 49.47607\n237   male  no   housed  16  16 279     37          0   no 31.777193 41.87122\n238   male  no   housed   3   3 280      4          1  yes 52.955296 60.10658\n239   male  no   housed  34  51 283     36          1  yes 24.813925 35.46683\n240 female  no homeless   8   8 284     38          0   no 31.781149 51.49556\n241   male  no   housed  28  28 285     42          1  yes 46.830055 62.44834\n242   male  no   housed  13  13 287     44          0   no 16.398746 42.32603\n243   male  no   housed  51  51 288     38          0   no 36.798199 57.78556\n244   male  no homeless 134 140 289     42          1  yes 55.991005 32.58783\n245   male yes homeless   5   6 290     28          0   no 41.624405 53.04678\n246   male  no homeless   5   5 291     40          1  yes 19.645632 46.33508\n247   male yes   housed   3   3 292     44          1  yes 26.919926 48.62301\n248   male  no   housed   0   0 293     37          0   no 37.953053 61.60262\n249   male yes   housed  26  26 294     32          0   no 31.877844 51.38743\n250   male  no   housed  15  30 295     30          0   no 54.970051 33.79744\n251   male yes homeless   9  20 296     39          0   no 30.701992 51.40308\n252   male  no   housed  10  15 297     41          0   no 27.607288 44.29502\n253   male yes   housed   0   0 298     31          1  yes 29.505835 46.76040\n254   male yes   housed  24  45 299     39          0   no 21.931257 49.87759\n255   male yes homeless  33  51 300     40          0   no 20.979116 59.28272\n256   male  no   housed   0   0 302     32          0   no 28.558788 36.63770\n257 female yes   housed   8  13 304     28          0   no 20.911337 33.07642\n258 female yes homeless  27  33 306     25          1  yes 44.446507 45.79400\n259   male yes   housed   0   0 307     39          1  yes 11.819070 62.81930\n260 female  no   housed   0   0 308     33          0   no 21.543468 52.35651\n261   male  no homeless   3   3 309     40          0   no 25.548498 46.98674\n262   male  no homeless  14  20 310     39          0   no 34.139271 56.95329\n263   male  no homeless  12  12 311     38          0   no 29.400602 44.11552\n264 female  no homeless   1   1 313     33          1  yes 27.601431 37.83872\n265   male  no   housed   0   0 315     27          1  yes 56.963795 46.56849\n266 female  no   housed   1   1 316     36          0   no 14.415197 46.74971\n267   male  no   housed   0   0 317     29          0   no 41.195469 40.11784\n268   male  no   housed  25  33 318     39          0   no 36.719200 30.27282\n269   male yes   housed  42  57 319     40          0   no 48.008137 51.74989\n270 female  no   housed   2   2 320     22          0   no 34.747746 64.35030\n271   male  no   housed   6   6 322     32          0   no 58.477470 58.89470\n272   male  no   housed  19  19 323     38          0   no 62.031616 36.10949\n273 female yes homeless  29  58 324     27          0   no 16.718819 35.70664\n274 female  no   housed   0   0 325     32          1  yes 20.220354 32.44772\n275   male yes homeless   0   0 326     37          1  yes 24.378925 35.89378\n276 female yes homeless   0   0 327     32          1  yes 28.447634 39.93384\n277   male  no homeless  22  32 328     31          0   no 18.677704 71.62856\n278   male  no homeless  19  19 329     19          0   no 58.899960 59.34274\n279   male yes homeless  13  19 331     41          0   no 15.773271 48.61113\n280   male yes   housed   1   1 332     34          0   no 34.541599 54.08614\n281 female yes homeless  67  67 333     40          0   no 17.926985 39.09279\n282   male  no homeless  13  13 334     40          0   no 51.918278 51.16233\n283   male  no   housed  20  20 335     37          1  yes 23.137871 51.24271\n284   male  no   housed   0   0 336     39          1  yes 22.939909 33.03571\n285   male  no   housed   3   9 337     26          0   no 33.888065 33.92213\n286   male  no homeless 142 142 338     37          0   no 34.412716 25.92422\n287 female yes homeless  53  53 339     36          0   no 22.237560 36.52407\n288   male yes homeless  64  64 341     32          1  yes 22.354912 31.76573\n289 female  no   housed   0   0 342     40          0   no  7.035307 52.51404\n290   male  no   housed   2   2 343     42          0   no 19.718121 41.32350\n291   male  no homeless  51  51 346     43          0   no 28.747435 51.08913\n292   male  no   housed   1   1 347     12          0   no 55.912579 51.01180\n293   male  no homeless  24  30 348     44          0   no 18.948950 40.42006\n294   male  no   housed  35  35 350     40          1  yes 38.851971 45.13578\n295 female yes homeless  67  80 351     41          0   no 16.922634 34.09209\n296   male  no homeless   0   0 352     41          1  yes 31.739616 31.52352\n297   male yes   housed  13  26 353     38          0   no 17.837486 54.94331\n298 female  no homeless   6   6 354     22          1  yes 24.923189 63.77832\n299   male yes homeless  12  12 355     41          0   no 20.911737 44.87310\n300   male  no homeless   7   7 356     37          0   no 32.773659 63.90699\n301   male yes homeless  26  26 357     40          1  yes 23.771542 47.50178\n302   male yes homeless  41  56 359     41          1  yes 23.242210 30.34914\n303   male yes homeless   3   3 360     41          0   no 22.447948 45.32498\n304   male  no   housed  18  31 361     31          1  yes 58.851147 58.71478\n305   male  no homeless  38  55 362     43          0   no 27.218351 34.31445\n306   male  no   housed  12  15 363     39          0   no 18.287806 43.60749\n307 female  no homeless  26  26 364     15          1  yes 60.542084 55.44015\n308   male  no homeless   4   4 365     40          0   no 37.835770 32.12609\n309   male  no   housed  32  32 366     24          1  yes 37.698196 52.02918\n310 female yes   housed  13  13 367     35          0   no 13.852996 31.11147\n311   male  no homeless  34 102 368     42          0   no 18.615227 58.15246\n312   male  no homeless  38  51 369     29         NA &lt;NA&gt; 47.255920 46.52069\n313 female yes homeless   0   0 370     32          0   no 19.808329 27.09086\n314   male  no homeless  13  13 371     31          0   no 57.873539 57.59651\n315 female  no   housed   0   0 372     44          0   no  9.406377 41.95401\n316 female yes   housed   3   3 374     40          0   no 27.495565 51.27790\n317   male  no   housed  49  49 376     42          1  yes 41.010502 62.97789\n318   male  no homeless  18  36 377     35          1  yes 39.963680 37.80672\n319   male yes   housed   0   0 378     37          0   no 21.599306 36.64597\n320 female  no homeless  58  58 379     13          0   no 44.767254 53.42212\n321   male yes homeless   2   2 380     43          1  yes 29.332056 25.43683\n322   male  no   housed   6  13 381     40          0   no 18.604780 66.09068\n323   male  no homeless   6  13 382     33          1  yes 19.291830 59.91458\n324   male  no   housed  10  10 383     37          0   no 31.856297 64.18298\n325   male  no   housed   0   0 385     36          1  yes 26.698538 43.39342\n326   male  no homeless   6  20 386     26          1  yes 53.340359 57.65739\n327   male  no homeless   6   6 387     42          1  yes 51.003738 51.70669\n328   male  no   housed   0   0 388     35          0   no 28.639238 48.98777\n329   male  no   housed  32  32 389     41          1  yes 44.215485 54.15862\n330 female  no   housed   6   6 391     34          0   no  7.226597 47.60948\n331   male  no   housed   3  12 392     36          0   no 57.296200 59.14530\n332   male  no homeless   6   6 394     42          0   no 30.918043 63.34270\n333   male  no homeless   0   0 395     33          0   no 24.849377 51.15330\n334   male  no homeless  25  25 399     38          1  yes 17.863741 38.19618\n335   male  no homeless  13  26 400     41          0   no 48.483433 57.44889\n336   male  no homeless  18  18 401     36          0   no 27.514502 64.07393\n337 female  no   housed  13  26 402     38          1  yes 19.819555 32.99675\n338 female  no   housed   0   0 403     41          0   no 29.213017 56.69189\n339   male  no   housed   2   2 404     39          1  yes 36.029205 61.19665\n340   male yes homeless  26  38 405     41          1  yes 25.465322 65.26759\n341   male  no homeless   5  25 406     39          1  yes 38.778580 41.73849\n342   male yes   housed  10  23 407     25          1  yes 31.255833 56.56525\n343   male  no homeless   0   0 408     32          0   no 58.750145 53.01821\n344   male  no   housed   4   4 409     39          0   no 32.313843 57.04919\n345   male  no   housed  29  85 411     31          1  yes 40.056877 57.73149\n346   male  no homeless  20  20 413     40          1  yes 37.504734 54.06671\n347   male  no   housed   3  12 415     29          0   no 18.340139 43.89911\n348   male yes homeless   6  12 416     41          0   no 14.108759 48.81484\n349   male  no homeless  13  13 418      9          0   no 59.930012 58.22468\n350   male  no homeless  36  36 419     39          0   no 26.474701 48.76114\n351   male  no homeless  18  18 420     37          0   no 57.489437 37.74971\n352 female  no   housed   0   0 421     37          0   no 31.077631 64.91865\n353   male  no homeless  45  45 422     40          0   no 41.324745 36.81136\n354   male  no   housed  13  13 423     31          0   no 38.907230 49.43321\n355   male  no homeless   4  10 424     42          0   no 22.673281 45.18067\n356   male  no homeless   6  26 425     42          0   no 30.106504 36.35557\n357   male  no   housed   6   6 428     15          0   no 38.276970 36.49366\n358   male  no   housed  25  42 430     37          0   no 45.859604 14.07429\n359 female  no   housed  21  21 431     13          1  yes 51.922516 54.52398\n360   male  no homeless  13  13 432     35          1  yes 25.544411 42.86974\n361   male  no   housed  37  37 433     30          0   no 22.730097 56.85568\n362   male  no   housed  25  25 435     44          0   no 25.445648 44.17665\n363   male yes homeless  38  38 436     32          1  yes 46.967522 58.74847\n364   male  no   housed  12  29 437     32          0   no 47.133209 51.92163\n365   male  no   housed   6  24 438     38          1  yes 42.632927 56.86680\n366   male  no homeless   6   6 440     34          0   no 54.851093 50.26602\n367   male  no   housed   0   0 441     44          0   no 15.101494 48.11589\n368 female  no   housed   0   0 442     37          0   no 24.930353 33.53111\n369   male yes homeless   8   8 443     40          1  yes 19.116766 45.58474\n370   male  no   housed  32  32 444     41          0   no 51.843193 59.72128\n371 female  no homeless  24  51 445     44          0   no 25.710777 49.18084\n372   male  no homeless  51  51 447     30          0   no 32.484653 44.22039\n373   male  no   housed  35  35 448     42          1  yes 43.498222 20.74029\n374   male  no homeless  73  73 449     36          1  yes 18.795931 54.93296\n375   male yes homeless   9  31 452     45          0   no 18.525930 47.58062\n376   male yes homeless  51  51 457     44          1  yes 25.738285 34.90893\n377   male  no   housed   6   8 458     28          0   no 14.891697 60.11456\n378   male  no   housed   6  16 459     32          1  yes 41.360710 44.59728\n379 female yes homeless   6  13 461     34          0   no 16.863588 46.69877\n380   male  no homeless   2   3 464     44         NA &lt;NA&gt; 17.082233 47.00855\n381 female yes   housed  26  41 465     35          1  yes 30.701563 38.40187\n382 female  no   housed   0   0 466      6          0   no 41.624706 62.08943\n383   male  no   housed   1   1 467     31          0   no 43.441059 59.99293\n384   male  no homeless  49 109 468     42          0   no 27.801510 51.69448\n385   male  no   housed  19  25 469     35          1  yes 42.457150 53.54025\n386 female yes   housed   3  16 470     33          0   no 22.337873 42.31495\n387   male  no   housed  38  51  13     45          0   no 18.750151 46.04046\n388   male  no homeless  26  40  26     45          1  yes 28.556833 53.17226\n389   male  no homeless  83 145  29     42          0   no 28.602417 47.83191\n390   male yes   housed  32  40  48     43          0   no 15.268264 40.83885\n391 female  no homeless  19  19  55     31          0   no 27.717655 41.10135\n392   male  no   housed  30 101  64     41          0   no 40.633827 58.78673\n393   male  no   housed  42  42 130     31          0   no 46.269627 36.50988\n394 female  no   housed   1   1 139     21          0   no 57.834595 58.21511\n395   male  no   housed  18  26 145     36          1  yes 33.659222 45.00826\n396   male yes homeless  35 105 146     36          0   no 21.645960 41.52777\n397   male  no homeless  20  20 147     41          0   no 23.724752 32.87765\n398 female yes   housed   0   0 155     35         NA &lt;NA&gt; 47.773228 41.09781\n399 female  no homeless  11  14 157     35          0   no  9.732559 69.17161\n400   male yes   housed  26  26 159     33          0   no 15.599421 47.65695\n401   male  no homeless  43  54 161     43          1  yes 28.475632 45.82243\n402 female  no homeless  19  26 162     25          0   no 55.479382 54.09069\n403   male  no   housed   1   2 165     35          1  yes 36.594727 59.08202\n404 female  no   housed  13  26 171     38          0   no 28.590870 57.76270\n405   male  no   housed  51  51 175     37          0   no 15.078867 41.00370\n406   male yes homeless  24  48 176     44          0   no 38.950596 59.73408\n407   male yes   housed  13  13 184     43          1  yes 31.680859 60.97185\n408   male  no   housed  20  26 195     41         NA &lt;NA&gt; 19.096197 59.91701\n409   male  no   housed  26  26 197     35          0   no 48.442287 58.50863\n410   male  no   housed   8  18 205     36          0   no 52.697727 58.58452\n411   male yes   housed  61  61 207     34          0   no 19.919922 64.95238\n412   male  no   housed  13  19 216     33          0   no 13.312669 49.44656\n413   male yes homeless  28  37 218     43          0   no 15.686288 58.84382\n414   male  no   housed   6   7 227     32          1  yes 33.820976 27.27006\n415   male  no   housed  10  10 234     41          1  yes 11.499865 66.23132\n416   male  no   housed   0   0 244     36          1  yes 26.392733 32.35484\n417   male  no   housed   4  10 251     19          0   no 52.945427 58.86002\n418   male  no   housed  25  37 252     33          0   no 39.972664 56.95388\n419   male  no homeless   2   2 263     40         NA &lt;NA&gt; 23.446474 40.40644\n420   male  no homeless  26  26 266     44          1  yes 42.341843 61.74688\n421   male  no   housed  24  24 267     33          0   no 28.061911 53.93607\n422   male yes homeless   0   0 271     38          0   no 28.073883 63.86327\n423   male  no homeless  13  13 281     38          1  yes 37.116608 35.98627\n424   male  no   housed  12  12 282     31          0   no 57.800064 49.21747\n425   male  no   housed  12  30 301     41          0   no 12.204219 51.45133\n426 female  no   housed   4   4 303     20          1  yes 45.425110 58.75759\n427   male  no   housed  12  18 305     38          0   no 39.038631 47.92621\n428   male  no homeless   3   3 312     36          0   no 37.102394 51.63569\n429   male  no   housed  51  69 314     29          0   no 23.898293 23.55043\n430   male  no homeless   5   5 321     29          0   no 46.330513 59.16547\n431   male  no homeless  68  68 330     42          1  yes 13.412563 42.08535\n432   male  no homeless  29  29 340     43          0   no 49.503277 51.01598\n433 female  no homeless  26  26 345     28         NA &lt;NA&gt; 18.594315 38.86502\n434 female  no   housed   7   8 349     27          0   no 25.676130 54.98139\n435   male  no   housed   5   5 373     38          0   no 33.345051 46.42344\n436   male  no homeless  32  32 390     41          0   no 18.530807 52.71838\n437   male  no   housed   0   0 393     14          0   no 54.525818 59.42862\n438   male  no   housed  76  78 396     10          0   no 44.171612 38.49107\n439   male  no homeless  26  26 397     32          0   no 47.779892 52.73988\n440   male  no homeless  41  62 398     39          0   no 21.271496 45.72916\n441   male  no homeless  18  18 410     43          1  yes 39.929405 61.97865\n442   male  no homeless  22  30 412     31         NA &lt;NA&gt; 25.632202 60.46511\n443   male  no   housed  53  63 417     43          1  yes 23.716438 38.24600\n444 female yes homeless  26  32 427     37          0   no 34.152245 45.27036\n445   male  no homeless   4  13 434     34          0   no 52.792542 57.12674\n446   male  no   housed   3   3 439     30          0   no 28.609346 52.02338\n447 female yes homeless  56  61 451     41          0   no 17.050970 34.51623\n448   male  no homeless   0   0 453     36          0   no 25.851772 50.60834\n449   male  no   housed   0   0 454     38          0   no 41.943066 56.96868\n450   male  no   housed  13  20 455     39          1  yes 62.175503 57.25384\n451 female  no homeless   1  24 460     28          0   no 33.434536 40.04572\n452   male  no homeless  13  13 462     26          0   no 54.424816 53.73204\n453   male  no homeless  51  51 463     43          0   no 30.212227 43.47607\n    pss_fr  racegrp satreat sexrisk substance treat avg_drinks max_drinks\n1        0    black      no       4   cocaine   yes         13         26\n2        1    white      no       7   alcohol   yes         56         62\n3       13    black      no       2    heroin    no          0          0\n4       11    white     yes       4    heroin    no          5          5\n5       10    black      no       6   cocaine    no         10         13\n6        5    black      no       5   cocaine   yes          4          4\n7        1    black     yes       8   cocaine    no         13         20\n8        4    white     yes       6   alcohol   yes         12         24\n9        5    white      no       8   alcohol    no         71        129\n10       0    white     yes       0    heroin   yes         20         27\n11       0    white      no       2    heroin   yes          0          0\n12      13    black     yes       0   alcohol    no         13         13\n13      13    white     yes       1   alcohol    no         20         31\n14       1    black      no       4   cocaine   yes         13         20\n15       1    white      no       8   alcohol   yes         51         51\n16       7 hispanic     yes       3    heroin   yes          0          0\n17       9    black      no       4    heroin    no          0          0\n18       1    other      no       4   cocaine    no          1          1\n19      13    white      no       3    heroin   yes          9         24\n20      11    black     yes       7   cocaine    no         23         23\n21       8    black      no       4    heroin   yes         26         26\n22      14    black      no       4   cocaine   yes          0          0\n23      10    white      no       6   alcohol    no         34         34\n24       6    black     yes       9   cocaine    no          4          5\n25       6    black      no       7   cocaine    no          6          8\n26       3    white      no       5   cocaine   yes          3          3\n27       6    black      no       4    heroin   yes          7          7\n28       4    white      no       5   alcohol    no         24         48\n29       5    black     yes       2   cocaine   yes          0          0\n30       3    black      no       6   alcohol    no         20         20\n31      12    black      no       0   alcohol    no          3          3\n32       2    black     yes       5   cocaine   yes          6          6\n33      10    black      no       2   cocaine   yes          0          0\n34      10    black      no       0   cocaine   yes          0          0\n35       8    black      no       3   alcohol   yes         32        135\n36       6    white      no       4   alcohol    no          2         24\n37      11    black      no       4    heroin    no          3          3\n38       1    white     yes       0   alcohol    no         27         27\n39      10 hispanic      no       4    heroin    no          3          7\n40       3    white      no       7   cocaine   yes         24         36\n41       4    black      no       7   cocaine   yes          6         12\n42       7    black      no       6   cocaine    no          0          0\n43      14    white      no       4    heroin   yes         13         13\n44      10    black      no       5   alcohol    no         25         28\n45      12    black      no       4   cocaine   yes          6         13\n46      12    black      no       1   alcohol    no         13         61\n47      11    black      no      10    heroin   yes         15         26\n48       6    black      no       6   cocaine    no          7          7\n49       6    other      no       9    heroin   yes          9         15\n50       2    black      no       7   alcohol   yes          5         13\n51       1    black      no       7   cocaine   yes         13         20\n52       8    white      no       3   alcohol    no         34         34\n53      13    other      no       4   cocaine   yes          3          6\n54       1    white     yes       2   alcohol    no         37         43\n55      10    black      no       4   alcohol   yes         36         36\n56       7    black     yes       6    heroin    no         13         15\n57       6    black     yes       7   cocaine    no          3         19\n58      13    white     yes       4   alcohol   yes          3          6\n59       4 hispanic     yes       4    heroin    no          0          0\n60      12    black     yes       6   cocaine   yes         32         32\n61      11    black     yes       4   alcohol    no         35         42\n62       5    white      no       6   alcohol    no         20         20\n63       5    black     yes       9   alcohol    no          7         25\n64       1    black      no       4   alcohol   yes         59        164\n65       8    white     yes       2    heroin   yes          0          0\n66       3    white     yes       6   alcohol   yes         26         51\n67       6    white      no       9   cocaine    no         12         18\n68      14    white      no       3    heroin    no          0          0\n69       4    black      no       5   cocaine   yes         18         36\n70       5    white      no       8   cocaine    no          6         12\n71      10    white      no      12   cocaine    no         13         17\n72       2    black      no       4   cocaine   yes          5          5\n73       4    black      no       9    heroin    no          2          2\n74       9    black     yes       6   cocaine    no        102        102\n75       7    white     yes       6   alcohol   yes          0          0\n76       1 hispanic      no       3    heroin    no         21         21\n77      12    white      no      11    heroin   yes          6          8\n78       1    black      no       7   cocaine   yes          1          1\n79      10    black      no       4   alcohol    no         19         19\n80      13    black      no       4   alcohol   yes          1         22\n81      11    black      no       3   cocaine    no          2          2\n82       9    other      no       5   alcohol   yes          0          0\n83       8    white     yes       2   alcohol    no         26         47\n84       3    black      no       1    heroin   yes          0          0\n85      12    white      no       1    heroin   yes          9         19\n86      14    black      no       4   cocaine    no         10         10\n87       4 hispanic      no       5    heroin   yes          4          5\n88      10    black      no       5   cocaine    no          6         15\n89       9    white      no       3   alcohol    no         26         51\n90       1    other      no       7   alcohol   yes         64         64\n91      10    black     yes       4   cocaine   yes         26         26\n92       9    black      no      10   cocaine   yes          2          3\n93       7    white     yes       3   alcohol    no         33         38\n94       6    black      no       3   cocaine   yes         61        184\n95       5    black      no       2   cocaine    no          2          2\n96       9    black     yes       7   cocaine    no         19         19\n97      12    black     yes       5   alcohol   yes          9         15\n98       1    white     yes       4    heroin    no          0          0\n99       4    white      no       6   alcohol   yes         18         47\n100      8    white      no       0   alcohol   yes         51         51\n101      4    white     yes       5    heroin    no          0          0\n102      9    black      no       6   alcohol    no         36         66\n103      6    black      no       3   alcohol    no         31         91\n104      5    white      no       4    heroin   yes          0          0\n105      7    black      no       4   alcohol   yes         26         69\n106      2    black      no       5   cocaine    no          2         20\n107     14 hispanic      no       4   cocaine   yes          0          0\n108      4    white     yes      13   alcohol    no         51         51\n109      7    black      no       5   alcohol   yes         34         34\n110      4    black      no      10   cocaine    no         39         95\n111      3    black      no       9   cocaine   yes         19         26\n112      6    white     yes       4   alcohol    no         13         13\n113     12    white     yes       4    heroin   yes          0          0\n114     10    white      no       6    heroin    no          0          0\n115      3    other      no       9   cocaine    no         13         13\n116     13    black     yes       6   cocaine   yes          1          1\n117      7    black      no       3   alcohol   yes         22         22\n118      4    black      no       7   cocaine   yes         13         33\n119     11    black     yes       3   cocaine   yes         26         26\n120      5    white     yes       3   alcohol    no         19         30\n121      2    white      no       5   alcohol    no         26         26\n122      2    white      no       0   alcohol    no         13         13\n123      8    black     yes       7   cocaine   yes          3          3\n124      9    black      no       7   cocaine   yes         24         24\n125     11    black      no       4    heroin   yes          0          0\n126      9    other      no       7   cocaine   yes          0          0\n127      7    white      no       0   alcohol    no         53         53\n128      7    black     yes       7   cocaine   yes          7          7\n129      1    black      no       7   alcohol    no         25         25\n130      7 hispanic     yes       9   alcohol    no         15         15\n131      5    black      no       6   alcohol   yes         64        179\n132     12    black      no       4    heroin    no          4          4\n133      9    white     yes       5    heroin   yes          3          6\n134      1    white      no       5   cocaine   yes          2          2\n135      8    white      no       7   alcohol    no         13         13\n136      7    white      no       5   alcohol    no         20         51\n137      8    black      no       9   cocaine   yes          1          3\n138      7    other      no       5   cocaine   yes         38         38\n139      6    black     yes       6    heroin    no          8          8\n140      3    black     yes       6   cocaine   yes          0          0\n141      3    black      no       2   cocaine    no         13         13\n142      8    white      no       5   alcohol   yes         39         39\n143     10    black      no       7   cocaine    no         12         20\n144      9    black     yes       2   cocaine    no          0          0\n145     11    white      no       4    heroin   yes          0          0\n146     11    other     yes       3    heroin    no          1          1\n147      9    white     yes       1   alcohol    no         19         32\n148      2    white      no       6    heroin    no          0          0\n149      8    white      no       4   alcohol   yes         26         51\n150      8    black      no       7   alcohol   yes         19         19\n151      7    black      no       8   cocaine    no          3          6\n152      3    black     yes       9   cocaine   yes          1          1\n153      5    white     yes       5   alcohol    no         12         17\n154     13    black     yes       7   cocaine   yes         29         29\n155      2    white      no       8   alcohol    no         38         38\n156      6    white     yes       0   alcohol    no         12         12\n157      9    black      no       0    heroin    no          4          4\n158      7    white      no       0   alcohol   yes         19         50\n159     11 hispanic      no       3   alcohol   yes         41         54\n160      2    other      no       0    heroin    no          1          3\n161      3    white      no       4    heroin   yes          0          0\n162      7 hispanic      no       5   alcohol    no         59         59\n163      1    white      no       6    heroin   yes         19         19\n164      7    black      no       2   cocaine   yes          8          8\n165     14    black      no      11   cocaine    no         16         20\n166     10    black      no       4   cocaine    no         12         12\n167      8    white      no      11   alcohol    no         26         33\n168      3    white      no       9   alcohol   yes         50         50\n169     14    white      no       0   alcohol   yes         12         20\n170     11    white      no       1    heroin   yes          1          3\n171      0    black      no      14   cocaine    no         13         32\n172      3 hispanic      no       7   cocaine    no         10         13\n173      4    black      no       8   cocaine   yes          3         24\n174     10    white      no       4    heroin   yes         20         20\n175      2    black     yes       7   cocaine    no         19         26\n176     10    white      no       4   alcohol   yes          6         12\n177      2    black     yes       7   alcohol   yes        102        102\n178     10    black      no       7   cocaine    no          1          4\n179      2    other     yes       5    heroin   yes          0          0\n180     12    black      no       8    heroin    no         58         58\n181      2    white      no       4    heroin   yes          9          9\n182      9    black      no       8    heroin    no          0          0\n183      2    black      no       6   cocaine   yes         35         65\n184      5    black      no       8   alcohol   yes         33         51\n185     13    black     yes       3   alcohol    no         19         19\n186     11    black     yes       2   alcohol   yes         58         58\n187      8    other      no       3    heroin    no         32         38\n188     11    white      no       6    heroin    no          0          0\n189      6    white      no       6   cocaine   yes          0          0\n190     10    black      no       3   cocaine   yes          6          6\n191     11    black      no       0   cocaine    no          0          0\n192      6 hispanic      no       6   alcohol    no         18         18\n193     12    white      no       4    heroin    no          0          0\n194      3    white     yes      11   cocaine   yes         38         38\n195     12    black     yes       0   cocaine    no         13         13\n196      5    black      no       3   alcohol   yes          0          0\n197     11    black      no       3   alcohol    no         46         46\n198      4    white     yes       2    heroin   yes         27         30\n199     14    black      no       2   cocaine    no          3          3\n200      7    white      no       4    heroin    no         12         12\n201      3    white      no       5   alcohol   yes         16         26\n202      3    black     yes       4   cocaine   yes          1          6\n203      1    white      no       0   alcohol    no         26         26\n204      2    black     yes       7   alcohol   yes         23         92\n205      0    black     yes       5   alcohol    no         13         13\n206      4    black      no       2   cocaine    no          0          0\n207      2    black      no       8   cocaine    no          4          4\n208      0    white     yes       5   alcohol   yes         26         26\n209      3    black      no       2   cocaine   yes         13         13\n210      1    other      no       5   cocaine   yes         13         13\n211      8    white      no       5   alcohol    no         10         14\n212      5    black      no       4   alcohol    no         23         42\n213     10    black      no       5    heroin    no         42         48\n214     12    white      no       4   alcohol   yes         15         15\n215      6    black      no       4   cocaine   yes         19         20\n216     11    black      no       4   cocaine   yes          0          0\n217      7 hispanic      no       4    heroin    no         13         13\n218     14    black      no       8   cocaine    no          2          3\n219      3    white      no       5    heroin    no         13         26\n220      5    white      no       5   cocaine   yes         14         16\n221      1    white     yes       6   alcohol    no         51         51\n222      3    black      no       7   cocaine   yes         10         26\n223     10    white      no       0   alcohol    no         16         16\n224      7    white      no       1   alcohol   yes        102        102\n225      7    black     yes       2    heroin   yes          1          2\n226      6    black      no       5   cocaine   yes          6         20\n227      6    black      no      11   cocaine    no         27         27\n228     12    black      no       2   cocaine    no          4          4\n229      1    black      no       7   cocaine   yes         27         41\n230     10    black      no       4   cocaine    no          1          1\n231     11    white     yes       1   alcohol    no         54         73\n232     13 hispanic      no       4    heroin   yes         24         36\n233     11    black      no       7   alcohol   yes         10         20\n234      2    white     yes       1   alcohol    no         30         41\n235      9    black      no       4   alcohol   yes         43         43\n236      3    black      no       8   cocaine    no          2          2\n237      4    black      no       0    heroin    no         16         16\n238     12    black      no       4   cocaine   yes          3          3\n239     12    black      no       5   cocaine    no         34         51\n240      7    black     yes       8   cocaine   yes          8          8\n241      1    black      no       1   alcohol   yes         28         28\n242      3    black      no       6   cocaine    no         13         13\n243     13    black     yes       7   cocaine   yes         51         51\n244     11    black     yes      13   alcohol   yes        134        140\n245      6    black     yes       2   alcohol    no          5          6\n246      9    white      no       5    heroin   yes          5          5\n247      3    white      no       4   alcohol    no          3          3\n248      6    black     yes       4   cocaine    no          0          0\n249     11 hispanic      no       3   cocaine    no         26         26\n250     12    white      no       1   alcohol   yes         15         30\n251      4    white      no       4    heroin   yes          9         20\n252      5    white     yes       0   alcohol    no         10         15\n253     10 hispanic      no       3    heroin    no          0          0\n254      6    other      no       2   alcohol   yes         24         45\n255      1    white     yes       0   alcohol   yes         33         51\n256      4 hispanic      no       5    heroin    no          0          0\n257      6 hispanic     yes       4    heroin   yes          8         13\n258     12    black      no       4   alcohol   yes         27         33\n259      2 hispanic     yes       4    heroin   yes          0          0\n260     10    white      no       4    heroin    no          0          0\n261      5 hispanic      no       3    heroin   yes          3          3\n262     14    white      no       4   alcohol   yes         14         20\n263      3    white     yes       2    heroin    no         12         12\n264     11    black      no       6   cocaine    no          1          1\n265      5    black      no       4   cocaine   yes          0          0\n266      2    black      no      11    heroin   yes          1          1\n267     11 hispanic      no       3    heroin   yes          0          0\n268      9    other      no       4   alcohol    no         25         33\n269     11 hispanic      no       0   alcohol    no         42         57\n270      3    white      no       1    heroin   yes          2          2\n271     11    white     yes       6    heroin   yes          6          6\n272     12    black      no       5   cocaine    no         19         19\n273      3    black      no      11   alcohol   yes         29         58\n274      2    black      no       9   alcohol   yes          0          0\n275      4 hispanic      no       4    heroin    no          0          0\n276      2    other      no       0    heroin   yes          0          0\n277      6    black      no       6   cocaine    no         22         32\n278     12    black     yes       6   alcohol   yes         19         19\n279      3    black     yes       5   alcohol    no         13         19\n280      5    black      no       8   cocaine   yes          1          1\n281      7    black      no       6   alcohol    no         67         67\n282     12    black     yes      11   cocaine    no         13         13\n283     10    white      no       2    heroin   yes         20         20\n284     10    black      no       2    heroin   yes          0          0\n285      2    black     yes       7   cocaine   yes          3          9\n286      5    white      no       8   alcohol    no        142        142\n287      3    black     yes       5   alcohol    no         53         53\n288      1    white     yes       0    heroin    no         64         64\n289      8    other      no       7    heroin   yes          0          0\n290      7    other      no       3    heroin    no          2          2\n291     10    white      no       6   alcohol   yes         51         51\n292     11    black     yes       6   cocaine   yes          1          1\n293      7    black      no       9   alcohol    no         24         30\n294     12 hispanic      no       1   alcohol    no         35         35\n295      0    other      no       2   alcohol    no         67         80\n296      0    white      no       4    heroin   yes          0          0\n297      5    black      no       1   cocaine    no         13         26\n298      8    black      no       4   cocaine   yes          6          6\n299      2 hispanic      no       8    heroin   yes         12         12\n300      2 hispanic      no       0   alcohol    no          7          7\n301      5    white      no       7   alcohol   yes         26         26\n302      9    white     yes       6   alcohol   yes         41         56\n303      2 hispanic     yes       7   alcohol    no          3          3\n304      4    black      no       5   alcohol   yes         18         31\n305      0    white      no       9   alcohol    no         38         55\n306      2    black     yes       4   alcohol    no         12         15\n307     13    white      no       1    heroin   yes         26         26\n308      4    black     yes       0    heroin    no          4          4\n309     11 hispanic      no       4   alcohol   yes         32         32\n310      9    black      no       0   cocaine   yes         13         13\n311      5    white      no       4   alcohol    no         34        102\n312      6    black      no       7   cocaine   yes         38         51\n313     13    white     yes       3   alcohol    no          0          0\n314     14    black      no       8   cocaine   yes         13         13\n315     13    white      no       4    heroin    no          0          0\n316      3    black      no       9   cocaine    no          3          3\n317      5    black     yes      11   cocaine   yes         49         49\n318      0    white      no       3   alcohol    no         18         36\n319      1 hispanic     yes       3    heroin   yes          0          0\n320     14    black      no       4   cocaine    no         58         58\n321      5 hispanic      no       4    heroin   yes          2          2\n322      4    black      no       5   cocaine   yes          6         13\n323      6    black      no       5   cocaine   yes          6         13\n324      7    black     yes       6   cocaine    no         10         10\n325      3 hispanic      no       1    heroin   yes          0          0\n326     12    white      no       0   alcohol    no          6         20\n327      2 hispanic     yes       2   cocaine   yes          6          6\n328     10    white      no       2    heroin    no          0          0\n329      9    black      no       6   alcohol   yes         32         32\n330      9    white      no       4   alcohol   yes          6          6\n331      5 hispanic     yes       4   alcohol    no          3         12\n332     11    black     yes       5   cocaine   yes          6          6\n333      1 hispanic     yes       4   cocaine   yes          0          0\n334      6    white      no       0   alcohol   yes         25         25\n335      5    white      no       5   alcohol    no         13         26\n336      3    black     yes       5   alcohol    no         18         18\n337      0    black      no       4   alcohol   yes         13         26\n338      3    black     yes       3    heroin    no          0          0\n339      1    black      no       3   cocaine   yes          2          2\n340      5    black      no       9   cocaine    no         26         38\n341     10    black     yes       8   cocaine   yes          5         25\n342      7    black      no       6   cocaine   yes         10         23\n343     12    black      no       8   cocaine    no          0          0\n344     14    black      no       4    heroin    no          4          4\n345     11    black      no       5   cocaine   yes         29         85\n346      3    other      no       2   alcohol    no         20         20\n347     12    black      no       2   cocaine   yes          3         12\n348      5    white     yes       5    heroin    no          6         12\n349      3    black      no       7   cocaine    no         13         13\n350     12    white     yes       3    heroin   yes         36         36\n351      8    white     yes       3    heroin    no         18         18\n352     14    black      no      12   cocaine   yes          0          0\n353      3 hispanic      no       2    heroin    no         45         45\n354     11    black     yes       2    heroin   yes         13         13\n355      4    white      no       0    heroin    no          4         10\n356      5    white     yes       4   alcohol    no          6         26\n357      5    black      no       3    heroin    no          6          6\n358      8    white      no       4   alcohol    no         25         42\n359     12 hispanic      no       0   alcohol    no         21         21\n360     12    other      no       4    heroin   yes         13         13\n361     11 hispanic      no       2    heroin   yes         37         37\n362      8    black     yes       5   alcohol    no         25         25\n363      4    white     yes       1   alcohol   yes         38         38\n364      8 hispanic      no       3   alcohol    no         12         29\n365      6    black      no       4   cocaine   yes          6         24\n366      3    black      no       5    heroin   yes          6          6\n367      0    white     yes       5    heroin    no          0          0\n368      7    black      no       2    heroin   yes          0          0\n369      4    white     yes       1    heroin   yes          8          8\n370      5    white      no       5   alcohol    no         32         32\n371      9    other      no       9   alcohol    no         24         51\n372      4    white     yes       3   alcohol    no         51         51\n373      3    black      no       4   alcohol   yes         35         35\n374      4 hispanic     yes       2   alcohol    no         73         73\n375      3    white      no       4    heroin   yes          9         31\n376      2    white      no       5   alcohol   yes         51         51\n377      2    black      no       7    heroin    no          6          8\n378      7    white      no       3   alcohol   yes          6         16\n379      0    black      no      10   cocaine   yes          6         13\n380     14    white      no       5    heroin   yes          2          3\n381      5    white      no       6   alcohol   yes         26         41\n382     11    black     yes       6   cocaine   yes          0          0\n383     14    black     yes       5   cocaine    no          1          1\n384      1    black      no       5   cocaine    no         49        109\n385     11 hispanic      no       4    heroin   yes         19         25\n386      8    black      no       1    heroin    no          3         16\n387      5    white      no       2   alcohol    no         38         51\n388     14    white      no       3   alcohol   yes         26         40\n389      6    white      no       5   alcohol    no         83        145\n390      7    white      no       7    heroin    no         32         40\n391      3    black      no       6   alcohol    no         19         19\n392      4 hispanic     yes      12   cocaine   yes         30        101\n393     14    black      no       3   alcohol    no         42         42\n394      4    black     yes       1   cocaine    no          1          1\n395      8    other      no       7   cocaine   yes         18         26\n396      8    white      no       4   alcohol    no         35        105\n397      7 hispanic      no       0   alcohol   yes         20         20\n398     14    white      no       1    heroin    no          0          0\n399      4    black      no       7   cocaine    no         11         14\n400      4 hispanic     yes       2    heroin   yes         26         26\n401      7    white      no       6   alcohol   yes         43         54\n402      4    white      no       4   alcohol    no         19         26\n403      8    white      no       5   cocaine   yes          1          2\n404      9    white     yes      14    heroin   yes         13         26\n405      3    white     yes       4   alcohol   yes         51         51\n406     11    white      no       1   alcohol    no         24         48\n407      1    white      no      10    heroin   yes         13         13\n408      3    white     yes       1   alcohol    no         20         26\n409      7    black     yes       3   alcohol    no         26         26\n410     11    white      no       3   alcohol    no          8         18\n411      5    white      no       8   alcohol    no         61         61\n412      8    black      no       3    heroin    no         13         19\n413      1 hispanic      no       8   alcohol   yes         28         37\n414      4    other      no       5    heroin   yes          6          7\n415      4    other      no       3   alcohol   yes         10         10\n416      7 hispanic      no       8    heroin   yes          0          0\n417     11    white     yes       5   cocaine   yes          4         10\n418      3    black     yes       2   alcohol    no         25         37\n419      8 hispanic      no       9    heroin    no          2          2\n420      3    white      no       0   alcohol   yes         26         26\n421     12    black      no       4   cocaine    no         24         24\n422      9 hispanic      no       3   cocaine   yes          0          0\n423      9    black     yes       8   cocaine   yes         13         13\n424     12    black      no       4   cocaine    no         12         12\n425     11    white      no       2   cocaine    no         12         30\n426      1    black      no       2   cocaine   yes          4          4\n427      0    black      no       7   cocaine    no         12         18\n428      2    black      no       3   cocaine    no          3          3\n429      9    white     yes       2   alcohol    no         51         69\n430      8    black      no       3   cocaine    no          5          5\n431      7    white      no       3   cocaine    no         68         68\n432      3    white      no       5   alcohol   yes         29         29\n433      3    white      no       4   alcohol    no         26         26\n434     13    white      no       4   alcohol   yes          7          8\n435      1    white      no       6    heroin   yes          5          5\n436      1    white     yes       7    heroin    no         32         32\n437      5 hispanic      no       4    heroin    no          0          0\n438      1    white      no       4   alcohol    no         76         78\n439     10    white      no       0   alcohol    no         26         26\n440      2    white      no       8   alcohol   yes         41         62\n441      3    white     yes       4    heroin   yes         18         18\n442     14    white      no       3   alcohol    no         22         30\n443      7 hispanic      no       1    heroin   yes         53         63\n444      2 hispanic      no       3   alcohol   yes         26         32\n445     11    other      no       2   alcohol    no          4         13\n446      6    black     yes       4    heroin    no          3          3\n447      8 hispanic     yes      14   alcohol    no         56         61\n448      5    white     yes       4    heroin    no          0          0\n449      7    white      no       4    heroin   yes          0          0\n450     11    white      no       0   alcohol   yes         13         20\n451      1    white      no       2    heroin    no          1         24\n452      7    black     yes       9   cocaine    no         13         13\n453     11    white      no       4   alcohol    no         51         51\n    hospitalizations\n1                  3\n2                 22\n3                  0\n4                  2\n5                 12\n6                  1\n7                 14\n8                  1\n9                 14\n10                 4\n11                 0\n12                 3\n13                 5\n14                10\n15                 2\n16                 6\n17                 1\n18                 2\n19                 0\n20                 1\n21                 1\n22                 1\n23                 4\n24                 2\n25                 4\n26                 1\n27                 0\n28                 0\n29                 1\n30                 2\n31                10\n32                 0\n33                 1\n34                 1\n35                 1\n36                 2\n37                 0\n38                 7\n39                 0\n40                15\n41                 1\n42                 2\n43                 2\n44                 0\n45                 2\n46                 2\n47                 5\n48                 0\n49                 2\n50                 2\n51                 3\n52                 5\n53                 1\n54                 2\n55                 5\n56                 0\n57                 1\n58                 3\n59                 3\n60                 1\n61                 0\n62                 3\n63                 1\n64                 5\n65                 4\n66                 2\n67                 4\n68                 0\n69                10\n70                 3\n71                 2\n72                 4\n73                 7\n74                 2\n75                 0\n76                 1\n77                 1\n78                 1\n79                 3\n80                 2\n81                 2\n82                 2\n83                 1\n84                 0\n85                 2\n86                 2\n87                 2\n88                 1\n89                20\n90                 9\n91                 1\n92                 2\n93                 1\n94                 3\n95                 1\n96                 0\n97                 2\n98                 0\n99                 2\n100                3\n101                3\n102               20\n103                0\n104                1\n105                3\n106                0\n107                0\n108                2\n109               15\n110               10\n111                0\n112                4\n113                5\n114                9\n115                2\n116                5\n117                1\n118                2\n119                1\n120                3\n121                2\n122                6\n123                1\n124                0\n125                0\n126                4\n127                6\n128                0\n129               10\n130               13\n131                5\n132                1\n133                0\n134                4\n135                2\n136               20\n137                1\n138                2\n139                1\n140                0\n141                1\n142                2\n143                2\n144                1\n145                1\n146                1\n147                8\n148                3\n149                8\n150                1\n151                1\n152                1\n153                4\n154                2\n155               10\n156                4\n157                2\n158                0\n159                1\n160                1\n161                6\n162                4\n163                3\n164                2\n165                3\n166                1\n167               10\n168                3\n169                2\n170                1\n171                4\n172                0\n173               10\n174                1\n175               40\n176                0\n177                1\n178                1\n179                0\n180                2\n181                2\n182                1\n183                1\n184                2\n185                2\n186                1\n187                6\n188                0\n189                2\n190                4\n191                1\n192                0\n193                3\n194                7\n195                3\n196                4\n197                1\n198                1\n199                2\n200                4\n201                3\n202                1\n203                1\n204                3\n205                0\n206                1\n207                1\n208                2\n209                2\n210                2\n211                5\n212                4\n213                2\n214                6\n215                0\n216                4\n217                0\n218                4\n219                1\n220                0\n221                1\n222                1\n223                4\n224                6\n225                2\n226                6\n227                2\n228                1\n229                2\n230                1\n231                8\n232                2\n233                0\n234                2\n235               10\n236                0\n237                2\n238                1\n239                1\n240                0\n241                1\n242                4\n243                1\n244                4\n245                1\n246                2\n247                6\n248                0\n249                0\n250                2\n251                0\n252                3\n253               20\n254                1\n255                2\n256                2\n257                1\n258                6\n259                0\n260                2\n261                0\n262                2\n263                3\n264                2\n265                2\n266                2\n267                0\n268                0\n269                1\n270                0\n271                0\n272                1\n273                1\n274                3\n275               20\n276                3\n277                1\n278                2\n279                0\n280                0\n281                4\n282                1\n283                2\n284                1\n285                1\n286               36\n287                1\n288                1\n289                2\n290                5\n291                2\n292                3\n293                3\n294                1\n295                8\n296                2\n297                5\n298                0\n299                6\n300                1\n301                1\n302                1\n303                0\n304                8\n305                3\n306                0\n307                0\n308                4\n309                0\n310                1\n311                2\n312               15\n313                4\n314                5\n315                1\n316                4\n317                1\n318                0\n319                1\n320                0\n321                2\n322                1\n323                0\n324                1\n325                0\n326                1\n327                0\n328                0\n329                1\n330                8\n331                1\n332                1\n333                3\n334                8\n335                1\n336                2\n337                4\n338                0\n339                0\n340                1\n341                1\n342                0\n343                2\n344                0\n345                0\n346                1\n347                0\n348                0\n349                0\n350                1\n351                1\n352                0\n353                3\n354                0\n355                5\n356                2\n357                4\n358                3\n359                3\n360                2\n361                5\n362                7\n363                2\n364                0\n365                1\n366                0\n367                1\n368                2\n369                2\n370                1\n371               10\n372                3\n373                1\n374                2\n375                4\n376                8\n377                2\n378                8\n379                1\n380                0\n381                5\n382                0\n383                1\n384                2\n385                1\n386                1\n387                4\n388                1\n389                4\n390                2\n391                4\n392                1\n393                3\n394                0\n395               17\n396                8\n397                0\n398                0\n399                2\n400                5\n401                2\n402                2\n403                7\n404                2\n405                5\n406                3\n407                1\n408                5\n409                1\n410                0\n411                1\n412                1\n413                4\n414                0\n415                4\n416                1\n417                0\n418                0\n419                2\n420                0\n421                0\n422                4\n423                2\n424                1\n425                1\n426                2\n427                4\n428                0\n429              100\n430                0\n431                6\n432                1\n433                8\n434                4\n435                0\n436                2\n437                0\n438               10\n439                1\n440                2\n441                1\n442                0\n443                2\n444                2\n445                1\n446                3\n447                1\n448                0\n449                1\n450                0\n451                0\n452                2\n453                1\n\n\nThat’s not really useful…how can we extract selected, useful information about a dataset?\n\n\nGathering information about a dataset\nThere are a few functions that make it easier to take a quick look at a dataset:\n\nhead() prints out the first few rows of the dataset.\nnames() prints out the names of the variables (columns) in the dataset\ndplyr::glimpse() (function glimpse() from package dplyr) gives an short list-like overview of the dataset\nskimr::skim() (function skim() from the package skimr) prints out more detailed graphical summary information about a dataset\nnrow() reports the number of rows (observations or cases) in the dataset\nncol() reports the number of columns (variables) in the dataset\n\nTry applying each of these functions to the HELPrct data and see what the output looks like each time:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThe input for each of the functions is the name of the dataset: HELPrct.\nhead(HELPrct)\nnames(HELPrct)\nnrow(HELPrct)\nncol(HELPrct)\nskimr::skim(HELPrct)\ndplyr::glimpse(HELPrct)\nIn this case, the point is usually to view the information on-screen, not to store it for later use, so we have not used &lt;- at all to store any output for later use or reference.\n\n\n\n\n\n\nGetting more help\nYou can get help related to R function, and built-in R datasets, using a special function: ?. Just type ? followed by the name of the function or dataset you want help on:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nFor example, if you want to know about the function nrow():\n?nrow",
    "crumbs": [
      "Home",
      "R Basics",
      "R Basics"
    ]
  },
  {
    "objectID": "quarto/r-basics.html#reading-in-data-from-a-file",
    "href": "quarto/r-basics.html#reading-in-data-from-a-file",
    "title": "R Basics",
    "section": "Reading in data from a file",
    "text": "Reading in data from a file\nFor this class, you will often be asked to analyze data that is stored in files that are available online - usually in csv format. It’s simple to read them into R. For example, we can read in the file MI_lead.csv, which is stored at https://sldr.netlify.app/data/MI_lead.csv using the function read_csv() (from package readr or super-package tidyverse):\n\nlibrary(readr) # the readr package contains the read_csv() function\nMI_lead &lt;- read_csv(file = 'https://sldr.netlify.app/data/MI_lead.csv')\n\nRows: 83 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): County, Peninsula, RandomRetest\ndbl (4): ELL2005, ELL2012, Difference, PropPre1950\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nThe most common mistakes\nThe code below contains several of the most common mistakes students make when they try to read in a data file. See if you can find and correct them all!\nThe code below - if corrected - should run without an error and read in some baseball statistics from the file https://sldr.netlify.app/data/baseball.csv.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHints\n\n\n\n\n\nThink about:\n\nIs the filename or URL spelled correctly, with no typos?\nIs the filename or URL in quotation marks (either ” or ’ work equally)?\nIs the URL complete (including the file extension “.csv”)\nWas &lt;- used to assign a name to the dataset once read in? (Otherwise it will just be uselessly printed to the screen and not available for later use!)\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nbaseball_data &lt;- read_csv(file = 'https://sldr.netlify.app/data/baseball.csv')\n\n\n\n\n\n\nWhat about local files?\nThe same function, read_csv(), can be used to read in a local file. You just need to change the input to read_csv() – instead of a URL, you provide a path and filename (in quotes). For example, the input file = 'https://sldr.netlify.app/data/MI_lead.csv' might become file = 'C:\\\\Data\\\\MI_lead.csv'.\nWe won’t do an example in this tutorial because it’s not straightforward to work with local files within a tutorial environment, but you can practice it once you are working independently in RStudio.\nIf you are working on the server r.cs.calvin.edu, you will have to upload files to your cloud space on the server before you can read them in (RStudio on the server cannot access files on your computer’s hard drive). Look in the “Files” tab on the lower right, and then click “Upload.”\n\n\nNamed input arguments\nThe input argument we provided to R is the URL (in quotes – either single or double quotes are fine). But notice that this time, we gave the input argument a name, “file”, and specified its value with an equal sign.\nThis is not required - the command works fine without it:\n\nMI_lead &lt;- read_csv('https://sldr.netlify.app/data/MI_lead.csv')\n\nRows: 83 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): County, Peninsula, RandomRetest\ndbl (4): ELL2005, ELL2012, Difference, PropPre1950\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nHowever, if a function has more than just one input argument, it’s good to get in the habit of providing names for the inputs. If you provide names, then the order in which you list the inputs doesn’t matter; without names, the order matters and you have to use ? to figure out what order R expects!\n\n\nRenaming variables in a dataset\nThis is an advanced topic, so don’t worry if it seems complicated; for now, it just nice to realize some of the power R has to clean up and reorganize data.\nWhat if we didn’t like the names of the MI_lead variables? For example, a new user of the dataset might not know that that ELL stands for “elevated lead levels” and that ELL2005 gives the proportion of tested kids who had elevated lead levels in the year 2005.\nIf we wanted to use a clearer (though longer) variable name, we might prefer “prop_elevated_lead_2005” instead of “ELL2005” – more letters to type, but a bit easier to understand for a new user. How can we tell R we want to rename a variable?\nWe use the code:\n\nMI_lead &lt;- MI_lead |&gt;\n  rename(prop_elevated_lead_2005 = ELL2005)\n\nglimpse(MI_lead)\n\nRows: 83\nColumns: 7\n$ County                  &lt;chr&gt; \"Alcona County\", \"Alger County\", \"Allegan Coun…\n$ prop_elevated_lead_2005 &lt;dbl&gt; 0.0225, 0.0000, 0.0092, 0.0056, 0.0000, 0.0000…\n$ ELL2012                 &lt;dbl&gt; 0.000000000, 0.000000000, 0.002932551, 0.00341…\n$ Difference              &lt;dbl&gt; -0.022500000, 0.000000000, -0.006267449, -0.00…\n$ PropPre1950             &lt;dbl&gt; 0.2102230, 0.3257881, 0.2736533, 0.2858264, 0.…\n$ Peninsula               &lt;chr&gt; \"Lower\", \"Upper\", \"Lower\", \"Lower\", \"Lower\", \"…\n$ RandomRetest            &lt;chr&gt; \"Not Selected\", \"Not Selected\", \"Selected\", \"N…\n\n\nThe code above uses some tools you’ve seen, and some more advanced ones you haven’t seen yet. The symbol |&gt; is called a “pipe” and basically means “and then…” Translated into words, the code above tells R:\n\nMake a dataset called MI_lead by starting with the dataset MI_lead.\nNext, take the results do something more with them (|&gt;) …\nrename() a variable. What I want to rename is the variable ELL2005. Its new name should be prop_elevated_lead_2005.”\n\nSee…you can already start to make sense of even some pretty complicated (and useful) code.\nNote: If you give R several commands, not connected by pipes, it will do the first, then the second, then the third, and so on. R doesn’t need the pipe for permission to continue! Instead, the pipe tells R to take the results from the first command, and use them as the input or starting material for the next command.\n\n\nCheck out the data\nOK, back to business - simple functions and datasets in R.\nIt’s your turn to practice now. Use one of the functions you have learned so far to extract some information about the MI_lead dataset.\nHow many rows are in the dataset? How many variables (columns)?\nWhat are the variables named, and what are their values like?\nRemember, ? won’t work on MI_lead because it’s not a built-in R dataset.",
    "crumbs": [
      "Home",
      "R Basics",
      "R Basics"
    ]
  },
  {
    "objectID": "quarto/r-basics.html#review",
    "href": "quarto/r-basics.html#review",
    "title": "R Basics",
    "section": "Review",
    "text": "Review\nWhat have you learned so far? More than you think!\n\nFunctions in R\nYou’ve learned that R code is made up of functions, which are generally named descriptively according to the job they do. Functions have one or more input arguments, which is where you provide R with all the data and information it needs to do the job. The syntax for calling a function uses the template:\n\n\nfunction (  information1  ,  information2  , …)\n\n\n \n\n\nVariables in R\nYou’ve practiced creating variables in R using c(), and saving information (or the results of a computation) using the assignment arrow &lt;-.\n\n\nDatasets in R\nYou’ve considered several different ways to get datasets to work with in R: you can use datasets that are built in to R or R packages, or you can use read_csv() to read in data files stored in .csv format.\n\n\nVocabulary\nYou should now be able to define and work with some R-related terms:\n\ncode or commands that R can execute\nfunction and inputs or arguments\nassignment arrow: &lt;-\npipe = “and then…”: |&gt; (note: |&gt; is an older way of writing a pipe, and it does basically the same thing as |&gt;)",
    "crumbs": [
      "Home",
      "R Basics",
      "R Basics"
    ]
  },
  {
    "objectID": "quarto/r-basics.html#congratulations",
    "href": "quarto/r-basics.html#congratulations",
    "title": "R Basics",
    "section": "Congratulations!",
    "text": "Congratulations!\nYou just completed your first tutorial on R, and wrote some of your own R code. I knew you could do it…\nWant more help and practice? Consider checking out outside resources from posit: https://posit.cloud/learn/primers",
    "crumbs": [
      "Home",
      "R Basics",
      "R Basics"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#instructions",
    "href": "quarto/how-to-quarto.html#instructions",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "",
    "text": "While you work through this tutorial, you will create a Quarto (.qmd) document.\nQuarto lets you combine R code, output, and text in a single document that can be rendered in HTML, PDF, Word and more formats.\nIt’s like magic: you save all your text and R code in a simple file; when you’re ready, push a button and it’s compiled into an output document with nicely formatted text, code (optional to include, but for this class you always will), and all the figures and tables generated by your code.\nSince all the data analysis and results are automatically included in the compiled output document, your work is reproducible and it’s easy to re-do analysis if the data change, or if a mistake is uncovered.",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#quarto-yaml-settings",
    "href": "quarto/how-to-quarto.html#quarto-yaml-settings",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "Quarto YAML settings",
    "text": "Quarto YAML settings\n\nPDF or html?\nFor our course, you can choose to render to either an html file or a PDF file.\nSo, you’ll have either format: pdf or format: html in your YAML header. You can also try format: typst to render PDF files a bit faster (learn more about typst output format online).\nBut if you choose html, there’s an important change you have to make to the YAML header to ensure your html file is stand-alone. Meaning: you want all images, etc. to be embedded in the one file rather than stored in an accompanying folder. Otherwise, when you (say) upload the file on Moodle or email it, all the images and graphs will be omitted…yikes! Yes, embedding these makes the file larger, but if you are sharing the rendered html document, you need to.\nIf rendering to html, it is essential that you specify the setting embed-resources: true!\nSo, make sure you add embed-resources: true after the entry format: html: in your YAML header, exactly as shown below.\nMake sure to keep the spacing and line breaks just as shown.\nThe indents are each two spaces, so there are 2 spaces before html: and 4 before embed-resources:.\n\n\n\n\n\n\n\n\n\n\n\nCode tools\nNote that the YAML header shown above also had a second option activated for rendered html files: code-tools: true.\n\n\n\n\n\n\n\n\n\nWhat does this one do?\nIt adds a button “Code” at the top right of your file.\n\n\n\n\n\n\n\n\n\nIf you click it, you can view and copy the source code (basically, the contents of the original qmd file before rendering). This is not a bad option, for example for homework, as it allows me to see every detail of the settings you used and may help me troubleshoot any issues.",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#text-and-code-in-quarto",
    "href": "quarto/how-to-quarto.html#text-and-code-in-quarto",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "Text and Code in Quarto",
    "text": "Text and Code in Quarto\n\nText\nThe Quarto file is where you save all the R commands you want to use, plus any text commenting on the work you are doing and the results you get. Parts of the file with a plain white background are normal text.\nYou can format the text. For example, enclosing a word in asterisks will generate italics, so *my text* in the qmd file will become my text in the PDF. Using two asterisks instead of one will generate boldface, so **my text** becomes my text. You can also make bulleted lists, numbered lists, section headers, and more. For example,\n#### Some Text\nbecomes\n\nSome Text\n(a sub-section header). Fewer hashtags make the text even larger, and more make it smaller.\nCaution! Forgetting the space after the last hashtag will format your text verbatim rather than as a header (#fail). Failing to leave a blank line before the header can also make formatting fail.\nCheck out the Quarto Markdown Basics reference at https://quarto.org/docs/authoring/markdown-basics.html for more examples of how to format text in Quarto.\nFor instructions on how to include R output and special characters (symbols, subscripts, etc.) in your text, see also: https://connect.cs.calvin.edu/STAT341/symbols/\nBefore moving on, try a few of the tricks you just learned in your qmd file. Make it pretty!\n\n\n\nqmd file anatomy: R code chunks\nAn qmd file can (of course!) contain one or more R code chunks. These sections of the file have a grey background onscreen. In Source mode, each one begins with\n```{r}\nand ends with\n```\nlike so:\n\n\n\n\n\n\n\n\n\nIn Visual mode you can’t see the `:\n\n\n\n\n\n\n\n\n\n\n\nHow to add a new R code chunk to your file\nTo add a code chunk to your file in Source editor mode, you have three options.\n\nYou can type in the header and footer by hand to start and end the chunk.\nYou can click on the “add chunk” button at the top right. It’s a green box with the C inside (at the top of the qmd file; choose the first option, “R”, in the pulldown) to insert an empty chunk.\nYou can use a keyboard shortcut: Windows, Ctrl + Alt + I or OS X, Cmd + Option + I\n\nWhen you click the Render button, code in code chunks will be run, and any output will be included in the document.\n\n\n\n\n\n\n\n\n\n\n\nSetup Chunk\nConsider using the first R code chunk in a qmd file to specify settings (for graphics, display, etc.). In this chunk, you can also give R permission to use certain packages (software toolkits) with\n\nlibrary(packagename) \n\nFor example, we will use the ggformula package for graphics. So, verify that the first R code chunk in your file includes the line library(ggformula).\nYou can also specify options for each R code chunk - these go at the top, prefaced by #|. A typical setup chunk for our course might look like:\n\n\n\n\n\n\n\n\n\nNotice that several packages are loaded (that we will use frequently). theme_set() is used to specify some settings for graph output, and knitr::opts_chunk$set() is used to specify whether or not to include R code in the rendered file (Yes please: use echo: true!) and specify the default figure size.\nThere are tons more options and settings, and you can explore them at https://yihui.org/renderr/options/#chunk-options.\nBut for now, if you use something like the setup chunk shown above, it should work well and have what you need for almost all work in this course.\n\n\nThe settings chunk is invisible!\nIf you look carefully at the rendered output, you will see that the setup chunk does not appear there. That’s intentional - when you load packages with library(), they often print a lot of long and pretty useless messages, which you want to omit from your rendered document.\nThis is achieved by having the setting include: false\nHowever, for our course, no chunk other than the setup chunk should have the setting “include: false” (or echo: false for that matter). Generally, anyone evaluating your coursework needs to see all the code you used, not just its output.\n\n\nClean Up\nAt this point, you probably want to get rid of all the extra content in the template.\nIf you haven’t put a setup chunk into your own qmd file…do it now! Here’s another reminder of how it would look:\n\n\n\n\n\n\n\n\n\nNext, Delete everything in the file other than the YAML header and your setup R code chunk.\nNow the clutter is gone and you have space to include your own R code and text.\n(Before going further, make sure it still renders.)",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#run-r-code",
    "href": "quarto/how-to-quarto.html#run-r-code",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "Run R Code",
    "text": "Run R Code\nThere are multiple ways to run and test R code from a markdown file. Sometimes you want to render the whole file and get the PDF or HTML; other times you want to run just a specific bit of code to make sure it’s working correctly.\n\nRunning R Code from a qmd file: Render the file\nEvery time you render the file, all R code will be run automatically.\nA side note: PDF or HTML? Which is preferable?\nI think PDFs are a little more portable and a good default option, and their formatting is best for anything you are going to print out or share via email (especially with less technically inclined folks).\nHowever, later in the semester we may see how to create some pretty cool interactive graphics and/or tables in R, and these can only be rendered in HTML. For this class, you may use either one. (But not Word, remember? Because you’ll lose reproducibility…)\n\n\nRunning R Code from a qmd file: Run Menu\nYou can also use shortcuts/buttons to run specific chunk(s). Here is one way to do it (option 1): Use the Run pulldown menu at the top of the file. (Choose the option you want based on what you are trying to do).\n\n\n\n\n\n\n\n\n\n\n\nRunning Code from a qmd file: Shortcut Button\nHere is another way to use shortcuts/buttons to run only a specific chunk (option 2): Click on the green arrow at the upper right of a code chunk to run the chunk.\n\n\n\n\n\n\n\n\n\n\n\nRunning Code from a qmd file: Copy and Paste\nFinally, here’s a third way to use shortcuts/buttons (option 3):\nCopy the code you want to run, paste to the console window, and hit Enter.\n(Or, place your cursor in the line you want to run and hit ctrl + enter (Windows) or cmd + enter (Mac).)",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#data-from-a-url",
    "href": "quarto/how-to-quarto.html#data-from-a-url",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "Data from a URL",
    "text": "Data from a URL\nYou can load online datafiles in .csv format into R using the function read_csv(). The input to read_csv() is the full url where the file is located, in quotation marks. (Single or double quotes – it doesn’t matter which you choose, as they are equivalent in R.)\nFor example, we will consider a dataset with counts of the numbers of birds of different species seen at different locations in Hawai’i. It is stored at https://sldr.netlify.app/data/hawaii_birds.csv, and can be read into R using the command below.\n\nhi_birds &lt;- read_csv('https://sldr.netlify.app/data/hawaii_birds.csv')\n\n\nWhen you read in data, store it to a named object\nNote that we didn’t just run the read_csv() function – we assigned the results a name so that instead of printing the data table to the screen, R stores the dataset for later use.\n\nhi_birds &lt;- read_csv('https://sldr.netlify.app/data/hawaii_birds.csv')\n\nHere, we assigned the name hi_birds to the dataset using an “assignment arrow” &lt;- (the “arrow” points from the object toward the name).",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#data-from-google-sheets",
    "href": "quarto/how-to-quarto.html#data-from-google-sheets",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "Data from Google Sheets",
    "text": "Data from Google Sheets\nThere’s also a simple way to read in data from a Google Sheet.\nFirst, go to the Google Sheet online to prepare it by “publishing it online”.\nIn the File menu, choose “Publish to the Web”:\n\n\n\n\n\n\n\n\n\nIn the pop-up window, choose to publish your “Entire Document” as a .csv file:\n\n\n\n\n\n\n\n\n\nFinally, copy the resulting link.\n\n\n\n\n\n\n\n\n\nYou can use read_csv() with this link as input to read your data into R.",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#data-from-a-file",
    "href": "quarto/how-to-quarto.html#data-from-a-file",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "Data from a File",
    "text": "Data from a File\nYou can also upload your own data file to the server, and then read it in to R using read_csv(). The basic process is:\n\nUse spreadsheet software to create the data table\nSave the file as a csv file.\nUpload the csv file to the RStudio server\nUse the read_csv() function to read the file into R",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/how-to-quarto.html#r-functions",
    "href": "quarto/how-to-quarto.html#r-functions",
    "title": "Reproducible Documents with Quarto in RStudio",
    "section": "R functions",
    "text": "R functions\nAfter reading the data in, you can use R functions to have a look at it, for example:\n\nhead(hi_birds)\nglimpse(hi_birds)\nnrow(hi_birds)\n\nTry each of the lines of code above in R. What do the functions head(), glimpse(), and nrow() do? Try to figure it out based on the output they produce.\nIf you get stuck, consult R’s built-in help files. Remember, you can access the help for a function by running the code ?functionName – for example, if you want help on head(), run:\n\n?head",
    "crumbs": [
      "Home",
      "R Basics",
      "Using Quarto"
    ]
  },
  {
    "objectID": "quarto/math-notation.html",
    "href": "quarto/math-notation.html",
    "title": "Mathematical Notation in Quarto",
    "section": "",
    "text": "You might be wondering…\n\n\nHow can I include Greek letters and other symbols in the text part of my Quarto (or RMarkdown) document?\n\n\nBasically, you enclose the name of the symbol you want with $\\ …$\n(if you use LaTeX, this will be very familiar):\n\n\n\nType this in qmd:\nTo get this when rendered:\n\n\n\n\n$\\hat{p}$\n\\(\\hat{p}\\)\n\n\n$\\bar{x}$\n\\(\\bar{x}\\)\n\n\n$\\alpha$\n\\(\\alpha\\)\n\n\n$\\beta$\n\\(\\beta\\)\n\n\n$\\gamma$\n\\(\\gamma\\)\n\n\n$\\Gamma$\n\\(\\Gamma\\)\n\n\n$\\mu$\n\\(\\mu\\)\n\n\n$\\sigma$\n\\(\\sigma\\)\n\n\n$\\sigma^2$\n\\(\\sigma^2\\)\n\n\n$\\rho$\n\\(\\rho\\)\n\n\n$\\epsilon$\n\\(\\epsilon\\)\n\n\n$\\sim$\n\\(\\sim\\)\n\n\n$\\mu_D$\n\\(\\mu_D\\)\n\n\n$\\mu_{longsubscript}$\n\\(\\mu_{longsubscript}\\)\n\n\n$\\hat{p}_{longsubscript}$\n\\(\\hat{p}_{longsubscript}\\)\n\n\n$\\mu\\neq 0$\n\\(\\mu \\neq 0\\)\n\n\n$\\mu\\geq 5$\n\\(\\mu \\geq 5\\)\n\n\n$\\mu\\leq 1$\n\\(\\mu \\leq 1\\)\n\n\n$\\cup$\n\\(\\cup\\)\n\n\n$\\cap$\n\\(\\cap\\)\n\n\n$\\vert$\n\\(\\vert\\)\n\n\n$\\sim$\n\\(\\sim\\)\n\n\n$\\frac{numerator}{denominator}$\n\\(\\frac{numerator}{denominator}\\)\n\n\n\nFor other Greek letters, just spell out the name of the letter that you want (following the models above). If you want a capital Greek letter, capitalize the first letter of its name when you write it out (e.g. Sigma instead of sigma).\nNote: Avoid spaces before the final $ or after the initial $.",
    "crumbs": [
      "Home",
      "R Basics",
      "Mathematical Notation"
    ]
  },
  {
    "objectID": "quarto/math-notation.html#greek-letters-common-symbols-subscripts-and-superscripts",
    "href": "quarto/math-notation.html#greek-letters-common-symbols-subscripts-and-superscripts",
    "title": "Mathematical Notation in Quarto",
    "section": "",
    "text": "You might be wondering…\n\n\nHow can I include Greek letters and other symbols in the text part of my Quarto (or RMarkdown) document?\n\n\nBasically, you enclose the name of the symbol you want with $\\ …$\n(if you use LaTeX, this will be very familiar):\n\n\n\nType this in qmd:\nTo get this when rendered:\n\n\n\n\n$\\hat{p}$\n\\(\\hat{p}\\)\n\n\n$\\bar{x}$\n\\(\\bar{x}\\)\n\n\n$\\alpha$\n\\(\\alpha\\)\n\n\n$\\beta$\n\\(\\beta\\)\n\n\n$\\gamma$\n\\(\\gamma\\)\n\n\n$\\Gamma$\n\\(\\Gamma\\)\n\n\n$\\mu$\n\\(\\mu\\)\n\n\n$\\sigma$\n\\(\\sigma\\)\n\n\n$\\sigma^2$\n\\(\\sigma^2\\)\n\n\n$\\rho$\n\\(\\rho\\)\n\n\n$\\epsilon$\n\\(\\epsilon\\)\n\n\n$\\sim$\n\\(\\sim\\)\n\n\n$\\mu_D$\n\\(\\mu_D\\)\n\n\n$\\mu_{longsubscript}$\n\\(\\mu_{longsubscript}\\)\n\n\n$\\hat{p}_{longsubscript}$\n\\(\\hat{p}_{longsubscript}\\)\n\n\n$\\mu\\neq 0$\n\\(\\mu \\neq 0\\)\n\n\n$\\mu\\geq 5$\n\\(\\mu \\geq 5\\)\n\n\n$\\mu\\leq 1$\n\\(\\mu \\leq 1\\)\n\n\n$\\cup$\n\\(\\cup\\)\n\n\n$\\cap$\n\\(\\cap\\)\n\n\n$\\vert$\n\\(\\vert\\)\n\n\n$\\sim$\n\\(\\sim\\)\n\n\n$\\frac{numerator}{denominator}$\n\\(\\frac{numerator}{denominator}\\)\n\n\n\nFor other Greek letters, just spell out the name of the letter that you want (following the models above). If you want a capital Greek letter, capitalize the first letter of its name when you write it out (e.g. Sigma instead of sigma).\nNote: Avoid spaces before the final $ or after the initial $.",
    "crumbs": [
      "Home",
      "R Basics",
      "Mathematical Notation"
    ]
  },
  {
    "objectID": "quarto/math-notation.html#summations-and-products",
    "href": "quarto/math-notation.html#summations-and-products",
    "title": "Mathematical Notation in Quarto",
    "section": "Summations and Products",
    "text": "Summations and Products\n\n\n\nType This:\nTo get this in your PDF:\n\n\n\n\n$\\sum_{i=1}^{n} x_i$\n\\(\\sum_{i=1}^{n} x_i\\)\n\n\n$\\prod_{i=1}^{n} f(i)}$\n\\(\\prod_{i=1}^{n} f(i)\\)\n\n\n\nThese will format as seen above if used in inline math mode (enclosed in single $s). If you put them in display math mode by using two $$ at the start and end instead of just one, then the result will be displayed centered on its own line and the limits of the summation/product will be above/below the \\(\\Sigma\\) or \\(\\Pi\\):\n$$ \\(\\text{\\\\prod\\_{i=1}\\\\^ \\{ n \\} f(i)}\\) $$\ngives\n\\[\\prod_{i=1}^{n} f(i)\\]",
    "crumbs": [
      "Home",
      "R Basics",
      "Mathematical Notation"
    ]
  },
  {
    "objectID": "quarto/math-notation.html#long-equations",
    "href": "quarto/math-notation.html#long-equations",
    "title": "Mathematical Notation in Quarto",
    "section": "Long equations",
    "text": "Long equations\nYou can use double $ to bracket equations you want to display on a line of their own. Inside can be multiple mathematical expressions. For example:\n$$y = \\beta_0 + \\beta_1x_1 + \\epsilon,$$\n$$\\epsilon \\sim N(0, \\sigma)$$\ngives\n\\[y = \\beta_0 + \\beta_1x_1 + \\epsilon,\\] \\[\\epsilon \\sim N(0, \\sigma)\\]\nNote: Avoid spaces before the final $ or after the initial $.",
    "crumbs": [
      "Home",
      "R Basics",
      "Mathematical Notation"
    ]
  },
  {
    "objectID": "quarto/r-results.html",
    "href": "quarto/r-results.html",
    "title": "R Results in Quarto",
    "section": "",
    "text": "You may also want to include the results of R calculations in the TEXT part of your report.\nLet’s say you compute the mean of some kids’ foot lengths:\n\nmean(~length, data = KidsFeet)\n\n[1] 24.72308\n\n\nYou can use the result in the text part of your file…so you would type:\nThe mean length of the kids’ feet was ` r mean(~length, data=KidsFeet) ` cm.\nTo get:\nThe mean length of the kids’ feet was 24.7230769 cm.\nNote: those accent marks (before the “r” and at the end of the R-code stuff) are not normal single quotes or apostrophes; they are “back-ticks” or “graves” ( ` ), just like those used to help define the start and end of R code chunks in your Quarto file. There should not actually be a space between the ` and the r.\nBut it’s annoying (and sometimes not really practical) to (re)type the entire R command in the text part of your file. An option is to save the quantity you want to refer to as a variable in R:\n\nmean_length &lt;- mean(~length, data = KidsFeet)\n\nThen you can write: The mean foot length of the kids was ` r mean_length` cm.\nTo get: The mean foot length of the kids was 24.7230769 cm.",
    "crumbs": [
      "Home",
      "R Basics",
      "R Results in Text"
    ]
  },
  {
    "objectID": "quarto/r-results.html#including-results-of-r-calculations-in-your-text",
    "href": "quarto/r-results.html#including-results-of-r-calculations-in-your-text",
    "title": "R Results in Quarto",
    "section": "",
    "text": "You may also want to include the results of R calculations in the TEXT part of your report.\nLet’s say you compute the mean of some kids’ foot lengths:\n\nmean(~length, data = KidsFeet)\n\n[1] 24.72308\n\n\nYou can use the result in the text part of your file…so you would type:\nThe mean length of the kids’ feet was ` r mean(~length, data=KidsFeet) ` cm.\nTo get:\nThe mean length of the kids’ feet was 24.7230769 cm.\nNote: those accent marks (before the “r” and at the end of the R-code stuff) are not normal single quotes or apostrophes; they are “back-ticks” or “graves” ( ` ), just like those used to help define the start and end of R code chunks in your Quarto file. There should not actually be a space between the ` and the r.\nBut it’s annoying (and sometimes not really practical) to (re)type the entire R command in the text part of your file. An option is to save the quantity you want to refer to as a variable in R:\n\nmean_length &lt;- mean(~length, data = KidsFeet)\n\nThen you can write: The mean foot length of the kids was ` r mean_length` cm.\nTo get: The mean foot length of the kids was 24.7230769 cm.",
    "crumbs": [
      "Home",
      "R Basics",
      "R Results in Text"
    ]
  },
  {
    "objectID": "quarto/r-results.html#rounding",
    "href": "quarto/r-results.html#rounding",
    "title": "R Results in Quarto",
    "section": "Rounding",
    "text": "Rounding\nWhat if you want to include a more reasonable number of decimal places? Use : The mean foot length of the kids was ` r round(mean_length, digits = 2)` cm\nand you get: The mean foot length of the kids was 24.72 cm",
    "crumbs": [
      "Home",
      "R Basics",
      "R Results in Text"
    ]
  },
  {
    "objectID": "quarto/r-results.html#r-results-with-more-than-one-value-inside",
    "href": "quarto/r-results.html#r-results-with-more-than-one-value-inside",
    "title": "R Results in Quarto",
    "section": "R results with more than one value inside",
    "text": "R results with more than one value inside\nWhat if you have an object with more than one value in it? For example, what if you computes means for both boys and girls? You can use hard brackets ( [ … ] ) to refer to the first, second, etc. entries. For example:\n\ngirlboy.means &lt;- mean(~ length | sex,\n                      data = KidsFeet)\n\nYou type: The girls’ mean foot length was ` r girlboy.means[“G”] `, and the boys’ was ` r girlboy.means[“B”] `\nto get: The girls’ mean foot length was 24.3210526, and the boys’ was 25.105.\nYou can also use numeric indices – for example, ` r girlboy.means[2] ` instead of ` r girlboy.means[“G”] ` to get the girls’ value – but using names when you can is always safer because you don’t have to worry about whether things are stored in the order you think that they are!\nIf you are referring to a data table or other object with multiple rows and columns, you can use the syntax to extract a row, a column, or a specific value of interest. If you leave either or blank, all rows/columns will be included.\nFor example, consider a table showing some data from a survey of intro stat students ( tells whether they have gotten a speeding ticket while driving a car, and tells whether they have texted while driving a car):\n\nstudent_survey &lt;- read.csv('https://sldr.netlify.app/data/IntroStatStudents.csv', \n              na.strings = list('', 'NA'))\ntally(~Ticket | Texted, \n      data = student_survey, \n      format = 'proportion')\n\n               Texted\nTicket                  No        Yes\n  I don't drive 0.03703704 0.00000000\n  No            0.77777778 0.71900826\n  Yes           0.14814815 0.28099174\n  &lt;NA&gt;          0.03703704 0.00000000\n\n\nWhat if we want to print just the first column of data?\n(Note: Don’t count the row and column names when numbering the rows and columns.)\n\ntally(~Ticket | Texted, \n      data = student_survey,\n      format = 'proportion')[,1]\n\nI don't drive            No           Yes          &lt;NA&gt; \n   0.03703704    0.77777778    0.14814815    0.03703704 \n\n\nOr better (and clearer…)\n\ntally(~Ticket | Texted, \n      data = student_survey,\n      format = 'proportion')[, \"No\"]\n\nI don't drive            No           Yes          &lt;NA&gt; \n   0.03703704    0.77777778    0.14814815    0.03703704 \n\n\nWhat about the third row (for people who have gotten a ticket)?\n\ntally(~Ticket | Texted, \n      data = student_survey, \n      format = 'proportion')[\"Yes\",]\n\n       No       Yes \n0.1481481 0.2809917 \n\n\nWhat about the proportion of students with tickets, among those who’ve texted while driving? (Row 3, Column 2 = row “Yes” and column “Yes”)? Let’s first save the table so we don’t have to recompute…\n\ndriver_table &lt;- tally(~Ticket | Texted, \n      data = student_survey, \n      format = 'proportion')\n\nType: The proportion of students who have texted while driving who have gotten a speeding ticket is ` r driver_table[“Yes”,“Yes”] `.\nTo get: The proportion of students who have texted while driving who have gotten a speeding ticket is 0.2809917.\n(Like before, if it’s possible to use names instead of numeric indices, try to do so!)",
    "crumbs": [
      "Home",
      "R Basics",
      "R Results in Text"
    ]
  },
  {
    "objectID": "quarto/graphics-design.html",
    "href": "quarto/graphics-design.html",
    "title": "Graphics: Design Effective Visualizations",
    "section": "",
    "text": "After this section, you will be able to:\n\nCritique statistical graphics based on design principles.\nRecognize common misleading design choices for data visualizations\nRecognize data visualization that tells a true story, identifying elements that emphasize the main finding and make the figure easy to interpret at a glance",
    "crumbs": [
      "Home",
      "Visualization",
      "Designing Data Visualizations"
    ]
  },
  {
    "objectID": "quarto/graphics-design.html#module-learning-outcomes",
    "href": "quarto/graphics-design.html#module-learning-outcomes",
    "title": "Graphics: Design Effective Visualizations",
    "section": "",
    "text": "After this section, you will be able to:\n\nCritique statistical graphics based on design principles.\nRecognize common misleading design choices for data visualizations\nRecognize data visualization that tells a true story, identifying elements that emphasize the main finding and make the figure easy to interpret at a glance",
    "crumbs": [
      "Home",
      "Visualization",
      "Designing Data Visualizations"
    ]
  },
  {
    "objectID": "quarto/graphics-design.html#reference-materials",
    "href": "quarto/graphics-design.html#reference-materials",
    "title": "Graphics: Design Effective Visualizations",
    "section": "Reference Materials",
    "text": "Reference Materials\n\nBeyond Multiple Linear Regression Ch. 1.5\nEcological Models & Data in R Ch. 2 discusses graphics, but is not recommended as the approach to reading in data, writing R code, and generating graphs in R is very different to that used in this course.\nA comprehensive, and free, supplemental reference is Fundamentals of Data Visualization by Claus Wilke\n\nIt’s suggested that you refer to the above materials as needed after doing this section, with particular focus on the topics you found most challenging.",
    "crumbs": [
      "Home",
      "Visualization",
      "Designing Data Visualizations"
    ]
  },
  {
    "objectID": "quarto/graphics-design.html#inspiration",
    "href": "quarto/graphics-design.html#inspiration",
    "title": "Graphics: Design Effective Visualizations",
    "section": "Inspiration",
    "text": "Inspiration\n\nAbove all, show the data.\nE. Tufte, The Visual Display of Quantitative Information\n\nBut…\n\nThe Numbers Don’t Speak for Themselves.\nC. D’Ignazio and L. Klein, Data Feminism\n\nIn visualizing data, we use graphics to gain and communicate an honest understanding of data in context.",
    "crumbs": [
      "Home",
      "Visualization",
      "Designing Data Visualizations"
    ]
  },
  {
    "objectID": "quarto/graphics-design.html#motivation-imagine-first",
    "href": "quarto/graphics-design.html#motivation-imagine-first",
    "title": "Graphics: Design Effective Visualizations",
    "section": "Motivation: Imagine First!",
    "text": "Motivation: Imagine First!\nFigures are a crucial tool for exploring your data and communicating what you learn from the data.\nWhether you are doing a quick check to assess basic features of a dataset or creating a key figure for an important presentation, the best practice is to work thoughtfully.\n\nThe I.C.E.E. method:\n\nImagine how you want your graph to look, before you\nCode. Once you have the basic starting point,\nEvaluate your work, and\nElaborate (refine it).\n\nRepeat until the figure is as awesome as it needs to be.\n\n\nNO To Mindless Copy/Paste\nToo many of us fall into the trap of starting to write code (or copy/pasting it!) before pausing to think carefully about the desired outcome, then settling for the first vaguely relevant result (or delighting in the unintended outcome…).\n\n\nYou can do better than mindless copying! Only mindful copy-pasting allowed.\n\n\nThis section provides some advice to get you started. It can also provide inspiration for constructive critique of others’ graphics.\nHere we focus only on the I_EE parts of the process, where you design and assess graphics. Code will come later.",
    "crumbs": [
      "Home",
      "Visualization",
      "Designing Data Visualizations"
    ]
  },
  {
    "objectID": "quarto/graphics-design.html#appearance-goals",
    "href": "quarto/graphics-design.html#appearance-goals",
    "title": "Graphics: Design Effective Visualizations",
    "section": "Appearance Goals",
    "text": "Appearance Goals\nSpecifically, how exactly should a graphic look? There are so many choices: color, size, text and more. What are best practices for creating something beautiful, that represents the data honestly, and is easy to understand?\nThis section will provide some rules of thumb to help you Evaluate statistical graphics. It will also teach you to spot common problems and suggest ways to fix them, allowing you to provide constructive critique (to yourself or to others!) about how to Elaborate and refine data visualizations.\n\nYou still have your freedom!\nAs you digest all these rules and tips, you may wonder: “Do I have to always obey every one?” Well…No, of course not. Be creative!\nSometimes it’s OK to break these rules when you have thought it through and with a good justification.\nA good justification means that in your particular case, breaking a certain rule will make your graph more informative, easier to understand, or better at telling the story you’re highlighting.",
    "crumbs": [
      "Home",
      "Visualization",
      "Designing Data Visualizations"
    ]
  },
  {
    "objectID": "quarto/graphics-design.html#learning-objectives",
    "href": "quarto/graphics-design.html#learning-objectives",
    "title": "Graphics: Design Effective Visualizations",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nThis section will give you some basic tools to:\n\nGraph data with integrity, avoiding misleading design choices\nTell the right story, including elements that emphasize your main finding and make your figure easy to interpret at a glance",
    "crumbs": [
      "Home",
      "Visualization",
      "Designing Data Visualizations"
    ]
  },
  {
    "objectID": "quarto/graphics-design.html#bye-junk",
    "href": "quarto/graphics-design.html#bye-junk",
    "title": "Graphics: Design Effective Visualizations",
    "section": "Bye, Junk!",
    "text": "Bye, Junk!\nOur first principle is: if it doesn’t need to be in your graph, it shouldn’t be there. Keep things as simple as possible. What are some justifications for a need to include an element in a plot?\n\nIt is crucial to the story you are telling, or the research question you are answering.\nIt emphasizes your main point. For example, some plots may not need color, and in others it may add crucial visual contrast to highlight a main point.\nIt makes the graph easier to read and understand\nIt makes the main message of the graph more memorable\n\nIf you need it, include it, but if not, keep it simple!\nImagine you are using very expensive ink to print every element of the graph. Is every drop of in you’re using really worth it? If not, take it out. As influential data visualization thinker Edward Tufte put it in The Visual Display of Quantitative Information,\n\nA large share of ink on a graphic should present data-information, the ink changing as the data change. Data-ink is the non-erasable core of a graphic…\n\nIn other words, don’t let annotations, labels, grids, etc. overwhelm the visual impact of your data – Don’t do this:\n\nCartoon source: https://freshspectrum.com/data-ink-ratio/\n\nCheck: Critique the Pie\nThe figure below, from a Forbes article on mobile operating system crashes, is pretty awful.\n\nWhat is one main conclusion from the graph above? (It’s pretty confusing to interpret, so you may have to study carefully to find something…)\nNow that you have identified one main conclusion from the graph, what is one element of the plot that obscures that conclusion, is NOT necessary, and could be removed to improve the plot? Answer constructively - as if the person who made the plot was incredibly smart and someone you admire, and to whom you wanted to be kind but helpful.",
    "crumbs": [
      "Home",
      "Visualization",
      "Designing Data Visualizations"
    ]
  },
  {
    "objectID": "quarto/graphics-design.html#proportional-ink-and-axis-scales",
    "href": "quarto/graphics-design.html#proportional-ink-and-axis-scales",
    "title": "Graphics: Design Effective Visualizations",
    "section": "Proportional Ink and Axis Scales",
    "text": "Proportional Ink and Axis Scales\nFor bar graphs and other filled-area plots, the area of a graphic element should correspond to the proportion of the data it represents.\nThis principle might be violated if the lower limit of a count/frequency axis is not 0. If you’re showing the number or proportion or percentage of observations in categories, it’s usually best to set the lower limit of the axis to 0.\nIf you don’t start at 0, make sure the “at a glance” interpretation of your figure is not misleading!\nA similar principle applies for plots of quantitative variables if they use filled areas to represent numeric values and there is some value (zero or another threshold value) that is an important reference point.\nFor optional additional detail on choosing honest axis limits and more examples, check out the blog post by the excellent but (sorry) profanely named Calling B*** project.\nAn example from Chapter 17 of C. Wilke’s *Fundamentals of Data Visualization shows the “Stock price of Facebook (FB) from Oct. 22, 2016 to Jan. 21, 2017”:\n\n\nWhy is the Facebook figure above ‘bad’? Mark all correct answers as TRUE.\nThe graph suggests that Facebook stock value dropped dramatically around November 1, 2016. But it actually only lost about 10% of its value. TRUEFALSE\nThe grey area should be plain white, not colored in. TRUEFALSE\nThe stock price values appear too jagged and should be smoothed out. TRUEFALSE\nThere are some stock price values that appear to be outliers and should be removed. TRUEFALSE\n\n\n\nClick for explanations of solutions above.\n\n\nIn this case, it would probably be less misleading to use a y axis ranging from 0 to 135 instead of 110 to 135.\nA line chart could also be used here (without filling in the grey area), but using the color emphasizes the values rather than the trend over time.\nWe can not just change data values to make them look how we like. If we wanted to emphasize the smoothed trend over time, we could show the smoothed curve atop a scatter plot of the original data points, which would present the desired message without altering the data. If we did average over time before plotting, it should be clearly noted (for example, “Weekly average Facebook stock prices…”).\nEven if there are outliers (there are not extreme ones here), it is only acceptable to exclude them from analysis if you can verify that they are errors.\n\n\nConsider two ways to try to “fix” the figure (again from Wilke).\n\nA.\n\n\n\nB.\n\n\nWhy is the Facebook figure above ‘bad’? Mark all correct answers as TRUE.\nWhich of the figures above solves the proportional-ink problem with the Facebook stock price plot?\n\nA does it! TRUEFALSE\nB does it! TRUEFALSE\nActually maybe both of them do it…TRUEFALSE\nNeither of them solves the problem. TRUEFALSE\n\n\n\n\nClick for explanations of solutions above.\n\nA accurately shows the reduction in stock price as a proportion of the initial price. But what about B? Some would say B accurately shows the amount of value lost (and then regained) over time. Others would argue that it is as bad as the original, for similar reasons - the graph shows the absolute lost value, not the proportion lost value. So B may be OK, or bad, depending on your perspective.\nSome would say B accurately shows the amount of value lost (and then regained) over time. Others would argue that it is as bad as the original, for similar reasons - the graph shows the absolute lost value, not the proportion lost value.\n\n\n\nCounts or Proportions or Percentages?\n\nFor categorical data, should you show the Count in each category, or the Frequency (proportion or percent)? It depends!\n\nWhen you want to compare by category across groups, and the total number in each group varies, frequency works well\nIf representing differences in sample size between groups is crucial, counts work better",
    "crumbs": [
      "Home",
      "Visualization",
      "Designing Data Visualizations"
    ]
  },
  {
    "objectID": "quarto/graphics-design.html#grids-and-boxes",
    "href": "quarto/graphics-design.html#grids-and-boxes",
    "title": "Graphics: Design Effective Visualizations",
    "section": "Grids and Boxes",
    "text": "Grids and Boxes\nShould your graphics include boxes, axis lines, and grid lines?\nWell, it depends…\n\nRemoving unnecessary axes, grids, and labels yields a cleaner plot that may be easier to take in at a glance – there is less to distract from the main story\nBut… omitting needed baselines, tick marks, gridlines, and labels can cause confusion and make it hard to identify categories or estimate numeric values\nScientific graphics usually need axis lines, with tick marks\nIf a viewer will need to refer to an axis to estimate heights of bars or locations of points, then consider using gridlines for that axis.\nInstead of an entire grid, it may be more effective to include single lines indicating important threshold values\nConsider using a color that nearly blends into the background for grid lines, so that they detract as little attention as possible from the data\n\n\nExample\nStorytelling with Data provide an example of a cluttered figure where the trend over time pops out more as unnecessary grids and boxes are made less visible, then removed:\n\nOptionally, if you’d like more examples, read S. Few’s 3.5-page article on when grid lines are helpful.",
    "crumbs": [
      "Home",
      "Visualization",
      "Designing Data Visualizations"
    ]
  },
  {
    "objectID": "quarto/graphics-design.html#text-elements-titles-labels-size",
    "href": "quarto/graphics-design.html#text-elements-titles-labels-size",
    "title": "Graphics: Design Effective Visualizations",
    "section": "Text Elements: Titles, Labels, Size",
    "text": "Text Elements: Titles, Labels, Size\nWhen using text in a figure, ensure it is easy to read. Make sure no unneccessary text is included.\n\nDefault size of text in figures produced by statistical software is almost always too small. Make sure your text is big enough to be easily legible in the context where you will present it (on the page in a report, on a slide for a presentation, etc.)\nOther than the title of the vertical (y) axis, all the text in a plot should be horizontal. This makes it easier to read.\nAxis labels should be self-explanatory\n\nViewers should be able to guess what they mean accurately without looking at anything but the figure\nUse words instead of numeric codes or cryptic abbreviations\n\nAxis labels should also be as short as possible while remaining easy to understand\nEvery plot should have a title. Sometimes this might be a literal title at the top of the graph, but those are relatively rare. More often in scientific work, a text caption appears below the figure. The first phrase/sentence of the caption acts as the figure’s title\n\nRemember the melanoma rates over time figure from the last section?\n\n\nWhat helpful changes did Storytelling with Data make to the text labels as they improved the figure?\nThe x axis labels are rotated so they are horizonal. TRUEFALSE\nThe title color is changed to blue and the axis labels to grey. TRUEFALSE\nThe box around the plot is removed. TRUEFALSE\n\n\n\nClick for explanations of solutions above.\n\n\nRotating axis labels so they are horizontal is generally an improvement. To make this happen, the number of tick marks and labels on the x axis was also reduced. Notice the labels are much easier to read.\nThe color changes helped too. The blue links the title with the trend it describes, and the grey makes the axis titles less prominent and lets the viewer focus on the data. Continue to the next section for more on using color…\nThe box is gone, and it is a big improvement to the plot! But technically, you were asked about changes to the text labels…",
    "crumbs": [
      "Home",
      "Visualization",
      "Designing Data Visualizations"
    ]
  },
  {
    "objectID": "quarto/graphics-design.html#using-color",
    "href": "quarto/graphics-design.html#using-color",
    "title": "Graphics: Design Effective Visualizations",
    "section": "Using Color",
    "text": "Using Color\nColor - used with care - can be an incredibly effective part of a data visualization.\n\nEnsure your color choices highlight the story you want to tell\n\nConsider using black and grey to help some elements fade into the background - for example, grid lines and labels that must be present but aren’t the most important elements\n\nChoose color combinations that look good and are distinguishable by color-blind viewers and in greyscale\n\nDefault to using pre-defined color palettes provided by your software rather than choosing colors manually\nConsider being redundant - use size and/or shape as well as color to indicate groups.\n\nUse color consistently. Example: if “young” cases are red in one graph, don’t use red for “old” in the next graph\n\nThe video below, from Storytelling with Data, gives explanations and examples.\n\nIf you have time, watch from 11:48 to 28:41 (about 17 minutes). This segment will play automatically in the clip below.\nIf you’re in a rush, the most important sections (about 10 minutes) are:\n\n13:57 - 15:12 (Sparing use of color)\n18:44 - 21:25; see also the infographic of color in culture\n22:25 - 23:10 (Color blindness - to view your graphs as someone with color blindness would, take a screen shot and try the simulator online\n23:50 - 28:41 (Consistency)\n\n\n\n\n\nWhich of the following are lessons from the Storytelling with Data video on Being Clever with Color? Mark all correct answers “TRUE”.\nColor grabs attention. TRUEFALSE\nColor signals where to look. TRUEFALSE\nColor should be used sparingly. TRUEFALSE\nToo much color, and everything is highlighted - the viewer does not know what to pay attention to. TRUEFALSE\nColor can show quantitative values, too, not just categories. TRUEFALSE\nColors have tone and meaning. TRUEFALSE\nNot everyone can see colors. TRUEFALSE\nUse color consistently. TRUEFALSE\nSimple black and white is always the best choice. TRUEFALSE\n\n\n\nClick for explanations of solutions above.\n\n\nThe human eye is naturally drawn to colors.\nSince color grabs attention, we expect it to direct us toward the most important stuff that is worthy of our attention.\nBut…Too much color, and everything is highlighted - the viewer does not know what to pay attention to.\nAlso, remember that the meaning and interpretation of colors varies by culture.\nSince some people can not see color, use color-blind friendly palettes and redundant coding (shape, text) where possible without cluttering the figure.\nInconsistent use of color can be confusing and distracting.\nSometimes black and white is great - but often color helps you tell a story!",
    "crumbs": [
      "Home",
      "Visualization",
      "Designing Data Visualizations"
    ]
  },
  {
    "objectID": "quarto/graphics-design.html#when-things-overlap",
    "href": "quarto/graphics-design.html#when-things-overlap",
    "title": "Graphics: Design Effective Visualizations",
    "section": "When Things Overlap",
    "text": "When Things Overlap\nEspecially when graphing variables with long category values, you may end up with ugly, illegible overlapping labels. Two easy solutions, in order of preference, are to switch x and y coordinates so the “long” labels are on the y axis (in R, this resizes the plot area so that labels fit); or, to rotate the too-long labels, which eliminates the overlap but makes them harder to read than horizontal text.\nSometimes a title or axis label is too long and runs off the edge of the figure. Using a smaller font is not often an ideal solution. If you can’t just use a shorter label, consider adding line breaks.",
    "crumbs": [
      "Home",
      "Visualization",
      "Designing Data Visualizations"
    ]
  },
  {
    "objectID": "quarto/graphics-design.html#critique-practice",
    "href": "quarto/graphics-design.html#critique-practice",
    "title": "Graphics: Design Effective Visualizations",
    "section": "Critique Practice",
    "text": "Critique Practice\nTry using what you have learned to provide a constructive critique of an example.\nConsider the graphic below. At a glance, what do you think it means? Looking more carefully, what do you notice?\n\nPause to think: What changes, if any, would you suggest to the figure’s creator to make it clearer and easier to understand? Be sure to be constructive - gently explain any problems and suggest solutions.",
    "crumbs": [
      "Home",
      "Visualization",
      "Designing Data Visualizations"
    ]
  },
  {
    "objectID": "quarto/graphics-design.html#video-review",
    "href": "quarto/graphics-design.html#video-review",
    "title": "Graphics: Design Effective Visualizations",
    "section": "Video Review",
    "text": "Video Review\nWow, that was quite a lot of information! If you could use a brief review from a different point of view, check out the optional video from Kristen Sosulski",
    "crumbs": [
      "Home",
      "Visualization",
      "Designing Data Visualizations"
    ]
  },
  {
    "objectID": "quarto/graphics-design.html#recap-reflect-12-tips",
    "href": "quarto/graphics-design.html#recap-reflect-12-tips",
    "title": "Graphics: Design Effective Visualizations",
    "section": "Recap & Reflect: 12 Tips",
    "text": "Recap & Reflect: 12 Tips\nThe 4-minute video below summarizes design principles for data visualization in the form of 12 tips.\nAs you watch, make note of one or two tips that strike you (you’ll report your thoughts in the next section). Is there one that nicely summarizes an idea introduced earlier in the section? One you’re not sure about? One that you think is incredibly important? One that makes you say “Aha! Now I see why I loved/hated that visualization!”",
    "crumbs": [
      "Home",
      "Visualization",
      "Designing Data Visualizations"
    ]
  },
  {
    "objectID": "quarto/graphics-design.html#pause-for-reflection",
    "href": "quarto/graphics-design.html#pause-for-reflection",
    "title": "Graphics: Design Effective Visualizations",
    "section": "Pause for Reflection",
    "text": "Pause for Reflection\nTake a moment to reflect on what you learned. Which Tip do you remember most clearly, think is most important, or want to challenge? Consider making a few notes for yourself for the future (you’ll have to make and critique plenty of graphics in your homework assignments).",
    "crumbs": [
      "Home",
      "Visualization",
      "Designing Data Visualizations"
    ]
  },
  {
    "objectID": "quarto/exercises.html",
    "href": "quarto/exercises.html",
    "title": "Web Exercises",
    "section": "",
    "text": "This is a Web Exercise template created by the #PsyTeachR team at the University of Glasgow, based on ideas from Software Carpentry. This template shows how instructors can easily create interactive web documents that students can use in self-guided learning.\nThe {webexercises} package provides a number of functions that you use in inline R code or through code chunk options to create HTML widgets (text boxes, pull down menus, buttons that reveal hidden content). Examples are given below. Knit this file to HTML to see how it works.\nNOTE: To use the widgets in the compiled HTML file, you need to have a JavaScript-enabled browser."
  },
  {
    "objectID": "quarto/exercises.html#fill-in-the-blanks-fitb",
    "href": "quarto/exercises.html#fill-in-the-blanks-fitb",
    "title": "Web Exercises",
    "section": "Fill-In-The-Blanks (fitb())",
    "text": "Fill-In-The-Blanks (fitb())\nCreate fill-in-the-blank questions using fitb(), providing the answer as the first argument.\n\n2 + 2 is \n\nYou can also create these questions dynamically, using variables from your R session.\n\nThe square root of 4 is: \n\nThe blanks are case-sensitive; if you don’t care about case, use the argument ignore_case = TRUE.\n\nWhat is the letter after D? \n\nIf you want to ignore differences in whitespace use, use the argument ignore_ws = TRUE (which is the default) and include spaces in your answer anywhere they could be acceptable.\n\nHow do you load the tidyverse package? \n\nYou can set more than one possible correct answer by setting the answers as a vector.\n\nType a vowel: \n\nYou can use regular expressions to test answers against more complex rules.\n\nType any 3 letters:"
  },
  {
    "objectID": "quarto/exercises.html#multiple-choice-mcq",
    "href": "quarto/exercises.html#multiple-choice-mcq",
    "title": "Web Exercises",
    "section": "Multiple Choice (mcq())",
    "text": "Multiple Choice (mcq())\n\n“Never gonna give you up, never gonna: let you goturn you downrun awaylet you down”\n“I bless the rainsguess it rainssense the rain down in Africa” -Toto"
  },
  {
    "objectID": "quarto/exercises.html#true-or-false-torf",
    "href": "quarto/exercises.html#true-or-false-torf",
    "title": "Web Exercises",
    "section": "True or False (torf())",
    "text": "True or False (torf())\n\nTrue or False? You can permute values in a vector using sample(). TRUEFALSE"
  },
  {
    "objectID": "quarto/exercises.html#longer-mcqs-longmcq",
    "href": "quarto/exercises.html#longer-mcqs-longmcq",
    "title": "Web Exercises",
    "section": "Longer MCQs (longmcq())",
    "text": "Longer MCQs (longmcq())\nWhen your answers are very long, sometimes a drop-down select box gets formatted oddly. You can use longmcq() to deal with this. Since the answers are long, It’s probably best to set up the options inside an R chunk with echo=FALSE.\nWhat is a p-value?\n\n the probability that the null hypothesis is true the probability of the observed, or more extreme, data, under the assumption that the null-hypothesis is true the probability of making an error in your conclusion\n\nWhat is true about a 95% confidence interval of the mean?\n\n if you repeated the process many times, 95% of intervals calculated in this way contain the true mean there is a 95% probability that the true mean lies within this range 95% of the data fall within this range"
  },
  {
    "objectID": "quarto/exercises.html#checked-sections",
    "href": "quarto/exercises.html#checked-sections",
    "title": "Web Exercises",
    "section": "Checked sections",
    "text": "Checked sections\nCreate sections with the class webex-check to add a button that hides feedback until it is pressed. Add the class webex-box to draw a box around the section (or use your own styles).\n\nI am going to learn a lot: TRUEFALSE\nWhat is a p-value?\n\n the probability that the null hypothesis is true the probability of the observed, or more extreme, data, under the assumption that the null-hypothesis is true the probability of making an error in your conclusion"
  },
  {
    "objectID": "quarto/exercises.html#hidden-solutions-and-hints",
    "href": "quarto/exercises.html#hidden-solutions-and-hints",
    "title": "Web Exercises",
    "section": "Hidden solutions and hints",
    "text": "Hidden solutions and hints\nYou can fence off a solution area that will be hidden behind a button using hide() before the solution and unhide() after, each as inline R code. Pass the text you want to appear on the button to the hide() function.\nIf the solution is an RMarkdown code chunk, instead of using hide() and unhide(), simply set the webex.hide chunk option to TRUE, or set it to the string you wish to display on the button.\nRecreate the scatterplot below, using the built-in cars dataset.\n\n\n\n\n\n\n\n\n\n\n\nI need a hint\n\nSee the documentation for plot() (?plot)\n\n\n\n\n\nClick here to see the solution\n\nplot(cars$speed, cars$dist)"
  },
  {
    "objectID": "quarto/graphics-choose.html",
    "href": "quarto/graphics-choose.html",
    "title": "Graphics: Choose a Graph Type",
    "section": "",
    "text": "After this tutorial, you will:\n\nDistinguish variable types: quantitative, categorical (nominal, ordinal, interval, ratio); explanatory, response, covariate.\nChoose an appropriate graphical display for a specified combination of variables.\n(Continue to) critique statistical graphics based on design principles.\n\nNote: You do NOT have to memorize all the information in this tutorial. Review it now, but know you will probably return to this tutorial for later reference. Your goal should be to finish with a basic idea of which graph types should be used for which variable types. Notice that the “Gallery” sections in the navigation bar are labeled by which variable types are to be shown!\nAt the end, you might want to finish with your own notes filling in a table like the one below:\n\n\n\n\n\nVariables\nGraphs\n\n\n\n\nOne Quantitative\nhistogram, density plot, …\n\n\nOne Categorical\n…\n\n\n…\n…",
    "crumbs": [
      "Home",
      "Visualization",
      "Choosing a Graph Type"
    ]
  },
  {
    "objectID": "quarto/graphics-choose.html#section-learning-outcomes",
    "href": "quarto/graphics-choose.html#section-learning-outcomes",
    "title": "Graphics: Choose a Graph Type",
    "section": "",
    "text": "After this tutorial, you will:\n\nDistinguish variable types: quantitative, categorical (nominal, ordinal, interval, ratio); explanatory, response, covariate.\nChoose an appropriate graphical display for a specified combination of variables.\n(Continue to) critique statistical graphics based on design principles.\n\nNote: You do NOT have to memorize all the information in this tutorial. Review it now, but know you will probably return to this tutorial for later reference. Your goal should be to finish with a basic idea of which graph types should be used for which variable types. Notice that the “Gallery” sections in the navigation bar are labeled by which variable types are to be shown!\nAt the end, you might want to finish with your own notes filling in a table like the one below:\n\n\n\n\n\nVariables\nGraphs\n\n\n\n\nOne Quantitative\nhistogram, density plot, …\n\n\nOne Categorical\n…\n\n\n…\n…",
    "crumbs": [
      "Home",
      "Visualization",
      "Choosing a Graph Type"
    ]
  },
  {
    "objectID": "quarto/graphics-choose.html#text-reference",
    "href": "quarto/graphics-choose.html#text-reference",
    "title": "Graphics: Choose a Graph Type",
    "section": "Text Reference",
    "text": "Text Reference\n\nBeyond Multiple Linear Regression Ch. 1.5\nEcological Models & Data in R Ch. 2 discusses graphics, but is not recommended as the approach to reading in data, writing R code, and generating graphs in R is very different to that used in this course.\nA comprehensive, and free, supplemental reference is Fundamentals of Data Visualization by Claus Wilke",
    "crumbs": [
      "Home",
      "Visualization",
      "Choosing a Graph Type"
    ]
  },
  {
    "objectID": "quarto/graphics-choose.html#motivation-imagine-first",
    "href": "quarto/graphics-choose.html#motivation-imagine-first",
    "title": "Graphics: Choose a Graph Type",
    "section": "Motivation: Imagine First!",
    "text": "Motivation: Imagine First!\nFigures are a crucial tool for exploring your data and communicating what you learn from the data.\nWhether you are doing a quick check to assess basic features of a dataset or creating a key figure for an important presentation, the best practice is to work thoughtfully. You already learned about creating graphics by I.C.E.E:\n\nThe I.C.E.E. method:\n\nImagine how you want your graph to look, before you\nCode. Once you have the basic starting point,\nEvaluate your work, and\nElaborate (refine it).\n\nRepeat until the figure is as awesome as it needs to be.\n\n\nLimiting Your Imagination\nThere is really no limit to the creative data visualizations you might dream up.\nBut there is a set of basic, workhorse graphics that statisticians and data scientists use most frequently. What are the common options and how do you choose among them?\nThe best choice depends on what kind of data you have, and also on what you want to do with it: what question are your trying to answer? What story will you tell?",
    "crumbs": [
      "Home",
      "Visualization",
      "Choosing a Graph Type"
    ]
  },
  {
    "objectID": "quarto/graphics-choose.html#goals",
    "href": "quarto/graphics-choose.html#goals",
    "title": "Graphics: Choose a Graph Type",
    "section": "Goals",
    "text": "Goals\nSpecifically, you will now focus on choosing the right type of visualization for the task at hand.\nNote that the graphs shown in this tutorial are over-simplified versions - icons, really - with missing labels, huge titles, and huge data elements. This is intentional, to evoke the look of each plot type rather than to present actual data.",
    "crumbs": [
      "Home",
      "Visualization",
      "Choosing a Graph Type"
    ]
  },
  {
    "objectID": "quarto/graphics-choose.html#variable-types",
    "href": "quarto/graphics-choose.html#variable-types",
    "title": "Graphics: Choose a Graph Type",
    "section": "Variable Types",
    "text": "Variable Types\nBefore designing a graphic, you need some data. Ideally, it will be in a tidy table, with one row per case and one column per variable.\nDifferent plots may be appropriate, depending on whether the variable is:\n\nCategorical (either nominal or ordinal) or\nQuantitative (interval or ratio)\nBeware categorical variables that are stored using numeric codes: they are still categorical!\nNote: Variables that take on discrete numeric values can be treated as either, depending mainly on whether there are a lot of possible values (treat like numeric) or few (treat like categorical)\nOther courses or disciplines may distinguish carefully between ordinal and nominal data. We often won’t, since we don’t learn distinct methods for them, but treat both as categorical.\n\nThe video below gives a concise explanation of the different variable types you need to be able to recognize.",
    "crumbs": [
      "Home",
      "Visualization",
      "Choosing a Graph Type"
    ]
  },
  {
    "objectID": "quarto/graphics-choose.html#distributions",
    "href": "quarto/graphics-choose.html#distributions",
    "title": "Graphics: Choose a Graph Type",
    "section": "DISTRIBUTIONS",
    "text": "DISTRIBUTIONS\nSometimes, you need a plot that lets you see the distribution of a single variable:\n\nWhat values does it take on?\nHow often does each value occur?\n\nSometimes these graphs present the answer to a scientific question of interest, but often they are used during exploration or model assessment to better understand a dataset and:\n\nCheck the data\n\nAre there lots of missing values?\nAre missing values encoded as 999 or -1000 or some other impossible value instead of being marked as “NA”?\n\nVerify whether the variable’s distribution matches expectations (for example, symmetry, etc.)",
    "crumbs": [
      "Home",
      "Visualization",
      "Choosing a Graph Type"
    ]
  },
  {
    "objectID": "quarto/graphics-choose.html#gallery-one-categorical-variable",
    "href": "quarto/graphics-choose.html#gallery-one-categorical-variable",
    "title": "Graphics: Choose a Graph Type",
    "section": "Gallery: One Categorical Variable",
    "text": "Gallery: One Categorical Variable\n\nConsider your Audience\nTo show one categorical variable, we will mainly use bar charts. You might also consider lollipop/Cleveland dot plots, or pie graphs.\n\n\n\n\n\n\n\n\n\n\n\nBar Graph\n\n\n\n\n\n\n\n\n\n\nCan show either counts, proportions, or percentages\nEasy to see which categories have more/fewer observations\n\n\n\n\n\n\n\n\n\n\n\nCleveland Dot Plot\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMain difference is whether the “sticks” are drawn (Lollipop) or not (Cleveland Dot)\nMuch like a bar chart, but using dots or lollipops to mark the count or proportion in each category\nWork well when there are many categories to be ranked by frequency\n\n\n\nPie Chart\n\n\n\n\n\n\n\n\n\n\nDisplay proportions, not counts\nUnpopular with many statisticians and data scientists because…\n\nHard to see which categories have more/fewer observation when proportions similar\nTemptation to clutter them up with annotation (for example, percentage for each slice)\nCan be inefficient use of space on rectangular page\n\nOften easier to interpret when there are few categories",
    "crumbs": [
      "Home",
      "Visualization",
      "Choosing a Graph Type"
    ]
  },
  {
    "objectID": "quarto/graphics-choose.html#gallery-one-quantitative-variable",
    "href": "quarto/graphics-choose.html#gallery-one-quantitative-variable",
    "title": "Graphics: Choose a Graph Type",
    "section": "Gallery: One Quantitative Variable",
    "text": "Gallery: One Quantitative Variable\n\nDotplot\n\n\n\n\n\n\n\n\n\n\nIntuitive representation: x-axis shows range of variable values, and dots are data points\nAs the idea is to show one dot per observation, may not work well for huge datasets\n\n\n\nHistogram\n\n\n\n\n\n\n\n\n\n\nRange of variable values is divided into bins, then height of each bar corresponds to the number of observations in the bin\nEffective way to examine the shape of a distribution\nChoosing the number of bins to use is tricky: too many, and the shape is jagged; too few over-smooths (peaks blend together). Not sure? Find a number of bins that is definitely too few, and one that is definitely too many, and then try to settle on an in-between value that best shows the real shape of the distribution without over-smoothing.\n\n\n\nDensity Plot\n\n\n\n\n\n\n\n\n\n\nLike a smoothed version of a histogram (obtained by kernel density estimation, if you want to look up mathematical details)\nCaution: for small datasets, the density plot may show “peaks” that really correspond to one or a few observations\nCan only show density (relative frequency of observation), not counts\n\n\n\nQQ Plot\n\n\n\n\n\n\n\n\n\n\n“Q-Q Plot” is short for “Quantile-Quantile Plot”\nIn some cases, we want to examine the shape of a variable’s distribution to see if it matches a theoretical expectation. For example: do the regression residuals match a normal distribution? (If that example doesn’t make sense to you now - it will later in the course, don’t worry.)\nQuantile-quantile plots are one way to make this comparison. They plot the quantiles of the data as a function of the same quantiles of the expected theoretical distribution; if there’s a good match, the points should follow a line with slope = 1.\nHow close to the straight line is “close enough”? That’s the tricky part…\n\n\n\nCheck Your Understanding: One-variable plots\n\n\nWhich plot would work best to show the distribution of 75 families’ household incomes?\n\n Lollipop plot Histogram Bar chart\n\nWhich plot would work best to show the distribution of 75 families’ postal codes?\n\n Bar chart Density plot Histogram Scatter plot\n\n\n\n\n\nClick for explanations of solutions above.\n\nLollipop plots and bar graphs work better for categorical variables – they show counts or proportions (or some other summary of counts in categories). By default, there would be one lollipop or bar for each unique value of income - what a mess! Histograms and density plots, on the other hand, show the distribution of one quantitative variable. (Scatter plots are usually used to show 2 quantitative variables.)",
    "crumbs": [
      "Home",
      "Visualization",
      "Choosing a Graph Type"
    ]
  },
  {
    "objectID": "quarto/graphics-choose.html#relationships",
    "href": "quarto/graphics-choose.html#relationships",
    "title": "Graphics: Choose a Graph Type",
    "section": "RELATIONSHIPS",
    "text": "RELATIONSHIPS\nVery often, we want to examine relationships between variables, not individual variables’ distributions. This means thinking carefully about what types of variables are in the (potential) relationship, and how we can best show their values graphically.",
    "crumbs": [
      "Home",
      "Visualization",
      "Choosing a Graph Type"
    ]
  },
  {
    "objectID": "quarto/graphics-choose.html#gallery-2-3-cat.",
    "href": "quarto/graphics-choose.html#gallery-2-3-cat.",
    "title": "Graphics: Choose a Graph Type",
    "section": "Gallery: 2-3 Cat.",
    "text": "Gallery: 2-3 Cat.\n\n\n\n\n\n\n\n\n\n\nOne set of bars per “category”, colored by “groups” – shows two categorical variables at once\nGood for showing counts in each combination of categories/groups\nIt is hard to compare proportion in each group across categories, if the total number in each category differs.\n\n\nStacked Bar Graph\n\n\n\n\n\n\n\n\n\n\nSimilar to side-by-side bar\nCompared to side-by-side, it’s harder to compare proportions in each group within a category, but easier to estimate the proportion in each category.\n\n\n\nFaceted Bar Graph\n\n\n\n\n\n\n\n\n\n\nOne plot box – usually called a “panel” or “facet” – for each of a set of groups\nThink carefully about the question of interest and the relationship you want to highlight as you choose: should bar heights correspond to…\n\nNumber of observations?\nProportion of observations overall in the whole dataset?\nProportion of observations in the panel?\nSomething else?\n\n\n\n\nCombinations (Stacked bars + Facets, etc.)\nOf course, if you have 3 variables instead of just two, you can combine methods. Avoid it unless you are sure it is necessary and communicates clearly.\n\nBe sure that the resulting graph is not too complex to understand quickly, at a glance. Packing too much information into one graph sometimes means none of the info is actually communicated!\nAnd if showing proportions or percentages in such a display, be sure you understand what denominator is being used in the calculations – is it the fraction of the whole dataset, within facets, etc.?",
    "crumbs": [
      "Home",
      "Visualization",
      "Choosing a Graph Type"
    ]
  },
  {
    "objectID": "quarto/graphics-choose.html#gallery-2-3-quant.",
    "href": "quarto/graphics-choose.html#gallery-2-3-quant.",
    "title": "Graphics: Choose a Graph Type",
    "section": "Gallery: 2-3 Quant.",
    "text": "Gallery: 2-3 Quant.\n\n\n\n\n\n\n\n\n\n\nA scatterplot is the default for visualizing the relationship between two quantitative variables\nBe sure you actually have two quantitative variables! If not, another plot may be a better option\n\n\nLine Plot\n\n\n\n\n\n\n\n\n\n\nIf the x-axis variable is Time (or it otherwise makes sense to join the dots), a line can replace the dots, or be added to them\nMake sure connecting the dots makes sense in context and does not guide the eye to incorrect interpretations (for example, emphasizing outliers)\n\n\n\nAdding More Quant. Variables\nWhat if you have three or four quantitative variables whose relationships you’re curious about?\nProceed with caution!\nIt’s possible to include 3+ variables on one plot, but ideally it should still be interpretable at a glance:\n\nWhat is the main point of the figure? Is it possible to make the point without showing all 3+ variables together?\nKeep things as simple as you can while still telling the story you want to tell.\n\n\n\nScatter + Size\n\n\n\n\n\n\n\n\n\n\nYou can adjust the size of each dot in a scatter plot to correspond to the value of a third variable\nThis is especially useful when the third variable measures the size of the population being represented – for example, a scatter plot of life expectancy vs income for many countries, with point size indicating population of each country",
    "crumbs": [
      "Home",
      "Visualization",
      "Choosing a Graph Type"
    ]
  },
  {
    "objectID": "quarto/graphics-choose.html#gallery-mixed-quant.-cat.",
    "href": "quarto/graphics-choose.html#gallery-mixed-quant.-cat.",
    "title": "Graphics: Choose a Graph Type",
    "section": "Gallery: Mixed Quant. + Cat.",
    "text": "Gallery: Mixed Quant. + Cat.\nThere are several plots designed specifically to look at the distribution of a quantitative variable, grouped by a categorical variable.\n\nBoxplots\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe boxplot shows a summary of the distribution. The box spans the middle half of the data, with the line marking the median. The “whisker” lines extend to cover the range of “most of” the data, with outliers shown individually\nFor details, check out this optional explanation of how boxplots are constructed from Introduction to Modern Statistics by Mine Çetinkaya-Rundel and Johanna Hardin.\nIf your dataset is too small to estimate the median and quartiles of the data accurately, consider showing all the observations (for example, using or overlaying a jitter plot)\n\n\n\nViolin Plots\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThese show a mirrored density plot for each group\nAs for density plots, make sure you have a large enough dataset so that the bumps in the density curve don’t represent just one or a couple of observations\n\n\n\nJitter Plots\n\n\n\n\n\n\n\n\n\n\nThese show all the points in every category, “jittered” (moved slightly away from the category axis) to reduce overplotting\nIf the dataset is too large, overplotting may still be a big problem\nJitter plots are often used as an additional layer on top of boxplots or violin plots to make the size of the dataset, and the locations of individual datapoints, more visible\n\n\n\nSina Plots\n\n\n\n\n\n\n\n\n\n\nThese show all the points in every category, arranged so that the width of the point cloud corresponds to the density of observations\nIf the dataset is too large, overplotting may become an issue\nA sina plot is a bit of a hybrid between a violin plot and a jitter plot; or, a more organized, less random version of a jitter plot.\n\n\n\nFacets?\nYou can also consider making multi-panel plots with one histogram, density plot, or dotplot per facet, but comparing between facets is usually harder than comparing boxplots or violin plots on a single axis.\n\n\nCheck Your Understanding: Quant. + Cat.\nThere are some errors and inconsistencies in the chart below!\n\n\n\nchart choice infographic",
    "crumbs": [
      "Home",
      "Visualization",
      "Choosing a Graph Type"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html",
    "href": "quarto/graphics-code.html",
    "title": "Data Visualization with ggformula",
    "section": "",
    "text": "After this section, you will:\n1.Choose, and use R to create, an appropriate graphical display for a specified (combination of) variables. 3. Plan and critique statistical graphics based on design principles.\nNote: You NEED NOT memorize all the information in this section.\nReview it now, but know you will probably return to this section for later reference.\nYour goal should be to finish with a basic idea of how ggformula (gf_...()) graphics functions work, and knowing where in this section to look for examples to follow.",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#section-learning-outcomes",
    "href": "quarto/graphics-code.html#section-learning-outcomes",
    "title": "Data Visualization with ggformula",
    "section": "",
    "text": "After this section, you will:\n1.Choose, and use R to create, an appropriate graphical display for a specified (combination of) variables. 3. Plan and critique statistical graphics based on design principles.\nNote: You NEED NOT memorize all the information in this section.\nReview it now, but know you will probably return to this section for later reference.\nYour goal should be to finish with a basic idea of how ggformula (gf_...()) graphics functions work, and knowing where in this section to look for examples to follow.",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#background",
    "href": "quarto/graphics-code.html#background",
    "title": "Data Visualization with ggformula",
    "section": "Background",
    "text": "Background\n\nWhat’s a “graph”?\nA note about vocabulary: in this course, when we say “visualization” or “graph” or “plot” we mean a picture displaying data.\nSpreadsheets and tables presenting data are not included - If you are asked to “produce a graph” or “create a visualization” a table of summary statistics is not generally a desirable response.\nTables are not unimportant; they just don’t count, to us, as graphs, plots, or visualizations.\nOften a table might accompany a visualization, for additional reference and numeric values to cite…but we’d argue that it’s usually the picture that is memorable, and that tells the story.\n\n\nLibraries\nThere are many ways to generate graphics in R. Some popular packages for visualization in R include graphics (which is included in the most basic R installation) and ggplot2. If you don’t know any of those yet, don’t worry a bit (and maybe continue right to the next section). If you do know one of those other systems, read on…\nIn this course we will use ggformula, which is built on top of ggplot2 (so the graphs you create will be ggplot objects and can be modified as such). However, the syntax ggformula uses to specify input variables and settings is a bit different than ggplot2. The differences are desirable to us because:\n\nWe like consistency: ggformula input syntax is more like that of the functions we’ll be using to fit models to data\nWe often create graphics with several layers: Overlaying one graph on top of another is a bit easier in ggformula than in ggplot\n\nBecause of the variety of graphics packages in use in the R ecosystem, it is highly recommended that you not do a web search to find code examples to produce a certain graph. This section, course notes, and other course materials should have all the examples that you need (and if not, request additions!). In particular, mixing together code from different graphics packages generally leads to confusing disasters.\n\n\nMotivation: Realize the Dream!\nFigures are a crucial tool for exploring your data and communicating what you learn from the data.\nWhether you are doing a quick check to assess basic features of a dataset or creating a key figure for an important presentation, the best practice is to work thoughtfully. You already learned about creating graphics by I.C.E.E:\n\nThe I.C.E.E. method:\n\nImagine how you want your graph to look, before you\nCode. Once you have the basic starting point,\nEvaluate your work, and\nElaborate (refine it).\n\nRepeat until the figure is as awesome as it needs to be.\nWhat’s the missing piece that we left for last? That’s right: the code. Not most important, but crucial.\nSpecifically, you will now focus on implementation – you have a plan in mind; now how can you do it in R?\nThis section provides a set of code examples and practice exercises, but leaves out the details of design already covered in previous sections. Here, the assumption is you know what you want, and just need the technique to create it.\nTreat this section like a reference manual: it’s more important that you know how to look stuff up here than that you spend lots of time on every topic, and you don’t need to memorize. Complete the first 4 sections if you are new to ggformula, and then refer to the others as needed and as time allows. Get used to using this site as a “manual” to look stuff up on demand.\nGraph types marked with an (o) and with their section header in italics are ones that are optional and/or more advanced - skip if you wish.",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#ggformula-strategy",
    "href": "quarto/graphics-code.html#ggformula-strategy",
    "title": "Data Visualization with ggformula",
    "section": "ggformula strategy",
    "text": "ggformula strategy\n\nTwo important questions\n\n\n\n\n\n\n\n\n\nTo get R (or any software) to create the above plot (or do anything else, really), there are two important questions you must be able to answer. Before continuing, see if you can figure out what they are.\nWhat two questions do you have in mind?\n\n\nThe Questions\nTo get R (or any software) to create the plot, there are two important questions you must be able to answer:\n\n1. What do you want the computer to do?\n\n\n2. What must the computer know in order to do that?\n\n\n\nAnswers to the questions\nTo make the scatter plot you saw before, the answers to our questions are\n\n1. What do you want the computer to do?\nA. Make a scatter plot (i.e., a plot consisting of points)\n\n\n2. What must the computer know in order to do that?\nA. The data used for the plot:\n\nThe variable to be plotted along the vertical (\\(y\\)) axis.\nThe variable to be plotted along the horizontal (\\(x\\)) axis.\nThe data set that contains the variables.\n\nWe just need to learn how to tell R these answers.",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#graphics-with-formulas",
    "href": "quarto/graphics-code.html#graphics-with-formulas",
    "title": "Data Visualization with ggformula",
    "section": "Graphics with Formulas",
    "text": "Graphics with Formulas\n\nThe Formula Template\nWe will provide answers to our two questions by filling in the boxes of this important template:\n\n\ngoal ( yyy ~ xxx , data = mydata )\n\n\n \nWe just need to identify which portions of our answers go into which boxes.\n\n\nThe Name of the Game\nIt is useful to provide names for the boxes:\n\n\ngoal (  y  ~  x  , data = mydata , …)\n\n\n \nThese names can help us remember which things go where. (The ... indicates that there are some additional input arguments we will add eventually.)\n\nOther versions\nSometimes we will add or subtract a bit from our formula. Here are some other forms we will eventually see.\n\n# simpler version\ngoal( ~ x, data = mydata )          \n# fancier version\ngoal( y ~ x | z , data = mydata )   \n# unified version\ngoal( formula , data = mydata )     \n\n\n\n\n2 Questions and the Formula Template\n \n\n\ngoal (  y  ~  x  , data = mydata )\n\n\n \n\nQ. What do you want R to do? A. goal\n\nYour answer to this question determines the function to use.\nFor a plot, the function will describe what sorts of marks to draw (points, in our example).\n\n\n\nQ. What must R know to do that? A. arguments\n\nYour answer to this question determines the inputs to the function.\nFor a plot, we must identify the variables and the data frame that contains them.\n\n\n\n\nAssembling the pieces\n\nTemplate\n \n\n\ngoal (  y  ~  x  , data = mydata )\n\n\n \n\n\nPieces\n\n\n\nbox\n\n\nfill in with\n\n\npurpose\n\n\n\n\ngoal\n\n\ngf_point\n\n\nplot some points\n\n\n\n\ny\n\n\nbirths\n\n\ny-axis variable\n\n\n\n\nx\n\n\ndate\n\n\nx-axis variable\n\n\n\n\nmydata\n\n\nBirths1978\n\n\nname of data set\n\n\n\n\n\nYour Turn\nPut each piece in its place in the template below and then run the code to create the plot.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nIf you get an “object not found” or “could not find function” error message, that indicates that you have not correctly filled in one of the four boxes from the template.\nNote: R is case sensitive, so watch your capitalization.\n\n\n\n\n\n\n\n\n\n\n\nSolution:\n\n\n\n\n\ngf_point(births ~ data, data = Births1978)\n\n\n\n\nFor reference, here are the first three rows of Births1978.\n\n\n  births       date day_of_year\n1   7716 1978-01-01           1\n2   7543 1978-01-02           2\n3   8833 1978-01-03           3\n\n\n\n\n\nUsing formulas to describe plots\n\nThe tilde (wiggle)\nThe most distinctive feature of ggformula plots is the use of formulas to describe the positional information of a plot. Formulas in R always involve the tilde character, which is easy to overlook. It looks like this:\n \n\n\n  ~  \n\n\n \nMake sure you know where the tilde is located on your computer’s keyboard! It is often near the upper left-hand corner on US keyboards.\n\n\n\n\n\n\n\n\n\n\n\nFormula shapes\nMost gf_ functions take a formula that describes the positional attributes of the plot. Using one of these functions with no arguments will show you the “shape” of the formula it requires.\n\n\nGetting help on formula shapes\nRun this code to see the formula shape for gf_point().\n\n\ngf_point() uses \n    * a formula with shape y ~ x. \n    * geom:  point \n    * key attributes:  alpha, color, size, shape, fill, group, stroke\n\nFor more information, try ?gf_point\n\n\nYou should see that gf_point()’s formula has the shape y ~ x, so the y-variable name goes before the tilde and the x-variable name goes after. (Think: “y depends on x”. Another way to remember the order is y ~ x: the y-axis label appears farther left than the x-axis label.)\n\n\nOrder matters in formulas!\nReverse the roles of the variables, changing births ~ date to date ~ births. How does the plot change?\n\n\n\n\n\n\n\n\n\n\n\nSpaces\n\n\nSize Matters\nWhat is the largest key on your keyboard?\n\n return/enter caps lock delete the space bar the arrow keys\n\n\n\nUmm…so why did I ask you that?\n\nMaybe there is a reason that the space bar key is biggest – you should use it a lot!.\n\n\n\nR, People, and Spaces\nR is not very picky about spaces.\n\nAny number of spaces is equivalent to a single space.\nSometimes (but not always) spaces are optional.\n\nMy advice is to use spaces liberally. Even if R doesn’t care, it makes your code easier for people to read.\n\nAlways put a space around things like +, *, ~ etc. (This is a place where R doesn’t care whether you have a space or not, but I recommend you do.)\nAlways put a space after each comma\nNever put a space between a function name and its parentheses (write head(data) not head (data))\nUse spaces and line breaks to make your code easy to read.\n\nMimic the examples you see in this section. And if you want a more comprehensive code style guide for R, check out the tidyverse style guide.\nBonus points if you point out my own style inconsistencies to me so I can correct them!",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#data-used",
    "href": "quarto/graphics-code.html#data-used",
    "title": "Data Visualization with ggformula",
    "section": "Data Used",
    "text": "Data Used\nSeveral datasets will be used in this section.\n\nThe Births1978 dataset contains information about the number of babies born in the U.S.A. on each day of the year 1978\nThe university_teachers dataset gives the proportion of university instructors who held different job titles (for example, Tenured Professor or Part-time Instructor), for a selection of years.\nThe NHANES dataset contains measurements from 10,000 human subjects in the National Health and Nutrition Evaluation Survey. To learn more about the data, try one or more of these (Shown for NHANES, but can do for any dataset):\n\n?NHANES (only for NHANES and other built-in R datasets)\nnames(NHANES)\nglimpse(NHANES)\ninspect(NHANES)",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#plotting-functions",
    "href": "quarto/graphics-code.html#plotting-functions",
    "title": "Data Visualization with ggformula",
    "section": "Plotting Functions",
    "text": "Plotting Functions\nThere are many gf_... functions in the ggfomula package that create different types of plots. There are also helper functions that can customize axis labels, make multi-panel plots, and more.\nJust to get an idea of what is included in the ggformula package, run the code below to get a list of all the gf_ functions that exist (not all are covered here):\n\n\n\n\n\n\n\n\nThe following sections give examples of how to use many of the gf_ functions to create graphics.",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#histograms",
    "href": "quarto/graphics-code.html#histograms",
    "title": "Data Visualization with ggformula",
    "section": "Histograms",
    "text": "Histograms\n\nHistograms require a formula with only one variable in it: ~ x. (Notice that x goes on the right side.)\nYou can change the size of the bins using either bins (the number of bins) or binwidth (the width of the bins). Experiment with different bins, trying to find balance between too many and too few. (If you don’t provide bins or binwidth information, R will just make something up. You can usually do better if you take control.)\nTo get density instead of counts on the y-axis, switch from function gf_histogram() to gf_dhistogram().\n\nTry out the code below, and adjust the number of bins to better display the distribution.",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#density-plots",
    "href": "quarto/graphics-code.html#density-plots",
    "title": "Data Visualization with ggformula",
    "section": "Density plots",
    "text": "Density plots\nA density plot is a smoothed contour tracing the shape of a dataset’s distribution. The gf_density() and gf_dens() functions produce these plots (in slightly different ways): gf_density() plots are filled-in, while gf_dens() just plots a line showing the shape of the distribution.\n\n\n\n\n\n\n\n\nOften density plots can be a nice way to show distributions of a quantitative variable for each category in a categorical variable. To do that, we add the fill input to a gf_density() call, with the form fill = ~ categorical_variable_name to change the color of the filled regions by category:\n\n\n\n\n\n\n\n\nIf you wanted to change the color of the lines in a gf_dens() plot, you would use color instead of fill:",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#boxplots",
    "href": "quarto/graphics-code.html#boxplots",
    "title": "Data Visualization with ggformula",
    "section": "Boxplots",
    "text": "Boxplots\nBoxplots are most often used to allow a quick comparison of the distribution of a quantitative variable in different groups, as shown here.\n\n\n\n\n\n\n\n\n\nWhat happens if you swap the “x” and the “y” in the formula for a boxplot? (Try it and see before answering.)\n\n Nothing. The plot looks the same. The coordinates flip (whichever variable is “y” in the formula ends up on the y-axis). An error. The quantitative variable must always be “y”, after the ~.\n\n\n\n\nClick for explanations of solution above.\n\nFor graphs where one variable is shown on the x axis and one on the y axis, swapping the order of the variables in the formula usually flips the coordinates.",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#violin-plots-o",
    "href": "quarto/graphics-code.html#violin-plots-o",
    "title": "Data Visualization with ggformula",
    "section": "Violin Plots (o)",
    "text": "Violin Plots (o)\nViolin plot construction is very similar to that of boxplots, detailed in the previous section.",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#jitter-plots-o",
    "href": "quarto/graphics-code.html#jitter-plots-o",
    "title": "Data Visualization with ggformula",
    "section": "Jitter Plots (o)",
    "text": "Jitter Plots (o)\nTo “jitter” is to slightly alter the location of points in a graph, so that instead of being overplotted, you can see individual ones more clearly.\nIt can be used on its own:\n\n\n\n\n\n\n\n\nBut more frequently is used as a layer in combination with boxplots or violin plots. We use a pipe (|&gt;) to add the jitter layer:\n\n\n\n\n\n\n\n\n\nWhat do you think might help the (awful) preceding violin/jitter plot to be more informative? Mark all correct answers TRUE.’\nMaybe adding the jitter plot just is not ideal for this data TRUEFALSE\nMaking the jittered points semi-transparent could help. TRUEFALSE\nMaking the dots in the jitter plot larger and adding color and shape by MaritalStatus could help. TRUEFALSE\nChanging the color of the jittered points so they fade into the background a bit could help. TRUEFALSE\nAdjusting the width of the jittered point-column (by making input width smaller than its default 0.4) could help. TRUEFALSE\n\n\n\nClick for explanations of solution above.\n\n\nJitter plots often work better with smaller datasets\nFor a larger dataset you may need to make the points semi-transparent (by setting input alpha, which ranges from 0-1, closer to 0).\nSometimes making the width of the jitter wider or narrower can make the plot easier to interpret (and more beautiful).\nIf a plot is already a bit overwhelming, the solution is usually not to add more variables and colors and distracting features!\n\n\n\nMaking the fixes\nCan you make it even better than this?\n\n\n\n\n\n\n\n\n\n\nBoxplots without Outliers\nIf you add a jitter plot on a boxplot, any outliers get plotted twice: once in the boxplot layer and once in the jitter layer. Not good. You can remove them from the boxplot in this case by setting outlier.shape = NA.\nTry running the example code, then adjust the jitter plot as you think is needed (color, transparency alpha, width).",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#sina-plots-o",
    "href": "quarto/graphics-code.html#sina-plots-o",
    "title": "Data Visualization with ggformula",
    "section": "Sina Plots (o)",
    "text": "Sina Plots (o)\nSimilar to a jitter plot is a sina plot – the difference is that the sina plot shapes the dot cloud to indicate data density, rather than fitting all the dots into a rectange.\nWe need the additional package ggforce to make a sina plot using the gf_sina() function.\nCheck it out…and play a bit! What does the sina plot look like overlaid on boxplots? What if you adjust size, transparency alpha, or even color?",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#ordering-groups-by-median",
    "href": "quarto/graphics-code.html#ordering-groups-by-median",
    "title": "Data Visualization with ggformula",
    "section": "Ordering Groups by Median",
    "text": "Ordering Groups by Median\nWhen plotting boxplots or violinplots (etc.), R’s default is to order the levels of the categorical variable in alphabetical order.\nAlphabetical is so rarely the order you want!\nMore often, you should order by median (or mean) value, or by some intrinsic order.\nTake the boxplots from the last example:\n\n\n\n\n\n\n\n\n\nThe alphabetical order is nonsense. We can sort the categories by median percentage using the function fct_reorder() from the forcats package.\n\n\n\n\n\n\n\n\nThe first input to fct_reorder() is the categorical variable containing the groups; the second is the quantitative variable whose median you want to order by.\nIf you want to use some other function of the second variable, say the mean() instead of median, you add the input .fun:\n\n\n\n\n\n\n\n\n(Which ends up looking about the same, in this particular case.)",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#ordering-groups-manually",
    "href": "quarto/graphics-code.html#ordering-groups-manually",
    "title": "Data Visualization with ggformula",
    "section": "Ordering Groups Manually",
    "text": "Ordering Groups Manually\nIn some cases, you may want to use some human-meaningful ordering of groups. For example, we might order the teacher titles from least to most senior: Grad students, the part-time employees, then Full-time non-tenure-track, then Full-time tenure-track, then Full-time tenured.\nThere is no easy way to tell R the required order other than just listing it out.\nA function to carry out such re-ordering is fct_relevel().\nSince the code to reorganize the levels is a bit long to do inside the plotting call, and since we usually want the same ordering every time we use such a variable, we modify the variable in the dataset before plotting.\nAdd the missing levels to the code below, then run it.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution:\n\n\n\n\n\nuniversity_teachers &lt;- university_teachers |&gt;\n  mutate(faculty_type = fct_relevel(faculty_type,\n                                    \"Graduate Student Employees\",\n                                    \"Part-Time Faculty\",\n                                    \"Full-Time Non-Tenure-Track Faculty\",\n                                    \"Full-Time Tenure-Track Faculty\",\n                                    \"Full-Time Tenured Faculty\")\n         )\n gf_boxplot(faculty_type ~  percentage, \n           data = university_teachers)",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#ordering-groups-by-frequency",
    "href": "quarto/graphics-code.html#ordering-groups-by-frequency",
    "title": "Data Visualization with ggformula",
    "section": "Ordering Groups by Frequency",
    "text": "Ordering Groups by Frequency\nFinally, we might order groups by the number of observations in each group (frequency).\nTo do this, we can use function fct_infreq().\nAdd a sina or jitter plot to the violins to verify the re-ordering:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution:\n\n\n\n\n\ngf_violin(BPSysAve ~ fct_infreq(MaritalStatus), data = NHANES) |&gt;\n  gf_jitter(color = 'grey', alpha = 0.1, width= 0.15)\n  \ngf_violin(BPSysAve ~ fct_infreq(MaritalStatus), data = NHANES) |&gt;\n  gf_sina(color = 'grey', alpha = 0.1, width= 0.15)\n(NA (missing) stays at the end, even if it’s commonly observed.)",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#scatter-plot",
    "href": "quarto/graphics-code.html#scatter-plot",
    "title": "Data Visualization with ggformula",
    "section": "Scatter Plot",
    "text": "Scatter Plot\nA simple scatter plot is created with gf_point() and has a formula like y ~ x.",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#pointline-size",
    "href": "quarto/graphics-code.html#pointline-size",
    "title": "Data Visualization with ggformula",
    "section": "Point/Line Size",
    "text": "Point/Line Size\nTo control the size of points and lines in scatter and line charts, use input size. It has a relative numeric value – larger than 1 means larger than the default.\nTry adjusting the size of the points in the plot below. You might want them bigger or smaller depending on the point you are trying to make.",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#bubble-chart-o",
    "href": "quarto/graphics-code.html#bubble-chart-o",
    "title": "Data Visualization with ggformula",
    "section": "Bubble Chart (o)",
    "text": "Bubble Chart (o)\nA bubble chart is a scatter plot where the size of the points is controlled by some third variable. This can be useful when the “dots” represent items that should be visually weighted differently - for example, one point per country (where countries have different population sizes) or one point per class (with different class sizes).\nWe use the input size = ~x where x is the name of the variable that will control the point size.\nNote that our example datasets don’t have any great examples of when this is useful – in the example below the bubble chart may not be necessary.\n\n\n\n\n\n\n\n\nWhy is this ineffective? One big reason is that the dataset is so big that the points overlap - making some of them bigger just makes it worse. Just so you can see a bubble chart, let’s redo the plot with a subsample of the data.\nThere is not usually any reason to do this with real data - you need to find a way to show it all!\nWe are showing a subset of the data here just to illustrate bubble plots, not because it’s ok to do this.",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#line-plot",
    "href": "quarto/graphics-code.html#line-plot",
    "title": "Data Visualization with ggformula",
    "section": "Line Plot",
    "text": "Line Plot\nTo plot a line instead of dots, simply use gf_line() instead of gf_point(). If you want the dots connected in the order of the rows of the dataset instead of in ascending x, you can replace gf_line() with gf_path().",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#multiple-layers-with-pipes",
    "href": "quarto/graphics-code.html#multiple-layers-with-pipes",
    "title": "Data Visualization with ggformula",
    "section": "Multiple layers with pipes |>",
    "text": "Multiple layers with pipes |&gt;\nA single plot may have multiple layers. For example, you might want a scatter plot with a trend line overlaid on it, or a histogram with a standard normal curve overlaid.\nTo create a multi-layered plot, simply append |&gt; at the end of the code for one layer and follow that with another layer. (The |&gt; symbol is called a “pipe” because it sends the results of one operation on to the next operation for further processing. We often read |&gt; as “and then…”)\n\nExercise\n\nIf you run the following code as is, you will get two separate plots.\nCombine these two layers into a single plot by appending |&gt; at the end of the first line.\nTry adding another layer for a third variable.",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#adding-lines",
    "href": "quarto/graphics-code.html#adding-lines",
    "title": "Data Visualization with ggformula",
    "section": "Adding Lines",
    "text": "Adding Lines\nThere are three helper functions to help add lines to gf_ graphics:\n\ngf_vline(xintercept = ___) (vertical line)\ngf_hline(yintercept = ___) (horizontal line)\ngf_abline(slope = ___, intercept = ___) (straight line)\n\nFor example, add a line at x = 4, one at y = 2, and one at y = x (just as a demonstration - there is not a very good reason to add the x - 4 and y = 2 reference lines to this plot…)",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#best-fit-line",
    "href": "quarto/graphics-code.html#best-fit-line",
    "title": "Data Visualization with ggformula",
    "section": "Best fit line?",
    "text": "Best fit line?\nWe could add a (simple) linear regression line to a scatter plot using the function gf_lm(), or a smooth using gf_smooth().\n\nBUT PLEASE DON’T. JUST NO. ALMOST NEVER A GOOD PLAN.\nIt looks so nice! Why is it a bad idea?\n\n\n\n\n\n\n\n\nSo why am I not allowed to use gf_lm() and gf_smooth()?\n\n The function has too many bugs and causes trouble. It is usually misleading and will contradict other parts of the data analysis I present. My prof is just mean and opinionated. Who even cares?\n\n\n\nUmm…so why is it misleading?\n\nIn most cases, our response (y) variable is expected to be associated with not just one predictor. But unless ALL the variables whose relationships you’re interested in quantifying are ALL shown in the graph, the line gf_lm() draws won’t match up with the statistical analysis you’ll do with the same data.\nIn other words, you will be showing one thing and later saying (and maybe also showing) another contradictory thing. Not ideal!\nIn the case of the smooth, it gets even more complicated. If you are modeling a relationship as linear, then showing a curve contradicts your later analysis (just like the problem with gf_lm()). If you are fitting a GLM or a GAM (where the model might estimate a nonlinear relationship), it will still almost certainly be a different one from the one that gf_smooth() will draw.\nSO adding these lines usually makes you a liar: one part of your report ends up contradicting another.",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#bar-graphs",
    "href": "quarto/graphics-code.html#bar-graphs",
    "title": "Data Visualization with ggformula",
    "section": "Bar graphs",
    "text": "Bar graphs\nBar graphs help visualize the distribution of a categorical variable, and we can create them with gf_bar().\n\n\n\n\n\n\n\n\n\nPercents and Proportions?\nWhat if we want to show the percent or proportion in each category, rather than the number of observations? gf_percents() and gf_props() to the rescue! Try changing the function from gf_bar() to gf_percents() or gf_props() and see what happens.\nYou can also add |&gt; gf_refine(coord_flip()) to swap the axes. Try that too!\nBut you CANNOT use a formula of the form y ~ x! It might seem to run, but trust me, R is ignoring your y. It knows it already needs to use the y axis to show counts (or proportions or percents) – no room for another data variable there…\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution:\n\n\n\n\n\ngf_props( ~ TVHrsDay, data = NHANES)\ngf_percents( ~ TVHrsDay, data = NHANES)\ngf_percents( ~ TVHrsDay, data = NHANES) |&gt;\n  gf_refine(coord_flip())",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#stacked-bar-graphs",
    "href": "quarto/graphics-code.html#stacked-bar-graphs",
    "title": "Data Visualization with ggformula",
    "section": "Stacked bar graphs",
    "text": "Stacked bar graphs\nWhat if, instead of one figure panel per group, you want to see a stacked bar graph for the same data? Here’s an example. You use the input:\nfill= ~ variable_name\nto specify the name of the variable that defines the groups (here, Marijuana).\nTry to see what happens if you use gf_props() or gf_percents().\n\n\n\n\n\n\n\n\n\nWhen showing a stacked bar graph with proportions, what is the default DENOMINATOR used to computing the proportions? Use the graph you just made to figure it out.\n\n The number of observations in the stack (so the parts of one bar together sum to 1) The total number of observations in the dataset (so all the parts of all the bars together sum to 1) The number of observations in the “fill” variable group (so all bar-parts of the same color sum to 1)\n\n\nArgh! That’s not usually what you want…",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#changing-the-denominator",
    "href": "quarto/graphics-code.html#changing-the-denominator",
    "title": "Data Visualization with ggformula",
    "section": "Changing the Denominator",
    "text": "Changing the Denominator\nYou can control the denominator used to compute bar graph proportions with the input denom. Its value should be a one-sided function of the form ~ x giving the role in the plot of the variable defining the groups to use as the denominator. Other options include fill and PANEL.\nIn our gf_props() plot above, we might pick x, so that the total proportion in each T.V. hours group sums to 1. Give it a try:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution:\n\n\n\n\n\ngf_props( ~ TVHrsDay, fill = ~ Marijuana, data = NHANES,\n          denom = ~ x)\n\n\n\n\nThis works generally. A shortcut in the stacked-bar-graph case is to use the input position = \"fill\" instead of denom:",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#side-by-side-bar-graphs",
    "href": "quarto/graphics-code.html#side-by-side-bar-graphs",
    "title": "Data Visualization with ggformula",
    "section": "Side-by-Side bar graphs",
    "text": "Side-by-Side bar graphs\nWhat if, instead of stacked bars, you want side-by-side bars? Simply add the additional argument\n\nposition='dodge'.\n\n\ngf_bar( ~ TVHrsDay, \n        fill = ~ Marijuana,\n        data = NHANES, \n        position = 'dodge')\n\n\n\n\n\n\n\n\nNote that if you want to change the denominator, you can use position = 'dodge' and denom = ~x together, but you can’t have position be both “stack” and “fill”.",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#pie-chart-o",
    "href": "quarto/graphics-code.html#pie-chart-o",
    "title": "Data Visualization with ggformula",
    "section": "Pie Chart (o)",
    "text": "Pie Chart (o)\nMaking nice pie charts in R is a bit of work, because most of the plotting libraries are not set up to do it well…you have to force them to do your will. Don’t say you weren’t warned! But, with a little effort, you can make decent pie charts.\nA pie chart usually doesn’t have any background elements like axis labels or gridlines. To make one, we make a bar graph with gf_bar(), put it in polar coordinates, and ensure we are using a plot template with no background elements via theme_set(theme_void()).\nStrangely enough, we want to start with a stacked bar chart colored by our variable of interest. We include 1 rather than a variable name in the formula (because we want just one stacked bar), and we add the input width=1 because we want the single bar to take up the whole width of the graph. And we swap the y-axis into polar coordinates (try removing the gf_refine() line to see how it looks before pie-ification).\n\n\n\n\n\n\n\n\nAfter creating a pie chart, make sure you revoke the “void” theme by running the code below (or your later graphs will have no visible axes or axis labels…)\n\ntheme_set(theme_minimal()) \n\nYou can see examples of available themes at: https://ggplot2.tidyverse.org/reference/ggtheme.html",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#bar-graph-pre-tabulated-o",
    "href": "quarto/graphics-code.html#bar-graph-pre-tabulated-o",
    "title": "Data Visualization with ggformula",
    "section": "Bar graph, pre-tabulated (o)",
    "text": "Bar graph, pre-tabulated (o)\nSometimes, you may be given data that is already tabulated. Instead of a dataset with one row for every case, you will have one row for every group, and a variable that gives the number of observations in each group. The university_teachers dataset is an example, with one row for each combination of job title and year.\n\nDT::datatable(university_teachers)\n\n\n\n\n\nWe can use the function gf_col to make a bar graph of pre-tabulated data. This function always expects the counts (or proportions or percentages) as the y part of the formula, and the group names as x (after the tilde).\n\n\n\n\n\n\n\n\nThis plot illustrates a common issue – category labels that overlap and become illegible. What can we do to fix it?",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#axis-labels-that-dont-fit",
    "href": "quarto/graphics-code.html#axis-labels-that-dont-fit",
    "title": "Data Visualization with ggformula",
    "section": "Axis Labels that Don’t Fit",
    "text": "Axis Labels that Don’t Fit\nSometimes - particularly for bar graphs of categorical variables with long category names - axis tick labels overlap in an ugly way. For example:\n\ngf_bar(~Education, data=NHANES)\n\n\n\n\n\n\n\n\n\nFlip the Axes\nOne simple way to solve this problem is to flip the x and y axes of the plot.\n\ngf_bar(~Education, data=NHANES) |&gt;\n  gf_refine(coord_flip())\n\n\n\n\n\n\n\n\n\n\nRotate the Labels\nAnother solution is to rotate the axis labels.\nThis is not a great solution since horizontal labels are easier to read and make your graph faster to digest!\nWe can do it, though, by modifying the angle and hjust values for the x tick labels in the plot’s theme. angle is the angle in degrees by which to rotate the labels, and hjust moves them up and down (positive hjust moves down, and negative moves up).\nFor example:\n\ngf_bar(~Education, data = NHANES) |&gt; \n    gf_theme(axis.text.x = element_text(angle = 65, hjust = 1))\n\n\n\n\n\n\n\n\n\n\nYour Turn!\nThe dataset at http://sldr.netlify.app/data/MammalMetabolicRates.csv provides data on mammal metabolic rates. Read it in and make a bar graph of the number of observations per Order (or per Family, Genus, or Species) with legible axis tick labels.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution:\n\n\n\n\n\nmmr &lt;- read_csv('http://sldr.netlify.app/data/MammalMetabolicRates.csv')\ngf_bar(~ Order, data = mmr) |&gt;\n  gf_refine(coord_flip())\n\n# to be extra: adjust the order of groups\nmmr &lt;- read_csv('http://sldr.netlify.app/data/MammalMetabolicRates.csv')\ngf_bar(~ fct_infreq(Order), data = mmr) |&gt;\n  gf_refine(coord_flip())\n# note: other solutions are possible.",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#tabulating-data-o",
    "href": "quarto/graphics-code.html#tabulating-data-o",
    "title": "Data Visualization with ggformula",
    "section": "Tabulating Data (o)",
    "text": "Tabulating Data (o)\nTo make a Cleveland dot-plot or lollipop plot, you need to switch from a dataset with one row per observation to one row per group that you want to plot. We will learn more about this kind of data wrangling later.\nHere, we want to group_by() the variable that defines the groups, and then summarize() within each group by computing the number of observations n() or the proportion or percentage of interest. Finally, always ungroup() at the end. Let’s try it with the mmr data.\nNote that I’m intentionally showing you how to do this for proportions / categorical variables and not for means of quantitative variables!\nThere’s a reason for that. Our best practice is the show all the data as much as we can. For more on why, see Bang goes the detonator plot!",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#cleveland-dotplot-o",
    "href": "quarto/graphics-code.html#cleveland-dotplot-o",
    "title": "Data Visualization with ggformula",
    "section": "Cleveland Dotplot (o)",
    "text": "Cleveland Dotplot (o)\nNote: this requires tabulated data.\nWith tabulated data, a Cleveland dot plot is just a scatter plot. But we need to order n – by what?? Give it a try!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHint 1\n\n\n\n\n\ngf_point(fct_reorder(___, ___) ~ n, data = mmr_tab)\n\n\n\n\n\n\n\n\n\n\n\nSolution:\n\n\n\n\n\ngf_point(fct_reorder(Order, n) ~ n, data = mmr_tab)",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#lollipop-plot-o",
    "href": "quarto/graphics-code.html#lollipop-plot-o",
    "title": "Data Visualization with ggformula",
    "section": "Lollipop Plot (o)",
    "text": "Lollipop Plot (o)\nThis is just a Cleveland dot plot plus “sticks”; we use gf_segment() to add the sticks. The formula for gf_segment() has the form: y + yend ~ x + xend..",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#facets-multi-panel-plots",
    "href": "quarto/graphics-code.html#facets-multi-panel-plots",
    "title": "Data Visualization with ggformula",
    "section": "Facets (Multi-panel plots)",
    "text": "Facets (Multi-panel plots)\nIf we want to look at all 20 years of birth data, overlaying the data is likely to put too much information in too little space and make it hard to tell which data is from which year. (Even with good color and symbol choices, deciphering 20 colors or 20 shapes is hard.) Instead, we can put each year in separate facet or sub-plot. By default the coordinate systems will be shared across the facets which can make comparisons across facets easier.\nThere are two ways to create facets. The simplest way is to add a vertical bar | to our formula.\n\n\n\n\n\n\n\n\nThe second way is to add on a facet command using |&gt;:\n\n\n\n\n\n\n\n\n\nPractice with facets\nEdit the plot below to:\n\nmake one facet for each day of the week (wday)\nmap color to year\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution:\n\n\n\n\n\ngf_point(births ~ day_of_year | wday, data = Births, \n         size = 0.5, color = ~ year)",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#facet-grids",
    "href": "quarto/graphics-code.html#facet-grids",
    "title": "Data Visualization with ggformula",
    "section": "Facet Grids",
    "text": "Facet Grids\nCreate a multi-panel plot that uses rows, or columns, or both in a fixed way. For example, you want to show a scatter plot of data for each of three years (three rows of facets) and four seasons (four columns of facets).\nTo do this, add another formula after the | in the formula input, as done below. Can you figure out what the formula does? If you need a hint, try changing year ~ wday to wday ~ year and see what happens…\n\n\n\n\n\n\n\n\n\nThe Facet Grid Formula\nHopefully, you figured out that the facet grid formula (the one to the right of the |) is interpreted as “row variable ~ column variable” – the resulting plot will have one row of facets for every value of the first variable, and one column of facets for every value of the second variable.\n\n\nPractice with the facet grid formula\nRecreate the plot below using gf_facet_grid(). This works much like gf_facet_wrap() and accepts a formula with one of three shapes:\n\ny ~ x (facets along both axes)\n~ x (facets only along x-axis)\ny ~ . (facets only along y-axis; notice the important dot in this one)\n\n(These three formula shapes can also be used on the right side of |.)",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#color-one-custom-choice",
    "href": "quarto/graphics-code.html#color-one-custom-choice",
    "title": "Data Visualization with ggformula",
    "section": "Color: One custom choice",
    "text": "Color: One custom choice\nWe can manually set the color of the main element of a simple plot (like the line in gf_line(), or the points in gf_point()) using the ... part of our template.\n \n\n\ngoal (  y  ~  x  , data = mydata , …)\n\n\n \nThe general form for things in ... is attribute = value.\nFor example,\n\ncolor = \"red\" or fill = \"navy\" (note quotes) can be used to change the colors of things.\n(fill is typically used for regions that are “filled in” and color for dots and lines.)\n\nAfter running the code below, find the name of an R color at datanovia and change the points in the scatterplot to be that color.",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#color-by-variable-values",
    "href": "quarto/graphics-code.html#color-by-variable-values",
    "title": "Data Visualization with ggformula",
    "section": "Color: by variable values",
    "text": "Color: by variable values\nOften, rather than manually setting all elements to be one color, we want to map color to some variable (so that each value of that variable corresponds to a distinct color).\nTo do it, we provide the input color = ~variable to our plotting function. * color = ~wday maps color to the day of the week wday.\nFor example, to map color to wday in a time-series plot of 1978 births:\n\n\n\n\n\n\n\n\nThis works for continuous variables, too, but the color scale used will be continuous instead of distinct discrete colors that are easy to tell apart. Try mapping color to day_of_year in the same time-series plot as above.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHint 1\n\n\n\n\n\ngf_point(births ~ date, data = Births1978, ...)\n\n\n\n\n\n\n\n\n\n\n\nHint 2\n\n\n\n\n\ngf_point(births ~ date, data = Births1978, color = _______)\n\n\n\n\n\n\n\n\n\n\n\nSolution:\n\n\n\n\n\ngf_point(births ~ date, data = Births1978, color = ~day_of_year)\n\n\n\n\n\nDoes it appear that the number of births is different on weekends and weekdays?\n\n more data would be needed to be able to answer yes no\n\nWhat actually happens if you omit the ~ before ~ wday? (Try it and see.)\n\n There is an error message: 'wday' not found. All the dots are the same color. It works just the same. The tilde is not required.\n\n\nEarlier, we saw how to change the fill color in density plots:\n\n\n\n\n\n\n\n\nIf you wanted to change the color of the lines in a gf_dens() plot, you would use color instead of fill:\n\n\n\n\n\n\n\n\nWe saw something similar in stacked bar graphs. So, you can color lines or fill shapes by a variable in many graph types - experiment!",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#change-color-palette",
    "href": "quarto/graphics-code.html#change-color-palette",
    "title": "Data Visualization with ggformula",
    "section": "Change Color Palette",
    "text": "Change Color Palette\nWe can use gf_theme(scale_---_---( )).\nThe first --- is often either color or fill, to choose a color palette for the color or fill in the plot. (scale_fill_---() or scale_color_---()).\nThe second --- is the name of the type of color palette to use. There are lots of options, depending on the variable type and how you want to select the colors – type ?scale_color_ and let autofill show you all the choices!\nA good set of palettes to begin with is the RColorBrewer palettes:\n\nRColorBrewer::display.brewer.all()\n\n\n\n\n\n\n\n\nThe middle group works better for categorical scales.\nTo choose one, note its name on the left. Then call (for example) scale_color_brewer(palette = 'Dark2'). You can add direction = -1 to reverse the order.\nTry the plot below, then test some other palette options (try reversing the order, too). Which do you prefer?",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#color-one-group",
    "href": "quarto/graphics-code.html#color-one-group",
    "title": "Data Visualization with ggformula",
    "section": "Color one group",
    "text": "Color one group\nSometimes you may wish to highlight the data for one particular group by greying out all other data. An easy way to do this is to create a variable that “keeps” only the group you want with fct_other(), then use gf_theme(scale_color_manual()) to set a manual color palette with two colors (grey and the other one you want).\nWhat if we want to highlight the proportion of teachers who are grad students? We make a new variable grad_stud that tells whether the faculty type is “Grad Student” or not, and color by it. We still group by faculty_type so that we get only one line per faculty type (try removing this to see the problem that happens).",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#axis-labels",
    "href": "quarto/graphics-code.html#axis-labels",
    "title": "Data Visualization with ggformula",
    "section": "Axis labels",
    "text": "Axis labels\nOne of the most common customizations you will want to make to your plots will be to change the title, subtitle, and axis labels (and maybe add a caption). All these things can be done by chaining (|&gt;) the function gf_labs() with a plot layer.\nCheck out the example below, and try changing the text labels to ones that make sense to you. Note that all the input arguments to gf_labs are optional. So, for example, you could alter only the x-axis label by chaining the command gf_labs(x = 'My X Axis Label') with your plot.",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#axis-limits",
    "href": "quarto/graphics-code.html#axis-limits",
    "title": "Data Visualization with ggformula",
    "section": "Axis limits",
    "text": "Axis limits\nYou can also gf_lims() to set custom x and y axis limits.\nHow does adjusting the axis limits alter your interpretation of the plot?",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#grid-lines-o",
    "href": "quarto/graphics-code.html#grid-lines-o",
    "title": "Data Visualization with ggformula",
    "section": "Grid Lines (o)",
    "text": "Grid Lines (o)\nGrid lines can be controlled using gf_theme() with inputs\n\npanel.grid\npanel.grid.major\npanel.grid.minor\npanel.grid.major.x\npanel.grid.major.y\npanel.grid.minor.x\npanel.grid.minor.y\n\nIf you don’t specify x or y or major or minor, your options apply to all.\nSetting any of these to element_blank() removes them. Try a few different grid options. How can you remove the minor gridlines and the vertical gridlines?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution:\n\n\n\n\n\ngf_path(percentage ~ year, color = ~faculty_type,\n        data = university_teachers) |&gt;\n  gf_theme(panel.grid.minor = element_blank(),\n           panel.grid.major.x = element_blank())",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#custom-legend-title-o",
    "href": "quarto/graphics-code.html#custom-legend-title-o",
    "title": "Data Visualization with ggformula",
    "section": "Custom Legend Title (o)",
    "text": "Custom Legend Title (o)\nSometimes you might want to remove the legend title, or replace it with a more readable one. You can do it with gf_theme(). Try the plot below with and without the gf_theme() line to see how it changes. Replace \"Activity\" with \"\" (empty quotes) to remove the legend title entirely.\n\n\n\n\n\n\n\n\nNotice, we used the function scale_fill_discrete() to adjust the legend because we had a graph with a fill color tied to a discrete (categorical) variable, PhysActive. We would replace the function scale_fill_discrete() with another depending on variable type and whether our plot call includes color = ~variable or fill = ~variable:\n\nfill by categorical variable: scale_fill_discrete()\nfill by quantitative variable: scale_fill_continouous()\ncolor by categorical variable: scale_color_discrete()\ncolor by quantitative variable: scale_color_continuous()\n\nThere are more…type ?scale_ and let autofill show you all the options!",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#remove-legend",
    "href": "quarto/graphics-code.html#remove-legend",
    "title": "Data Visualization with ggformula",
    "section": "(Re)Move Legend",
    "text": "(Re)Move Legend\nTo remove the legend entirely (make sure you really want to do this!) you chain from your plot layer to gf_theme() with input legend.position = 'none'.\n\n\n\n\n\n\n\n\nTo change the legend’s location, set legend.position to left, right, top, or bottom.",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#adjust-figure-size",
    "href": "quarto/graphics-code.html#adjust-figure-size",
    "title": "Data Visualization with ggformula",
    "section": "Adjust Figure Size",
    "text": "Adjust Figure Size\nYou will almost certainly want to adjust figure sizes in your own RMarkdown documents. There are several ways - you can set a file-wide default in the header of the Rmd file as is done in some class files - or you can set the figure size for one R code chunk in the settings in the first lines of the chunk, as shown below.\nThe values of fig-width and fig-height are expected to be given in inches, by default.\nYou can also put these settings inside the {}:",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  },
  {
    "objectID": "quarto/graphics-code.html#more",
    "href": "quarto/graphics-code.html#more",
    "title": "Data Visualization with ggformula",
    "section": "More?",
    "text": "More?\nWhew! That was a lot. You made it!!\nRemember, you don’t have to store all this information in your head now (although that will come with practice) - you will not need to make graphs without being able to access reference information (like this section).",
    "crumbs": [
      "Home",
      "Visualization",
      "Code Examples"
    ]
  }
]